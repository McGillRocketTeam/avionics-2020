
ejection_telemetry.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008c64  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003d0  08008e08  08008e08  00018e08  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080091d8  080091d8  000201f8  2**0
                  CONTENTS
  4 .ARM          00000000  080091d8  080091d8  000201f8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080091d8  080091d8  000201f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080091d8  080091d8  000191d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080091dc  080091dc  000191dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001f8  20000000  080091e0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00001bc4  200001f8  080093d8  000201f8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20001dbc  080093d8  00021dbc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201f8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00019e64  00000000  00000000  00020228  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000300e  00000000  00000000  0003a08c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00001450  00000000  00000000  0003d0a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00001328  00000000  00000000  0003e4f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00003d39  00000000  00000000  0003f818  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000115da  00000000  00000000  00043551  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000d4dfd  00000000  00000000  00054b2b  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00129928  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005f58  00000000  00000000  001299a4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001f8 	.word	0x200001f8
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08008dec 	.word	0x08008dec

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001fc 	.word	0x200001fc
 80001dc:	08008dec 	.word	0x08008dec

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003ce:	f1a4 0401 	sub.w	r4, r4, #1
 80003d2:	d1e9      	bne.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_d2f>:
 8000bb8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bbc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bc0:	bf24      	itt	cs
 8000bc2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bc6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bca:	d90d      	bls.n	8000be8 <__aeabi_d2f+0x30>
 8000bcc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000bd0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bd4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bd8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000bdc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000be0:	bf08      	it	eq
 8000be2:	f020 0001 	biceq.w	r0, r0, #1
 8000be6:	4770      	bx	lr
 8000be8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000bec:	d121      	bne.n	8000c32 <__aeabi_d2f+0x7a>
 8000bee:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000bf2:	bfbc      	itt	lt
 8000bf4:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000bf8:	4770      	bxlt	lr
 8000bfa:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000bfe:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c02:	f1c2 0218 	rsb	r2, r2, #24
 8000c06:	f1c2 0c20 	rsb	ip, r2, #32
 8000c0a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c0e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c12:	bf18      	it	ne
 8000c14:	f040 0001 	orrne.w	r0, r0, #1
 8000c18:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c1c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c20:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c24:	ea40 000c 	orr.w	r0, r0, ip
 8000c28:	fa23 f302 	lsr.w	r3, r3, r2
 8000c2c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c30:	e7cc      	b.n	8000bcc <__aeabi_d2f+0x14>
 8000c32:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c36:	d107      	bne.n	8000c48 <__aeabi_d2f+0x90>
 8000c38:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c3c:	bf1e      	ittt	ne
 8000c3e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c42:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c46:	4770      	bxne	lr
 8000c48:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c4c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c50:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c54:	4770      	bx	lr
 8000c56:	bf00      	nop

08000c58 <main>:
/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void)
{
 8000c58:	b580      	push	{r7, lr}
 8000c5a:	af00      	add	r7, sp, #0
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 8000c5c:	f000 fde8 	bl	8001830 <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 8000c60:	f000 f826 	bl	8000cb0 <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 8000c64:	f000 f8b2 	bl	8000dcc <MX_GPIO_Init>
	MX_USART2_UART_Init();
 8000c68:	f000 f880 	bl	8000d6c <MX_USART2_UART_Init>
	/* USER CODE BEGIN 2 */

	/* USER CODE END 2 */

	/* Init scheduler */
	osKernelInitialize();
 8000c6c:	f003 fb4c 	bl	8004308 <osKernelInitialize>
	/* add queues, ... */
	/* USER CODE END RTOS_QUEUES */

	/* Create the thread(s) */
	/* creation of ejection */
	ejectionHandle = osThreadNew(StartEjection, NULL, &ejection_attributes);
 8000c70:	4a09      	ldr	r2, [pc, #36]	; (8000c98 <main+0x40>)
 8000c72:	2100      	movs	r1, #0
 8000c74:	4809      	ldr	r0, [pc, #36]	; (8000c9c <main+0x44>)
 8000c76:	f003 fbaf 	bl	80043d8 <osThreadNew>
 8000c7a:	4602      	mov	r2, r0
 8000c7c:	4b08      	ldr	r3, [pc, #32]	; (8000ca0 <main+0x48>)
 8000c7e:	601a      	str	r2, [r3, #0]

	/* creation of telemetry */
	telemetryHandle = osThreadNew(StartTelemetry, NULL, &telemetry_attributes);
 8000c80:	4a08      	ldr	r2, [pc, #32]	; (8000ca4 <main+0x4c>)
 8000c82:	2100      	movs	r1, #0
 8000c84:	4808      	ldr	r0, [pc, #32]	; (8000ca8 <main+0x50>)
 8000c86:	f003 fba7 	bl	80043d8 <osThreadNew>
 8000c8a:	4602      	mov	r2, r0
 8000c8c:	4b07      	ldr	r3, [pc, #28]	; (8000cac <main+0x54>)
 8000c8e:	601a      	str	r2, [r3, #0]
	/* USER CODE BEGIN RTOS_EVENTS */
	/* add events, ... */
	/* USER CODE END RTOS_EVENTS */

	/* Start scheduler */
	osKernelStart();
 8000c90:	f003 fb6e 	bl	8004370 <osKernelStart>

	/* We should never get here as control is now taken by the scheduler */
	/* Infinite loop */
	/* USER CODE BEGIN WHILE */
	while (1)
 8000c94:	e7fe      	b.n	8000c94 <main+0x3c>
 8000c96:	bf00      	nop
 8000c98:	08008efc 	.word	0x08008efc
 8000c9c:	080014b1 	.word	0x080014b1
 8000ca0:	20001b3c 	.word	0x20001b3c
 8000ca4:	08008f20 	.word	0x08008f20
 8000ca8:	080014cd 	.word	0x080014cd
 8000cac:	20001c94 	.word	0x20001c94

08000cb0 <SystemClock_Config>:
/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void)
{
 8000cb0:	b580      	push	{r7, lr}
 8000cb2:	b0a6      	sub	sp, #152	; 0x98
 8000cb4:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000cb6:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8000cba:	2228      	movs	r2, #40	; 0x28
 8000cbc:	2100      	movs	r1, #0
 8000cbe:	4618      	mov	r0, r3
 8000cc0:	f006 f859 	bl	8006d76 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000cc4:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8000cc8:	2200      	movs	r2, #0
 8000cca:	601a      	str	r2, [r3, #0]
 8000ccc:	605a      	str	r2, [r3, #4]
 8000cce:	609a      	str	r2, [r3, #8]
 8000cd0:	60da      	str	r2, [r3, #12]
 8000cd2:	611a      	str	r2, [r3, #16]
	RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000cd4:	1d3b      	adds	r3, r7, #4
 8000cd6:	2258      	movs	r2, #88	; 0x58
 8000cd8:	2100      	movs	r1, #0
 8000cda:	4618      	mov	r0, r3
 8000cdc:	f006 f84b 	bl	8006d76 <memset>

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000ce0:	2302      	movs	r3, #2
 8000ce2:	673b      	str	r3, [r7, #112]	; 0x70
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000ce4:	2301      	movs	r3, #1
 8000ce6:	67fb      	str	r3, [r7, #124]	; 0x7c
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000ce8:	2310      	movs	r3, #16
 8000cea:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000cee:	2302      	movs	r3, #2
 8000cf0:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8000cf4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8000cf8:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8000cfc:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 8000d00:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
	RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 8000d04:	2300      	movs	r3, #0
 8000d06:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000d0a:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8000d0e:	4618      	mov	r0, r3
 8000d10:	f001 f86a 	bl	8001de8 <HAL_RCC_OscConfig>
 8000d14:	4603      	mov	r3, r0
 8000d16:	2b00      	cmp	r3, #0
 8000d18:	d001      	beq.n	8000d1e <SystemClock_Config+0x6e>
	{
		Error_Handler();
 8000d1a:	f000 fc31 	bl	8001580 <Error_Handler>
	}
	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000d1e:	230f      	movs	r3, #15
 8000d20:	65fb      	str	r3, [r7, #92]	; 0x5c
			|RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000d22:	2302      	movs	r3, #2
 8000d24:	663b      	str	r3, [r7, #96]	; 0x60
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000d26:	2300      	movs	r3, #0
 8000d28:	667b      	str	r3, [r7, #100]	; 0x64
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000d2a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000d2e:	66bb      	str	r3, [r7, #104]	; 0x68
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000d30:	2300      	movs	r3, #0
 8000d32:	66fb      	str	r3, [r7, #108]	; 0x6c

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000d34:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8000d38:	2102      	movs	r1, #2
 8000d3a:	4618      	mov	r0, r3
 8000d3c:	f001 ff6a 	bl	8002c14 <HAL_RCC_ClockConfig>
 8000d40:	4603      	mov	r3, r0
 8000d42:	2b00      	cmp	r3, #0
 8000d44:	d001      	beq.n	8000d4a <SystemClock_Config+0x9a>
	{
		Error_Handler();
 8000d46:	f000 fc1b 	bl	8001580 <Error_Handler>
	}
	PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 8000d4a:	2302      	movs	r3, #2
 8000d4c:	607b      	str	r3, [r7, #4]
	PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8000d4e:	2300      	movs	r3, #0
 8000d50:	613b      	str	r3, [r7, #16]
	if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000d52:	1d3b      	adds	r3, r7, #4
 8000d54:	4618      	mov	r0, r3
 8000d56:	f002 f9c5 	bl	80030e4 <HAL_RCCEx_PeriphCLKConfig>
 8000d5a:	4603      	mov	r3, r0
 8000d5c:	2b00      	cmp	r3, #0
 8000d5e:	d001      	beq.n	8000d64 <SystemClock_Config+0xb4>
	{
		Error_Handler();
 8000d60:	f000 fc0e 	bl	8001580 <Error_Handler>
	}
}
 8000d64:	bf00      	nop
 8000d66:	3798      	adds	r7, #152	; 0x98
 8000d68:	46bd      	mov	sp, r7
 8000d6a:	bd80      	pop	{r7, pc}

08000d6c <MX_USART2_UART_Init>:
 * @brief USART2 Initialization Function
 * @param None
 * @retval None
 */
static void MX_USART2_UART_Init(void)
{
 8000d6c:	b580      	push	{r7, lr}
 8000d6e:	af00      	add	r7, sp, #0
	/* USER CODE END USART2_Init 0 */

	/* USER CODE BEGIN USART2_Init 1 */

	/* USER CODE END USART2_Init 1 */
	huart2.Instance = USART2;
 8000d70:	4b14      	ldr	r3, [pc, #80]	; (8000dc4 <MX_USART2_UART_Init+0x58>)
 8000d72:	4a15      	ldr	r2, [pc, #84]	; (8000dc8 <MX_USART2_UART_Init+0x5c>)
 8000d74:	601a      	str	r2, [r3, #0]
	huart2.Init.BaudRate = 38400;
 8000d76:	4b13      	ldr	r3, [pc, #76]	; (8000dc4 <MX_USART2_UART_Init+0x58>)
 8000d78:	f44f 4216 	mov.w	r2, #38400	; 0x9600
 8000d7c:	605a      	str	r2, [r3, #4]
	huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000d7e:	4b11      	ldr	r3, [pc, #68]	; (8000dc4 <MX_USART2_UART_Init+0x58>)
 8000d80:	2200      	movs	r2, #0
 8000d82:	609a      	str	r2, [r3, #8]
	huart2.Init.StopBits = UART_STOPBITS_1;
 8000d84:	4b0f      	ldr	r3, [pc, #60]	; (8000dc4 <MX_USART2_UART_Init+0x58>)
 8000d86:	2200      	movs	r2, #0
 8000d88:	60da      	str	r2, [r3, #12]
	huart2.Init.Parity = UART_PARITY_NONE;
 8000d8a:	4b0e      	ldr	r3, [pc, #56]	; (8000dc4 <MX_USART2_UART_Init+0x58>)
 8000d8c:	2200      	movs	r2, #0
 8000d8e:	611a      	str	r2, [r3, #16]
	huart2.Init.Mode = UART_MODE_TX_RX;
 8000d90:	4b0c      	ldr	r3, [pc, #48]	; (8000dc4 <MX_USART2_UART_Init+0x58>)
 8000d92:	220c      	movs	r2, #12
 8000d94:	615a      	str	r2, [r3, #20]
	huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000d96:	4b0b      	ldr	r3, [pc, #44]	; (8000dc4 <MX_USART2_UART_Init+0x58>)
 8000d98:	2200      	movs	r2, #0
 8000d9a:	619a      	str	r2, [r3, #24]
	huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000d9c:	4b09      	ldr	r3, [pc, #36]	; (8000dc4 <MX_USART2_UART_Init+0x58>)
 8000d9e:	2200      	movs	r2, #0
 8000da0:	61da      	str	r2, [r3, #28]
	huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8000da2:	4b08      	ldr	r3, [pc, #32]	; (8000dc4 <MX_USART2_UART_Init+0x58>)
 8000da4:	2200      	movs	r2, #0
 8000da6:	621a      	str	r2, [r3, #32]
	huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8000da8:	4b06      	ldr	r3, [pc, #24]	; (8000dc4 <MX_USART2_UART_Init+0x58>)
 8000daa:	2200      	movs	r2, #0
 8000dac:	625a      	str	r2, [r3, #36]	; 0x24
	if (HAL_UART_Init(&huart2) != HAL_OK)
 8000dae:	4805      	ldr	r0, [pc, #20]	; (8000dc4 <MX_USART2_UART_Init+0x58>)
 8000db0:	f002 fe8c 	bl	8003acc <HAL_UART_Init>
 8000db4:	4603      	mov	r3, r0
 8000db6:	2b00      	cmp	r3, #0
 8000db8:	d001      	beq.n	8000dbe <MX_USART2_UART_Init+0x52>
	{
		Error_Handler();
 8000dba:	f000 fbe1 	bl	8001580 <Error_Handler>
	}
	/* USER CODE BEGIN USART2_Init 2 */

	/* USER CODE END USART2_Init 2 */

}
 8000dbe:	bf00      	nop
 8000dc0:	bd80      	pop	{r7, pc}
 8000dc2:	bf00      	nop
 8000dc4:	20001c9c 	.word	0x20001c9c
 8000dc8:	40004400 	.word	0x40004400

08000dcc <MX_GPIO_Init>:
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void)
{
 8000dcc:	b580      	push	{r7, lr}
 8000dce:	b08a      	sub	sp, #40	; 0x28
 8000dd0:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000dd2:	f107 0314 	add.w	r3, r7, #20
 8000dd6:	2200      	movs	r2, #0
 8000dd8:	601a      	str	r2, [r3, #0]
 8000dda:	605a      	str	r2, [r3, #4]
 8000ddc:	609a      	str	r2, [r3, #8]
 8000dde:	60da      	str	r2, [r3, #12]
 8000de0:	611a      	str	r2, [r3, #16]

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOC_CLK_ENABLE();
 8000de2:	4b3b      	ldr	r3, [pc, #236]	; (8000ed0 <MX_GPIO_Init+0x104>)
 8000de4:	695b      	ldr	r3, [r3, #20]
 8000de6:	4a3a      	ldr	r2, [pc, #232]	; (8000ed0 <MX_GPIO_Init+0x104>)
 8000de8:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8000dec:	6153      	str	r3, [r2, #20]
 8000dee:	4b38      	ldr	r3, [pc, #224]	; (8000ed0 <MX_GPIO_Init+0x104>)
 8000df0:	695b      	ldr	r3, [r3, #20]
 8000df2:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8000df6:	613b      	str	r3, [r7, #16]
 8000df8:	693b      	ldr	r3, [r7, #16]
	__HAL_RCC_GPIOF_CLK_ENABLE();
 8000dfa:	4b35      	ldr	r3, [pc, #212]	; (8000ed0 <MX_GPIO_Init+0x104>)
 8000dfc:	695b      	ldr	r3, [r3, #20]
 8000dfe:	4a34      	ldr	r2, [pc, #208]	; (8000ed0 <MX_GPIO_Init+0x104>)
 8000e00:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000e04:	6153      	str	r3, [r2, #20]
 8000e06:	4b32      	ldr	r3, [pc, #200]	; (8000ed0 <MX_GPIO_Init+0x104>)
 8000e08:	695b      	ldr	r3, [r3, #20]
 8000e0a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8000e0e:	60fb      	str	r3, [r7, #12]
 8000e10:	68fb      	ldr	r3, [r7, #12]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8000e12:	4b2f      	ldr	r3, [pc, #188]	; (8000ed0 <MX_GPIO_Init+0x104>)
 8000e14:	695b      	ldr	r3, [r3, #20]
 8000e16:	4a2e      	ldr	r2, [pc, #184]	; (8000ed0 <MX_GPIO_Init+0x104>)
 8000e18:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000e1c:	6153      	str	r3, [r2, #20]
 8000e1e:	4b2c      	ldr	r3, [pc, #176]	; (8000ed0 <MX_GPIO_Init+0x104>)
 8000e20:	695b      	ldr	r3, [r3, #20]
 8000e22:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000e26:	60bb      	str	r3, [r7, #8]
 8000e28:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8000e2a:	4b29      	ldr	r3, [pc, #164]	; (8000ed0 <MX_GPIO_Init+0x104>)
 8000e2c:	695b      	ldr	r3, [r3, #20]
 8000e2e:	4a28      	ldr	r2, [pc, #160]	; (8000ed0 <MX_GPIO_Init+0x104>)
 8000e30:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8000e34:	6153      	str	r3, [r2, #20]
 8000e36:	4b26      	ldr	r3, [pc, #152]	; (8000ed0 <MX_GPIO_Init+0x104>)
 8000e38:	695b      	ldr	r3, [r3, #20]
 8000e3a:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8000e3e:	607b      	str	r3, [r7, #4]
 8000e40:	687b      	ldr	r3, [r7, #4]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOA, buzzer_Pin|LED_Pin|main1_Pin|main2_Pin, GPIO_PIN_RESET);
 8000e42:	2200      	movs	r2, #0
 8000e44:	21f0      	movs	r1, #240	; 0xf0
 8000e46:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000e4a:	f000 ffb5 	bl	8001db8 <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOC, drogue1_Pin|drogue2_Pin, GPIO_PIN_RESET);
 8000e4e:	2200      	movs	r2, #0
 8000e50:	2130      	movs	r1, #48	; 0x30
 8000e52:	4820      	ldr	r0, [pc, #128]	; (8000ed4 <MX_GPIO_Init+0x108>)
 8000e54:	f000 ffb0 	bl	8001db8 <HAL_GPIO_WritePin>

	/*Configure GPIO pin : B1_Pin */
	GPIO_InitStruct.Pin = B1_Pin;
 8000e58:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000e5c:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000e5e:	4b1e      	ldr	r3, [pc, #120]	; (8000ed8 <MX_GPIO_Init+0x10c>)
 8000e60:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e62:	2300      	movs	r3, #0
 8000e64:	61fb      	str	r3, [r7, #28]
	HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8000e66:	f107 0314 	add.w	r3, r7, #20
 8000e6a:	4619      	mov	r1, r3
 8000e6c:	4819      	ldr	r0, [pc, #100]	; (8000ed4 <MX_GPIO_Init+0x108>)
 8000e6e:	f000 fe19 	bl	8001aa4 <HAL_GPIO_Init>

	/*Configure GPIO pins : buzzer_Pin LED_Pin main1_Pin main2_Pin */
	GPIO_InitStruct.Pin = buzzer_Pin|LED_Pin|main1_Pin|main2_Pin;
 8000e72:	23f0      	movs	r3, #240	; 0xf0
 8000e74:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e76:	2301      	movs	r3, #1
 8000e78:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e7a:	2300      	movs	r3, #0
 8000e7c:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e7e:	2300      	movs	r3, #0
 8000e80:	623b      	str	r3, [r7, #32]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000e82:	f107 0314 	add.w	r3, r7, #20
 8000e86:	4619      	mov	r1, r3
 8000e88:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000e8c:	f000 fe0a 	bl	8001aa4 <HAL_GPIO_Init>

	/*Configure GPIO pins : drogue1_Pin drogue2_Pin */
	GPIO_InitStruct.Pin = drogue1_Pin|drogue2_Pin;
 8000e90:	2330      	movs	r3, #48	; 0x30
 8000e92:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e94:	2301      	movs	r3, #1
 8000e96:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e98:	2300      	movs	r3, #0
 8000e9a:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e9c:	2300      	movs	r3, #0
 8000e9e:	623b      	str	r3, [r7, #32]
	HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000ea0:	f107 0314 	add.w	r3, r7, #20
 8000ea4:	4619      	mov	r1, r3
 8000ea6:	480b      	ldr	r0, [pc, #44]	; (8000ed4 <MX_GPIO_Init+0x108>)
 8000ea8:	f000 fdfc 	bl	8001aa4 <HAL_GPIO_Init>

	/*Configure GPIO pins : in22_Pin in21_Pin in12_Pin in11_Pin */
	GPIO_InitStruct.Pin = in22_Pin|in21_Pin|in12_Pin|in11_Pin;
 8000eac:	f44f 6370 	mov.w	r3, #3840	; 0xf00
 8000eb0:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000eb2:	2300      	movs	r3, #0
 8000eb4:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000eb6:	2300      	movs	r3, #0
 8000eb8:	61fb      	str	r3, [r7, #28]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000eba:	f107 0314 	add.w	r3, r7, #20
 8000ebe:	4619      	mov	r1, r3
 8000ec0:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000ec4:	f000 fdee 	bl	8001aa4 <HAL_GPIO_Init>

}
 8000ec8:	bf00      	nop
 8000eca:	3728      	adds	r7, #40	; 0x28
 8000ecc:	46bd      	mov	sp, r7
 8000ece:	bd80      	pop	{r7, pc}
 8000ed0:	40021000 	.word	0x40021000
 8000ed4:	48000800 	.word	0x48000800
 8000ed8:	10210000 	.word	0x10210000

08000edc <begin>:

/* USER CODE BEGIN 4 */
int begin(void){
 8000edc:	b480      	push	{r7}
 8000ede:	af00      	add	r7, sp, #0
	return 1;
 8000ee0:	2301      	movs	r3, #1
}
 8000ee2:	4618      	mov	r0, r3
 8000ee4:	46bd      	mov	sp, r7
 8000ee6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eea:	4770      	bx	lr

08000eec <readAltitude>:

float readAltitude(float local_pressure){
 8000eec:	b480      	push	{r7}
 8000eee:	b083      	sub	sp, #12
 8000ef0:	af00      	add	r7, sp, #0
 8000ef2:	ed87 0a01 	vstr	s0, [r7, #4]
	return local_pressure;
 8000ef6:	687b      	ldr	r3, [r7, #4]
 8000ef8:	ee07 3a90 	vmov	s15, r3
}
 8000efc:	eeb0 0a67 	vmov.f32	s0, s15
 8000f00:	370c      	adds	r7, #12
 8000f02:	46bd      	mov	sp, r7
 8000f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f08:	4770      	bx	lr
 8000f0a:	0000      	movs	r0, r0
 8000f0c:	0000      	movs	r0, r0
	...

08000f10 <setup>:

///Empty functions end here
#define false 0
#define true 1

void setup() {
 8000f10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000f12:	b083      	sub	sp, #12
 8000f14:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(drogue1_GPIO_Port, drogue1_Pin, GPIO_PIN_RESET);
 8000f16:	2200      	movs	r2, #0
 8000f18:	2110      	movs	r1, #16
 8000f1a:	486b      	ldr	r0, [pc, #428]	; (80010c8 <setup+0x1b8>)
 8000f1c:	f000 ff4c 	bl	8001db8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(drogue2_GPIO_Port, drogue2_Pin, GPIO_PIN_RESET);
 8000f20:	2200      	movs	r2, #0
 8000f22:	2120      	movs	r1, #32
 8000f24:	4868      	ldr	r0, [pc, #416]	; (80010c8 <setup+0x1b8>)
 8000f26:	f000 ff47 	bl	8001db8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(main1_GPIO_Port, main1_Pin, GPIO_PIN_RESET);
 8000f2a:	2200      	movs	r2, #0
 8000f2c:	2140      	movs	r1, #64	; 0x40
 8000f2e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000f32:	f000 ff41 	bl	8001db8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(main2_GPIO_Port, main2_Pin, GPIO_PIN_RESET);
 8000f36:	2200      	movs	r2, #0
 8000f38:	2180      	movs	r1, #128	; 0x80
 8000f3a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000f3e:	f000 ff3b 	bl	8001db8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(buzzer_GPIO_Port, buzzer_Pin, GPIO_PIN_RESET);
 8000f42:	2200      	movs	r2, #0
 8000f44:	2110      	movs	r1, #16
 8000f46:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000f4a:	f000 ff35 	bl	8001db8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 8000f4e:	2201      	movs	r2, #1
 8000f50:	2120      	movs	r1, #32
 8000f52:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000f56:	f000 ff2f 	bl	8001db8 <HAL_GPIO_WritePin>

	if (!begin()){
 8000f5a:	f7ff ffbf 	bl	8000edc <begin>
 8000f5e:	4603      	mov	r3, r0
 8000f60:	2b00      	cmp	r3, #0
 8000f62:	d136      	bne.n	8000fd2 <setup+0xc2>
		///printf("\r\nCould not find a valid BME280 sensor, check wiring!");
		size = sprintf((char *)Data, "Could not find a valid BME280 sensor, check wiring\n");
 8000f64:	4b59      	ldr	r3, [pc, #356]	; (80010cc <setup+0x1bc>)
 8000f66:	4a5a      	ldr	r2, [pc, #360]	; (80010d0 <setup+0x1c0>)
 8000f68:	4614      	mov	r4, r2
 8000f6a:	469c      	mov	ip, r3
 8000f6c:	f104 0e30 	add.w	lr, r4, #48	; 0x30
 8000f70:	4665      	mov	r5, ip
 8000f72:	4626      	mov	r6, r4
 8000f74:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8000f76:	6028      	str	r0, [r5, #0]
 8000f78:	6069      	str	r1, [r5, #4]
 8000f7a:	60aa      	str	r2, [r5, #8]
 8000f7c:	60eb      	str	r3, [r5, #12]
 8000f7e:	3410      	adds	r4, #16
 8000f80:	f10c 0c10 	add.w	ip, ip, #16
 8000f84:	4574      	cmp	r4, lr
 8000f86:	d1f3      	bne.n	8000f70 <setup+0x60>
 8000f88:	4663      	mov	r3, ip
 8000f8a:	4622      	mov	r2, r4
 8000f8c:	6810      	ldr	r0, [r2, #0]
 8000f8e:	6018      	str	r0, [r3, #0]
 8000f90:	2333      	movs	r3, #51	; 0x33
 8000f92:	b29a      	uxth	r2, r3
 8000f94:	4b4f      	ldr	r3, [pc, #316]	; (80010d4 <setup+0x1c4>)
 8000f96:	801a      	strh	r2, [r3, #0]
		HAL_UART_Transmit(&huart2, Data, size, 1000);
 8000f98:	4b4e      	ldr	r3, [pc, #312]	; (80010d4 <setup+0x1c4>)
 8000f9a:	881a      	ldrh	r2, [r3, #0]
 8000f9c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000fa0:	494a      	ldr	r1, [pc, #296]	; (80010cc <setup+0x1bc>)
 8000fa2:	484d      	ldr	r0, [pc, #308]	; (80010d8 <setup+0x1c8>)
 8000fa4:	f002 fde0 	bl	8003b68 <HAL_UART_Transmit>
		HAL_Delay(2000);
 8000fa8:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8000fac:	f000 fc76 	bl	800189c <HAL_Delay>

		HAL_GPIO_WritePin(buzzer_GPIO_Port, buzzer_Pin, GPIO_PIN_RESET);
 8000fb0:	2200      	movs	r2, #0
 8000fb2:	2110      	movs	r1, #16
 8000fb4:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000fb8:	f000 fefe 	bl	8001db8 <HAL_GPIO_WritePin>

		HAL_Delay(5000);
 8000fbc:	f241 3088 	movw	r0, #5000	; 0x1388
 8000fc0:	f000 fc6c 	bl	800189c <HAL_Delay>
		HAL_GPIO_WritePin(buzzer_GPIO_Port, buzzer_Pin, GPIO_PIN_RESET);
 8000fc4:	2200      	movs	r2, #0
 8000fc6:	2110      	movs	r1, #16
 8000fc8:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000fcc:	f000 fef4 	bl	8001db8 <HAL_GPIO_WritePin>
		while (1);
 8000fd0:	e7fe      	b.n	8000fd0 <setup+0xc0>
	} else {
		int i;
		size = sprintf((char *)Data, "Ejection Initialized\n");
 8000fd2:	4a3e      	ldr	r2, [pc, #248]	; (80010cc <setup+0x1bc>)
 8000fd4:	4b41      	ldr	r3, [pc, #260]	; (80010dc <setup+0x1cc>)
 8000fd6:	4615      	mov	r5, r2
 8000fd8:	461c      	mov	r4, r3
 8000fda:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000fdc:	6028      	str	r0, [r5, #0]
 8000fde:	6069      	str	r1, [r5, #4]
 8000fe0:	60aa      	str	r2, [r5, #8]
 8000fe2:	60eb      	str	r3, [r5, #12]
 8000fe4:	6820      	ldr	r0, [r4, #0]
 8000fe6:	6128      	str	r0, [r5, #16]
 8000fe8:	88a3      	ldrh	r3, [r4, #4]
 8000fea:	82ab      	strh	r3, [r5, #20]
 8000fec:	2315      	movs	r3, #21
 8000fee:	b29a      	uxth	r2, r3
 8000ff0:	4b38      	ldr	r3, [pc, #224]	; (80010d4 <setup+0x1c4>)
 8000ff2:	801a      	strh	r2, [r3, #0]
		HAL_UART_Transmit(&huart2, Data, size, 1000);
 8000ff4:	4b37      	ldr	r3, [pc, #220]	; (80010d4 <setup+0x1c4>)
 8000ff6:	881a      	ldrh	r2, [r3, #0]
 8000ff8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000ffc:	4933      	ldr	r1, [pc, #204]	; (80010cc <setup+0x1bc>)
 8000ffe:	4836      	ldr	r0, [pc, #216]	; (80010d8 <setup+0x1c8>)
 8001000:	f002 fdb2 	bl	8003b68 <HAL_UART_Transmit>
		for (i = 0 ; i < 3; i++){
 8001004:	2300      	movs	r3, #0
 8001006:	607b      	str	r3, [r7, #4]
 8001008:	e014      	b.n	8001034 <setup+0x124>
			HAL_GPIO_WritePin(buzzer_GPIO_Port, buzzer_Pin, GPIO_PIN_RESET);
 800100a:	2200      	movs	r2, #0
 800100c:	2110      	movs	r1, #16
 800100e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001012:	f000 fed1 	bl	8001db8 <HAL_GPIO_WritePin>
			HAL_Delay(100);
 8001016:	2064      	movs	r0, #100	; 0x64
 8001018:	f000 fc40 	bl	800189c <HAL_Delay>
			HAL_GPIO_WritePin(buzzer_GPIO_Port, buzzer_Pin, GPIO_PIN_RESET);
 800101c:	2200      	movs	r2, #0
 800101e:	2110      	movs	r1, #16
 8001020:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001024:	f000 fec8 	bl	8001db8 <HAL_GPIO_WritePin>
			HAL_Delay(100);
 8001028:	2064      	movs	r0, #100	; 0x64
 800102a:	f000 fc37 	bl	800189c <HAL_Delay>
		for (i = 0 ; i < 3; i++){
 800102e:	687b      	ldr	r3, [r7, #4]
 8001030:	3301      	adds	r3, #1
 8001032:	607b      	str	r3, [r7, #4]
 8001034:	687b      	ldr	r3, [r7, #4]
 8001036:	2b02      	cmp	r3, #2
 8001038:	dde7      	ble.n	800100a <setup+0xfa>
		}
	}

	for (int i = 0; i < 500; i++){
 800103a:	2300      	movs	r3, #0
 800103c:	603b      	str	r3, [r7, #0]
 800103e:	e017      	b.n	8001070 <setup+0x160>
		ground_alt += readAltitude(local_pressure/100.0); //takes sea-level pressure and reads alt 500 times
 8001040:	4b27      	ldr	r3, [pc, #156]	; (80010e0 <setup+0x1d0>)
 8001042:	edd3 7a00 	vldr	s15, [r3]
 8001046:	ed9f 7a27 	vldr	s14, [pc, #156]	; 80010e4 <setup+0x1d4>
 800104a:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800104e:	eeb0 0a66 	vmov.f32	s0, s13
 8001052:	f7ff ff4b 	bl	8000eec <readAltitude>
 8001056:	eeb0 7a40 	vmov.f32	s14, s0
 800105a:	4b23      	ldr	r3, [pc, #140]	; (80010e8 <setup+0x1d8>)
 800105c:	edd3 7a00 	vldr	s15, [r3]
 8001060:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001064:	4b20      	ldr	r3, [pc, #128]	; (80010e8 <setup+0x1d8>)
 8001066:	edc3 7a00 	vstr	s15, [r3]
	for (int i = 0; i < 500; i++){
 800106a:	683b      	ldr	r3, [r7, #0]
 800106c:	3301      	adds	r3, #1
 800106e:	603b      	str	r3, [r7, #0]
 8001070:	683b      	ldr	r3, [r7, #0]
 8001072:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8001076:	dbe3      	blt.n	8001040 <setup+0x130>
	}
	ground_alt = ground_alt/500.0; //average of alt readings
 8001078:	4b1b      	ldr	r3, [pc, #108]	; (80010e8 <setup+0x1d8>)
 800107a:	ed93 7a00 	vldr	s14, [r3]
 800107e:	eddf 6a1b 	vldr	s13, [pc, #108]	; 80010ec <setup+0x1dc>
 8001082:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001086:	4b18      	ldr	r3, [pc, #96]	; (80010e8 <setup+0x1d8>)
 8001088:	edc3 7a00 	vstr	s15, [r3]
	a = 2*3.14159*a;
 800108c:	4b18      	ldr	r3, [pc, #96]	; (80010f0 <setup+0x1e0>)
 800108e:	681b      	ldr	r3, [r3, #0]
 8001090:	4618      	mov	r0, r3
 8001092:	f7ff fa61 	bl	8000558 <__aeabi_f2d>
 8001096:	a30a      	add	r3, pc, #40	; (adr r3, 80010c0 <setup+0x1b0>)
 8001098:	e9d3 2300 	ldrd	r2, r3, [r3]
 800109c:	f7ff fab4 	bl	8000608 <__aeabi_dmul>
 80010a0:	4603      	mov	r3, r0
 80010a2:	460c      	mov	r4, r1
 80010a4:	4618      	mov	r0, r3
 80010a6:	4621      	mov	r1, r4
 80010a8:	f7ff fd86 	bl	8000bb8 <__aeabi_d2f>
 80010ac:	4602      	mov	r2, r0
 80010ae:	4b10      	ldr	r3, [pc, #64]	; (80010f0 <setup+0x1e0>)
 80010b0:	601a      	str	r2, [r3, #0]
}
 80010b2:	bf00      	nop
 80010b4:	370c      	adds	r7, #12
 80010b6:	46bd      	mov	sp, r7
 80010b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80010ba:	bf00      	nop
 80010bc:	f3af 8000 	nop.w
 80010c0:	f01b866e 	.word	0xf01b866e
 80010c4:	401921f9 	.word	0x401921f9
 80010c8:	48000800 	.word	0x48000800
 80010cc:	20001b8c 	.word	0x20001b8c
 80010d0:	08008e20 	.word	0x08008e20
 80010d4:	20001c90 	.word	0x20001c90
 80010d8:	20001c9c 	.word	0x20001c9c
 80010dc:	08008e54 	.word	0x08008e54
 80010e0:	20000000 	.word	0x20000000
 80010e4:	42c80000 	.word	0x42c80000
 80010e8:	20000214 	.word	0x20000214
 80010ec:	43fa0000 	.word	0x43fa0000
 80010f0:	20000014 	.word	0x20000014
 80010f4:	00000000 	.word	0x00000000

080010f8 <loop>:

void loop() {
 80010f8:	b590      	push	{r4, r7, lr}
 80010fa:	b083      	sub	sp, #12
 80010fc:	af00      	add	r7, sp, #0
	if (main_deployed == false){
 80010fe:	4b9c      	ldr	r3, [pc, #624]	; (8001370 <loop+0x278>)
 8001100:	681b      	ldr	r3, [r3, #0]
 8001102:	2b00      	cmp	r3, #0
 8001104:	f040 815c 	bne.w	80013c0 <loop+0x2c8>
		T = (HAL_GetTick() - t_previous_loop)/1000; //millis() = time since program start running T running time of curr loop (s)
 8001108:	f000 fbbc 	bl	8001884 <HAL_GetTick>
 800110c:	ee07 0a90 	vmov	s15, r0
 8001110:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8001114:	4b97      	ldr	r3, [pc, #604]	; (8001374 <loop+0x27c>)
 8001116:	edd3 7a00 	vldr	s15, [r3]
 800111a:	ee37 7a67 	vsub.f32	s14, s14, s15
 800111e:	eddf 6a96 	vldr	s13, [pc, #600]	; 8001378 <loop+0x280>
 8001122:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001126:	4b95      	ldr	r3, [pc, #596]	; (800137c <loop+0x284>)
 8001128:	edc3 7a00 	vstr	s15, [r3]
		t_previous_loop = HAL_GetTick(); //total time
 800112c:	f000 fbaa 	bl	8001884 <HAL_GetTick>
 8001130:	ee07 0a90 	vmov	s15, r0
 8001134:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001138:	4b8e      	ldr	r3, [pc, #568]	; (8001374 <loop+0x27c>)
 800113a:	edc3 7a00 	vstr	s15, [r3]

		alt_meas = (readAltitude(local_pressure/100) - ground_alt)*3.28084; //Measures AGL altitude in feet
 800113e:	4b90      	ldr	r3, [pc, #576]	; (8001380 <loop+0x288>)
 8001140:	edd3 7a00 	vldr	s15, [r3]
 8001144:	ed9f 7a8f 	vldr	s14, [pc, #572]	; 8001384 <loop+0x28c>
 8001148:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800114c:	eeb0 0a66 	vmov.f32	s0, s13
 8001150:	f7ff fecc 	bl	8000eec <readAltitude>
 8001154:	eeb0 7a40 	vmov.f32	s14, s0
 8001158:	4b8b      	ldr	r3, [pc, #556]	; (8001388 <loop+0x290>)
 800115a:	edd3 7a00 	vldr	s15, [r3]
 800115e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001162:	ee17 0a90 	vmov	r0, s15
 8001166:	f7ff f9f7 	bl	8000558 <__aeabi_f2d>
 800116a:	a37f      	add	r3, pc, #508	; (adr r3, 8001368 <loop+0x270>)
 800116c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001170:	f7ff fa4a 	bl	8000608 <__aeabi_dmul>
 8001174:	4603      	mov	r3, r0
 8001176:	460c      	mov	r4, r1
 8001178:	4618      	mov	r0, r3
 800117a:	4621      	mov	r1, r4
 800117c:	f7ff fd1c 	bl	8000bb8 <__aeabi_d2f>
 8001180:	4602      	mov	r2, r0
 8001182:	4b82      	ldr	r3, [pc, #520]	; (800138c <loop+0x294>)
 8001184:	601a      	str	r2, [r3, #0]

		// Low-pass filter - rocket at high speeds pressure fluctuates and affects altitude reading, usaully at a high frequency, so low pass filter filters those high freuqency changes out
		//and keeps just the overall, low frequency changes (caused by altitude change)
		alt_filtered = (1 - T * a) * alt_previous[num_meas-1] + a * T * alt_meas;
 8001186:	4b7d      	ldr	r3, [pc, #500]	; (800137c <loop+0x284>)
 8001188:	ed93 7a00 	vldr	s14, [r3]
 800118c:	4b80      	ldr	r3, [pc, #512]	; (8001390 <loop+0x298>)
 800118e:	edd3 7a00 	vldr	s15, [r3]
 8001192:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001196:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800119a:	ee37 7a67 	vsub.f32	s14, s14, s15
 800119e:	4b7d      	ldr	r3, [pc, #500]	; (8001394 <loop+0x29c>)
 80011a0:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 80011a4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80011a8:	4b79      	ldr	r3, [pc, #484]	; (8001390 <loop+0x298>)
 80011aa:	edd3 6a00 	vldr	s13, [r3]
 80011ae:	4b73      	ldr	r3, [pc, #460]	; (800137c <loop+0x284>)
 80011b0:	edd3 7a00 	vldr	s15, [r3]
 80011b4:	ee66 6aa7 	vmul.f32	s13, s13, s15
 80011b8:	4b74      	ldr	r3, [pc, #464]	; (800138c <loop+0x294>)
 80011ba:	edd3 7a00 	vldr	s15, [r3]
 80011be:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80011c2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80011c6:	4b74      	ldr	r3, [pc, #464]	; (8001398 <loop+0x2a0>)
 80011c8:	edc3 7a00 	vstr	s15, [r3]

		// Slide window of 10 measurement history.
		for (int i = 0; i < num_meas-1; i++){
 80011cc:	2300      	movs	r3, #0
 80011ce:	607b      	str	r3, [r7, #4]
 80011d0:	e00d      	b.n	80011ee <loop+0xf6>
			alt_previous[i] = alt_previous[i+1];
 80011d2:	687b      	ldr	r3, [r7, #4]
 80011d4:	3301      	adds	r3, #1
 80011d6:	4a6f      	ldr	r2, [pc, #444]	; (8001394 <loop+0x29c>)
 80011d8:	009b      	lsls	r3, r3, #2
 80011da:	4413      	add	r3, r2
 80011dc:	681a      	ldr	r2, [r3, #0]
 80011de:	496d      	ldr	r1, [pc, #436]	; (8001394 <loop+0x29c>)
 80011e0:	687b      	ldr	r3, [r7, #4]
 80011e2:	009b      	lsls	r3, r3, #2
 80011e4:	440b      	add	r3, r1
 80011e6:	601a      	str	r2, [r3, #0]
		for (int i = 0; i < num_meas-1; i++){
 80011e8:	687b      	ldr	r3, [r7, #4]
 80011ea:	3301      	adds	r3, #1
 80011ec:	607b      	str	r3, [r7, #4]
 80011ee:	687b      	ldr	r3, [r7, #4]
 80011f0:	2b08      	cmp	r3, #8
 80011f2:	ddee      	ble.n	80011d2 <loop+0xda>
		}
		alt_previous[num_meas-1] = alt_filtered;
 80011f4:	4b68      	ldr	r3, [pc, #416]	; (8001398 <loop+0x2a0>)
 80011f6:	681b      	ldr	r3, [r3, #0]
 80011f8:	4a66      	ldr	r2, [pc, #408]	; (8001394 <loop+0x29c>)
 80011fa:	6253      	str	r3, [r2, #36]	; 0x24

		// Launch Detection
		if (alt_filtered > 150 && launched == false){
 80011fc:	4b66      	ldr	r3, [pc, #408]	; (8001398 <loop+0x2a0>)
 80011fe:	edd3 7a00 	vldr	s15, [r3]
 8001202:	ed9f 7a66 	vldr	s14, [pc, #408]	; 800139c <loop+0x2a4>
 8001206:	eef4 7ac7 	vcmpe.f32	s15, s14
 800120a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800120e:	dd06      	ble.n	800121e <loop+0x126>
 8001210:	4b63      	ldr	r3, [pc, #396]	; (80013a0 <loop+0x2a8>)
 8001212:	681b      	ldr	r3, [r3, #0]
 8001214:	2b00      	cmp	r3, #0
 8001216:	d102      	bne.n	800121e <loop+0x126>
			launched = true;
 8001218:	4b61      	ldr	r3, [pc, #388]	; (80013a0 <loop+0x2a8>)
 800121a:	2201      	movs	r2, #1
 800121c:	601a      	str	r2, [r3, #0]
		}

		//Average gradient of 10 past measurements.
		average_gradient = 0;
 800121e:	4b61      	ldr	r3, [pc, #388]	; (80013a4 <loop+0x2ac>)
 8001220:	f04f 0200 	mov.w	r2, #0
 8001224:	601a      	str	r2, [r3, #0]
		for (int i = 0; i < num_meas-1; i++){
 8001226:	2300      	movs	r3, #0
 8001228:	603b      	str	r3, [r7, #0]
 800122a:	e019      	b.n	8001260 <loop+0x168>
			average_gradient += (alt_previous[i+1]- alt_previous[i]);
 800122c:	683b      	ldr	r3, [r7, #0]
 800122e:	3301      	adds	r3, #1
 8001230:	4a58      	ldr	r2, [pc, #352]	; (8001394 <loop+0x29c>)
 8001232:	009b      	lsls	r3, r3, #2
 8001234:	4413      	add	r3, r2
 8001236:	ed93 7a00 	vldr	s14, [r3]
 800123a:	4a56      	ldr	r2, [pc, #344]	; (8001394 <loop+0x29c>)
 800123c:	683b      	ldr	r3, [r7, #0]
 800123e:	009b      	lsls	r3, r3, #2
 8001240:	4413      	add	r3, r2
 8001242:	edd3 7a00 	vldr	s15, [r3]
 8001246:	ee37 7a67 	vsub.f32	s14, s14, s15
 800124a:	4b56      	ldr	r3, [pc, #344]	; (80013a4 <loop+0x2ac>)
 800124c:	edd3 7a00 	vldr	s15, [r3]
 8001250:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001254:	4b53      	ldr	r3, [pc, #332]	; (80013a4 <loop+0x2ac>)
 8001256:	edc3 7a00 	vstr	s15, [r3]
		for (int i = 0; i < num_meas-1; i++){
 800125a:	683b      	ldr	r3, [r7, #0]
 800125c:	3301      	adds	r3, #1
 800125e:	603b      	str	r3, [r7, #0]
 8001260:	683b      	ldr	r3, [r7, #0]
 8001262:	2b08      	cmp	r3, #8
 8001264:	dde2      	ble.n	800122c <loop+0x134>
		}
		if (T>0){
 8001266:	4b45      	ldr	r3, [pc, #276]	; (800137c <loop+0x284>)
 8001268:	edd3 7a00 	vldr	s15, [r3]
 800126c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001270:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001274:	dd09      	ble.n	800128a <loop+0x192>
			average_gradient /= (num_meas);
 8001276:	4b4b      	ldr	r3, [pc, #300]	; (80013a4 <loop+0x2ac>)
 8001278:	ed93 7a00 	vldr	s14, [r3]
 800127c:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 8001280:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001284:	4b47      	ldr	r3, [pc, #284]	; (80013a4 <loop+0x2ac>)
 8001286:	edc3 7a00 	vstr	s15, [r3]
		}

		// Apogee detection
		if (alt_filtered > threshold_altitude && launched && apogee_reached == false){
 800128a:	4b43      	ldr	r3, [pc, #268]	; (8001398 <loop+0x2a0>)
 800128c:	ed93 7a00 	vldr	s14, [r3]
 8001290:	4b45      	ldr	r3, [pc, #276]	; (80013a8 <loop+0x2b0>)
 8001292:	edd3 7a00 	vldr	s15, [r3]
 8001296:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800129a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800129e:	dd2d      	ble.n	80012fc <loop+0x204>
 80012a0:	4b3f      	ldr	r3, [pc, #252]	; (80013a0 <loop+0x2a8>)
 80012a2:	681b      	ldr	r3, [r3, #0]
 80012a4:	2b00      	cmp	r3, #0
 80012a6:	d029      	beq.n	80012fc <loop+0x204>
 80012a8:	4b40      	ldr	r3, [pc, #256]	; (80013ac <loop+0x2b4>)
 80012aa:	681b      	ldr	r3, [r3, #0]
 80012ac:	2b00      	cmp	r3, #0
 80012ae:	d125      	bne.n	80012fc <loop+0x204>

			if (average_gradient < -2){ //what is the purpose of this -2?
 80012b0:	4b3c      	ldr	r3, [pc, #240]	; (80013a4 <loop+0x2ac>)
 80012b2:	edd3 7a00 	vldr	s15, [r3]
 80012b6:	eeb8 7a00 	vmov.f32	s14, #128	; 0xc0000000 -2.0
 80012ba:	eef4 7ac7 	vcmpe.f32	s15, s14
 80012be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012c2:	d51b      	bpl.n	80012fc <loop+0x204>
				apogee_reached = true;
 80012c4:	4b39      	ldr	r3, [pc, #228]	; (80013ac <loop+0x2b4>)
 80012c6:	2201      	movs	r2, #1
 80012c8:	601a      	str	r2, [r3, #0]
				HAL_GPIO_WritePin(drogue1_GPIO_Port, drogue1_Pin, GPIO_PIN_SET);
 80012ca:	2201      	movs	r2, #1
 80012cc:	2110      	movs	r1, #16
 80012ce:	4838      	ldr	r0, [pc, #224]	; (80013b0 <loop+0x2b8>)
 80012d0:	f000 fd72 	bl	8001db8 <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(drogue2_GPIO_Port, drogue2_Pin, GPIO_PIN_SET);
 80012d4:	2201      	movs	r2, #1
 80012d6:	2120      	movs	r1, #32
 80012d8:	4835      	ldr	r0, [pc, #212]	; (80013b0 <loop+0x2b8>)
 80012da:	f000 fd6d 	bl	8001db8 <HAL_GPIO_WritePin>
				HAL_Delay(drogue_delay);
 80012de:	4b35      	ldr	r3, [pc, #212]	; (80013b4 <loop+0x2bc>)
 80012e0:	681b      	ldr	r3, [r3, #0]
 80012e2:	4618      	mov	r0, r3
 80012e4:	f000 fada 	bl	800189c <HAL_Delay>
					time12 = HAL_GetTick();
				}
				 */


				HAL_GPIO_WritePin(drogue1_GPIO_Port, drogue1_Pin, GPIO_PIN_RESET);
 80012e8:	2200      	movs	r2, #0
 80012ea:	2110      	movs	r1, #16
 80012ec:	4830      	ldr	r0, [pc, #192]	; (80013b0 <loop+0x2b8>)
 80012ee:	f000 fd63 	bl	8001db8 <HAL_GPIO_WritePin>
				HAL_GPIO_WritePin(drogue2_GPIO_Port, drogue2_Pin, GPIO_PIN_RESET);
 80012f2:	2200      	movs	r2, #0
 80012f4:	2120      	movs	r1, #32
 80012f6:	482e      	ldr	r0, [pc, #184]	; (80013b0 <loop+0x2b8>)
 80012f8:	f000 fd5e 	bl	8001db8 <HAL_GPIO_WritePin>
			}
		}

		// Main Deployment detection
		if (apogee_reached && alt_filtered < main_deployment && main_deployed == false){
 80012fc:	4b2b      	ldr	r3, [pc, #172]	; (80013ac <loop+0x2b4>)
 80012fe:	681b      	ldr	r3, [r3, #0]
 8001300:	2b00      	cmp	r3, #0
 8001302:	d071      	beq.n	80013e8 <loop+0x2f0>
 8001304:	4b24      	ldr	r3, [pc, #144]	; (8001398 <loop+0x2a0>)
 8001306:	ed93 7a00 	vldr	s14, [r3]
 800130a:	4b2b      	ldr	r3, [pc, #172]	; (80013b8 <loop+0x2c0>)
 800130c:	edd3 7a00 	vldr	s15, [r3]
 8001310:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001314:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001318:	d566      	bpl.n	80013e8 <loop+0x2f0>
 800131a:	4b15      	ldr	r3, [pc, #84]	; (8001370 <loop+0x278>)
 800131c:	681b      	ldr	r3, [r3, #0]
 800131e:	2b00      	cmp	r3, #0
 8001320:	d162      	bne.n	80013e8 <loop+0x2f0>
			main_deployed = true;
 8001322:	4b13      	ldr	r3, [pc, #76]	; (8001370 <loop+0x278>)
 8001324:	2201      	movs	r2, #1
 8001326:	601a      	str	r2, [r3, #0]
			HAL_GPIO_WritePin(main1_GPIO_Port, main1_Pin, GPIO_PIN_SET);
 8001328:	2201      	movs	r2, #1
 800132a:	2140      	movs	r1, #64	; 0x40
 800132c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001330:	f000 fd42 	bl	8001db8 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(main2_GPIO_Port, main2_Pin, GPIO_PIN_SET);
 8001334:	2201      	movs	r2, #1
 8001336:	2180      	movs	r1, #128	; 0x80
 8001338:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800133c:	f000 fd3c 	bl	8001db8 <HAL_GPIO_WritePin>
			HAL_Delay(main_delay);
 8001340:	4b1e      	ldr	r3, [pc, #120]	; (80013bc <loop+0x2c4>)
 8001342:	681b      	ldr	r3, [r3, #0]
 8001344:	4618      	mov	r0, r3
 8001346:	f000 faa9 	bl	800189c <HAL_Delay>
			}if(R22){
				time22 = HAL_GetTick();
			}
			 */

			HAL_GPIO_WritePin(main1_GPIO_Port, main1_Pin, GPIO_PIN_RESET);
 800134a:	2200      	movs	r2, #0
 800134c:	2140      	movs	r1, #64	; 0x40
 800134e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001352:	f000 fd31 	bl	8001db8 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(main2_GPIO_Port, main2_Pin, GPIO_PIN_RESET);
 8001356:	2200      	movs	r2, #0
 8001358:	2180      	movs	r1, #128	; 0x80
 800135a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800135e:	f000 fd2b 	bl	8001db8 <HAL_GPIO_WritePin>
 8001362:	e041      	b.n	80013e8 <loop+0x2f0>
 8001364:	f3af 8000 	nop.w
 8001368:	0abb44e5 	.word	0x0abb44e5
 800136c:	400a3f29 	.word	0x400a3f29
 8001370:	20000220 	.word	0x20000220
 8001374:	20001b50 	.word	0x20001b50
 8001378:	447a0000 	.word	0x447a0000
 800137c:	20001b54 	.word	0x20001b54
 8001380:	20000000 	.word	0x20000000
 8001384:	42c80000 	.word	0x42c80000
 8001388:	20000214 	.word	0x20000214
 800138c:	20001b44 	.word	0x20001b44
 8001390:	20000014 	.word	0x20000014
 8001394:	20001b58 	.word	0x20001b58
 8001398:	20001d20 	.word	0x20001d20
 800139c:	43160000 	.word	0x43160000
 80013a0:	2000021c 	.word	0x2000021c
 80013a4:	20001d24 	.word	0x20001d24
 80013a8:	20000004 	.word	0x20000004
 80013ac:	20000218 	.word	0x20000218
 80013b0:	48000800 	.word	0x48000800
 80013b4:	2000000c 	.word	0x2000000c
 80013b8:	20000008 	.word	0x20000008
 80013bc:	20000010 	.word	0x20000010


	}
	else{ //Longer buzz to indicate program completion

		HAL_GPIO_WritePin(buzzer_GPIO_Port, buzzer_Pin, GPIO_PIN_SET);
 80013c0:	2201      	movs	r2, #1
 80013c2:	2110      	movs	r1, #16
 80013c4:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80013c8:	f000 fcf6 	bl	8001db8 <HAL_GPIO_WritePin>
		HAL_Delay(1000);
 80013cc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80013d0:	f000 fa64 	bl	800189c <HAL_Delay>
		HAL_GPIO_WritePin(buzzer_GPIO_Port, buzzer_Pin, GPIO_PIN_RESET);
 80013d4:	2200      	movs	r2, #0
 80013d6:	2110      	movs	r1, #16
 80013d8:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80013dc:	f000 fcec 	bl	8001db8 <HAL_GPIO_WritePin>
		HAL_Delay(1000);
 80013e0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80013e4:	f000 fa5a 	bl	800189c <HAL_Delay>

	}
	//Just for debuggging.
	// printf("alt_meas = %d,  average_gradient = %d, alt_filtered = %d",alt_meas,average_gradient,alt_filtered);

	size = sprintf((char *)Data,", alt_meas: %.2d\n", alt_meas);
 80013e8:	4b28      	ldr	r3, [pc, #160]	; (800148c <loop+0x394>)
 80013ea:	681b      	ldr	r3, [r3, #0]
 80013ec:	4618      	mov	r0, r3
 80013ee:	f7ff f8b3 	bl	8000558 <__aeabi_f2d>
 80013f2:	4603      	mov	r3, r0
 80013f4:	460c      	mov	r4, r1
 80013f6:	461a      	mov	r2, r3
 80013f8:	4623      	mov	r3, r4
 80013fa:	4925      	ldr	r1, [pc, #148]	; (8001490 <loop+0x398>)
 80013fc:	4825      	ldr	r0, [pc, #148]	; (8001494 <loop+0x39c>)
 80013fe:	f006 f91f 	bl	8007640 <siprintf>
 8001402:	4603      	mov	r3, r0
 8001404:	b29a      	uxth	r2, r3
 8001406:	4b24      	ldr	r3, [pc, #144]	; (8001498 <loop+0x3a0>)
 8001408:	801a      	strh	r2, [r3, #0]
	HAL_UART_Transmit(&huart2, Data, size, 1000);
 800140a:	4b23      	ldr	r3, [pc, #140]	; (8001498 <loop+0x3a0>)
 800140c:	881a      	ldrh	r2, [r3, #0]
 800140e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001412:	4920      	ldr	r1, [pc, #128]	; (8001494 <loop+0x39c>)
 8001414:	4821      	ldr	r0, [pc, #132]	; (800149c <loop+0x3a4>)
 8001416:	f002 fba7 	bl	8003b68 <HAL_UART_Transmit>

	size = sprintf((char *)Data,", average_gradient: %.2d\n", average_gradient);
 800141a:	4b21      	ldr	r3, [pc, #132]	; (80014a0 <loop+0x3a8>)
 800141c:	681b      	ldr	r3, [r3, #0]
 800141e:	4618      	mov	r0, r3
 8001420:	f7ff f89a 	bl	8000558 <__aeabi_f2d>
 8001424:	4603      	mov	r3, r0
 8001426:	460c      	mov	r4, r1
 8001428:	461a      	mov	r2, r3
 800142a:	4623      	mov	r3, r4
 800142c:	491d      	ldr	r1, [pc, #116]	; (80014a4 <loop+0x3ac>)
 800142e:	4819      	ldr	r0, [pc, #100]	; (8001494 <loop+0x39c>)
 8001430:	f006 f906 	bl	8007640 <siprintf>
 8001434:	4603      	mov	r3, r0
 8001436:	b29a      	uxth	r2, r3
 8001438:	4b17      	ldr	r3, [pc, #92]	; (8001498 <loop+0x3a0>)
 800143a:	801a      	strh	r2, [r3, #0]
	HAL_UART_Transmit(&huart2, Data, size, 1000);
 800143c:	4b16      	ldr	r3, [pc, #88]	; (8001498 <loop+0x3a0>)
 800143e:	881a      	ldrh	r2, [r3, #0]
 8001440:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001444:	4913      	ldr	r1, [pc, #76]	; (8001494 <loop+0x39c>)
 8001446:	4815      	ldr	r0, [pc, #84]	; (800149c <loop+0x3a4>)
 8001448:	f002 fb8e 	bl	8003b68 <HAL_UART_Transmit>

	size = sprintf((char *)Data,", alt_filtered: %.2d\n", alt_filtered);
 800144c:	4b16      	ldr	r3, [pc, #88]	; (80014a8 <loop+0x3b0>)
 800144e:	681b      	ldr	r3, [r3, #0]
 8001450:	4618      	mov	r0, r3
 8001452:	f7ff f881 	bl	8000558 <__aeabi_f2d>
 8001456:	4603      	mov	r3, r0
 8001458:	460c      	mov	r4, r1
 800145a:	461a      	mov	r2, r3
 800145c:	4623      	mov	r3, r4
 800145e:	4913      	ldr	r1, [pc, #76]	; (80014ac <loop+0x3b4>)
 8001460:	480c      	ldr	r0, [pc, #48]	; (8001494 <loop+0x39c>)
 8001462:	f006 f8ed 	bl	8007640 <siprintf>
 8001466:	4603      	mov	r3, r0
 8001468:	b29a      	uxth	r2, r3
 800146a:	4b0b      	ldr	r3, [pc, #44]	; (8001498 <loop+0x3a0>)
 800146c:	801a      	strh	r2, [r3, #0]
	HAL_UART_Transmit(&huart2, Data, size, 1000);
 800146e:	4b0a      	ldr	r3, [pc, #40]	; (8001498 <loop+0x3a0>)
 8001470:	881a      	ldrh	r2, [r3, #0]
 8001472:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001476:	4907      	ldr	r1, [pc, #28]	; (8001494 <loop+0x39c>)
 8001478:	4808      	ldr	r0, [pc, #32]	; (800149c <loop+0x3a4>)
 800147a:	f002 fb75 	bl	8003b68 <HAL_UART_Transmit>

	HAL_Delay(5);
 800147e:	2005      	movs	r0, #5
 8001480:	f000 fa0c 	bl	800189c <HAL_Delay>
}
 8001484:	bf00      	nop
 8001486:	370c      	adds	r7, #12
 8001488:	46bd      	mov	sp, r7
 800148a:	bd90      	pop	{r4, r7, pc}
 800148c:	20001b44 	.word	0x20001b44
 8001490:	08008e6c 	.word	0x08008e6c
 8001494:	20001b8c 	.word	0x20001b8c
 8001498:	20001c90 	.word	0x20001c90
 800149c:	20001c9c 	.word	0x20001c9c
 80014a0:	20001d24 	.word	0x20001d24
 80014a4:	08008e80 	.word	0x08008e80
 80014a8:	20001d20 	.word	0x20001d20
 80014ac:	08008e9c 	.word	0x08008e9c

080014b0 <StartEjection>:
 * @param  argument: Not used
 * @retval None
 */
/* USER CODE END Header_StartEjection */
void StartEjection(void *argument)
{
 80014b0:	b580      	push	{r7, lr}
 80014b2:	b082      	sub	sp, #8
 80014b4:	af00      	add	r7, sp, #0
 80014b6:	6078      	str	r0, [r7, #4]
	/* USER CODE BEGIN 5 */
	/* Infinite loop */
	setup();
 80014b8:	f7ff fd2a 	bl	8000f10 <setup>

	for(;;)
	{
		loop();
 80014bc:	f7ff fe1c 	bl	80010f8 <loop>
		osDelay(500);
 80014c0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80014c4:	f003 f832 	bl	800452c <osDelay>
		loop();
 80014c8:	e7f8      	b.n	80014bc <StartEjection+0xc>
	...

080014cc <StartTelemetry>:
 * @param argument: Not used
 * @retval None
 */
/* USER CODE END Header_StartTelemetry */
void StartTelemetry(void *argument)
{
 80014cc:	b5b0      	push	{r4, r5, r7, lr}
 80014ce:	b084      	sub	sp, #16
 80014d0:	af00      	add	r7, sp, #0
 80014d2:	6078      	str	r0, [r7, #4]


			   /*TODO
			    * bno, bmp and GPS configuration (will do after we figure out the drivers)
			    */
	size = sprintf((char *)Data, "telemetry setup\n");
 80014d4:	4a1c      	ldr	r2, [pc, #112]	; (8001548 <StartTelemetry+0x7c>)
 80014d6:	4b1d      	ldr	r3, [pc, #116]	; (800154c <StartTelemetry+0x80>)
 80014d8:	4615      	mov	r5, r2
 80014da:	461c      	mov	r4, r3
 80014dc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80014de:	6028      	str	r0, [r5, #0]
 80014e0:	6069      	str	r1, [r5, #4]
 80014e2:	60aa      	str	r2, [r5, #8]
 80014e4:	60eb      	str	r3, [r5, #12]
 80014e6:	7823      	ldrb	r3, [r4, #0]
 80014e8:	742b      	strb	r3, [r5, #16]
 80014ea:	2310      	movs	r3, #16
 80014ec:	b29a      	uxth	r2, r3
 80014ee:	4b18      	ldr	r3, [pc, #96]	; (8001550 <StartTelemetry+0x84>)
 80014f0:	801a      	strh	r2, [r3, #0]
	HAL_UART_Transmit(&huart2, Data, size, 1000);
 80014f2:	4b17      	ldr	r3, [pc, #92]	; (8001550 <StartTelemetry+0x84>)
 80014f4:	881a      	ldrh	r2, [r3, #0]
 80014f6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80014fa:	4913      	ldr	r1, [pc, #76]	; (8001548 <StartTelemetry+0x7c>)
 80014fc:	4815      	ldr	r0, [pc, #84]	; (8001554 <StartTelemetry+0x88>)
 80014fe:	f002 fb33 	bl	8003b68 <HAL_UART_Transmit>


	for (int i=0; i<30; i++)
 8001502:	2300      	movs	r3, #0
 8001504:	60fb      	str	r3, [r7, #12]
 8001506:	e017      	b.n	8001538 <StartTelemetry+0x6c>

	{
		size = sprintf((char *)Data, "telemetry loop\n");
 8001508:	4a0f      	ldr	r2, [pc, #60]	; (8001548 <StartTelemetry+0x7c>)
 800150a:	4b13      	ldr	r3, [pc, #76]	; (8001558 <StartTelemetry+0x8c>)
 800150c:	4614      	mov	r4, r2
 800150e:	461d      	mov	r5, r3
 8001510:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001512:	6020      	str	r0, [r4, #0]
 8001514:	6061      	str	r1, [r4, #4]
 8001516:	60a2      	str	r2, [r4, #8]
 8001518:	60e3      	str	r3, [r4, #12]
 800151a:	230f      	movs	r3, #15
 800151c:	b29a      	uxth	r2, r3
 800151e:	4b0c      	ldr	r3, [pc, #48]	; (8001550 <StartTelemetry+0x84>)
 8001520:	801a      	strh	r2, [r3, #0]
		HAL_UART_Transmit(&huart2, Data, size, 1000);
 8001522:	4b0b      	ldr	r3, [pc, #44]	; (8001550 <StartTelemetry+0x84>)
 8001524:	881a      	ldrh	r2, [r3, #0]
 8001526:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800152a:	4907      	ldr	r1, [pc, #28]	; (8001548 <StartTelemetry+0x7c>)
 800152c:	4809      	ldr	r0, [pc, #36]	; (8001554 <StartTelemetry+0x88>)
 800152e:	f002 fb1b 	bl	8003b68 <HAL_UART_Transmit>
	for (int i=0; i<30; i++)
 8001532:	68fb      	ldr	r3, [r7, #12]
 8001534:	3301      	adds	r3, #1
 8001536:	60fb      	str	r3, [r7, #12]
 8001538:	68fb      	ldr	r3, [r7, #12]
 800153a:	2b1d      	cmp	r3, #29
 800153c:	dde4      	ble.n	8001508 <StartTelemetry+0x3c>

		osDelay(1);*/
	}
	//free(myFile);
	/* USER CODE END StartTelemetry */
}
 800153e:	bf00      	nop
 8001540:	3710      	adds	r7, #16
 8001542:	46bd      	mov	sp, r7
 8001544:	bdb0      	pop	{r4, r5, r7, pc}
 8001546:	bf00      	nop
 8001548:	20001b8c 	.word	0x20001b8c
 800154c:	08008ec0 	.word	0x08008ec0
 8001550:	20001c90 	.word	0x20001c90
 8001554:	20001c9c 	.word	0x20001c9c
 8001558:	08008ed4 	.word	0x08008ed4

0800155c <HAL_TIM_PeriodElapsedCallback>:
 * a global variable "uwTick" used as application time base.
 * @param  htim : TIM handle
 * @retval None
 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 800155c:	b580      	push	{r7, lr}
 800155e:	b082      	sub	sp, #8
 8001560:	af00      	add	r7, sp, #0
 8001562:	6078      	str	r0, [r7, #4]
	/* USER CODE BEGIN Callback 0 */

	/* USER CODE END Callback 0 */
	if (htim->Instance == TIM6) {
 8001564:	687b      	ldr	r3, [r7, #4]
 8001566:	681b      	ldr	r3, [r3, #0]
 8001568:	4a04      	ldr	r2, [pc, #16]	; (800157c <HAL_TIM_PeriodElapsedCallback+0x20>)
 800156a:	4293      	cmp	r3, r2
 800156c:	d101      	bne.n	8001572 <HAL_TIM_PeriodElapsedCallback+0x16>
		HAL_IncTick();
 800156e:	f000 f975 	bl	800185c <HAL_IncTick>
	}
	/* USER CODE BEGIN Callback 1 */

	/* USER CODE END Callback 1 */
}
 8001572:	bf00      	nop
 8001574:	3708      	adds	r7, #8
 8001576:	46bd      	mov	sp, r7
 8001578:	bd80      	pop	{r7, pc}
 800157a:	bf00      	nop
 800157c:	40001000 	.word	0x40001000

08001580 <Error_Handler>:
/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void)
{
 8001580:	b480      	push	{r7}
 8001582:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001584:	b672      	cpsid	i
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1)
 8001586:	e7fe      	b.n	8001586 <Error_Handler+0x6>

08001588 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001588:	b580      	push	{r7, lr}
 800158a:	b082      	sub	sp, #8
 800158c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800158e:	4b11      	ldr	r3, [pc, #68]	; (80015d4 <HAL_MspInit+0x4c>)
 8001590:	699b      	ldr	r3, [r3, #24]
 8001592:	4a10      	ldr	r2, [pc, #64]	; (80015d4 <HAL_MspInit+0x4c>)
 8001594:	f043 0301 	orr.w	r3, r3, #1
 8001598:	6193      	str	r3, [r2, #24]
 800159a:	4b0e      	ldr	r3, [pc, #56]	; (80015d4 <HAL_MspInit+0x4c>)
 800159c:	699b      	ldr	r3, [r3, #24]
 800159e:	f003 0301 	and.w	r3, r3, #1
 80015a2:	607b      	str	r3, [r7, #4]
 80015a4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80015a6:	4b0b      	ldr	r3, [pc, #44]	; (80015d4 <HAL_MspInit+0x4c>)
 80015a8:	69db      	ldr	r3, [r3, #28]
 80015aa:	4a0a      	ldr	r2, [pc, #40]	; (80015d4 <HAL_MspInit+0x4c>)
 80015ac:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80015b0:	61d3      	str	r3, [r2, #28]
 80015b2:	4b08      	ldr	r3, [pc, #32]	; (80015d4 <HAL_MspInit+0x4c>)
 80015b4:	69db      	ldr	r3, [r3, #28]
 80015b6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80015ba:	603b      	str	r3, [r7, #0]
 80015bc:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80015be:	2200      	movs	r2, #0
 80015c0:	210f      	movs	r1, #15
 80015c2:	f06f 0001 	mvn.w	r0, #1
 80015c6:	f000 fa43 	bl	8001a50 <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80015ca:	bf00      	nop
 80015cc:	3708      	adds	r7, #8
 80015ce:	46bd      	mov	sp, r7
 80015d0:	bd80      	pop	{r7, pc}
 80015d2:	bf00      	nop
 80015d4:	40021000 	.word	0x40021000

080015d8 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80015d8:	b580      	push	{r7, lr}
 80015da:	b08a      	sub	sp, #40	; 0x28
 80015dc:	af00      	add	r7, sp, #0
 80015de:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015e0:	f107 0314 	add.w	r3, r7, #20
 80015e4:	2200      	movs	r2, #0
 80015e6:	601a      	str	r2, [r3, #0]
 80015e8:	605a      	str	r2, [r3, #4]
 80015ea:	609a      	str	r2, [r3, #8]
 80015ec:	60da      	str	r2, [r3, #12]
 80015ee:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART2)
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	681b      	ldr	r3, [r3, #0]
 80015f4:	4a17      	ldr	r2, [pc, #92]	; (8001654 <HAL_UART_MspInit+0x7c>)
 80015f6:	4293      	cmp	r3, r2
 80015f8:	d128      	bne.n	800164c <HAL_UART_MspInit+0x74>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80015fa:	4b17      	ldr	r3, [pc, #92]	; (8001658 <HAL_UART_MspInit+0x80>)
 80015fc:	69db      	ldr	r3, [r3, #28]
 80015fe:	4a16      	ldr	r2, [pc, #88]	; (8001658 <HAL_UART_MspInit+0x80>)
 8001600:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001604:	61d3      	str	r3, [r2, #28]
 8001606:	4b14      	ldr	r3, [pc, #80]	; (8001658 <HAL_UART_MspInit+0x80>)
 8001608:	69db      	ldr	r3, [r3, #28]
 800160a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800160e:	613b      	str	r3, [r7, #16]
 8001610:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001612:	4b11      	ldr	r3, [pc, #68]	; (8001658 <HAL_UART_MspInit+0x80>)
 8001614:	695b      	ldr	r3, [r3, #20]
 8001616:	4a10      	ldr	r2, [pc, #64]	; (8001658 <HAL_UART_MspInit+0x80>)
 8001618:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800161c:	6153      	str	r3, [r2, #20]
 800161e:	4b0e      	ldr	r3, [pc, #56]	; (8001658 <HAL_UART_MspInit+0x80>)
 8001620:	695b      	ldr	r3, [r3, #20]
 8001622:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001626:	60fb      	str	r3, [r7, #12]
 8001628:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 800162a:	230c      	movs	r3, #12
 800162c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800162e:	2302      	movs	r3, #2
 8001630:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001632:	2300      	movs	r3, #0
 8001634:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001636:	2300      	movs	r3, #0
 8001638:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 800163a:	2307      	movs	r3, #7
 800163c:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800163e:	f107 0314 	add.w	r3, r7, #20
 8001642:	4619      	mov	r1, r3
 8001644:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001648:	f000 fa2c 	bl	8001aa4 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 800164c:	bf00      	nop
 800164e:	3728      	adds	r7, #40	; 0x28
 8001650:	46bd      	mov	sp, r7
 8001652:	bd80      	pop	{r7, pc}
 8001654:	40004400 	.word	0x40004400
 8001658:	40021000 	.word	0x40021000

0800165c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800165c:	b580      	push	{r7, lr}
 800165e:	b08c      	sub	sp, #48	; 0x30
 8001660:	af00      	add	r7, sp, #0
 8001662:	6078      	str	r0, [r7, #4]
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
 8001664:	2300      	movs	r3, #0
 8001666:	62fb      	str	r3, [r7, #44]	; 0x2c
  uint32_t              uwPrescalerValue = 0;
 8001668:	2300      	movs	r3, #0
 800166a:	62bb      	str	r3, [r7, #40]	; 0x28
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 800166c:	2200      	movs	r2, #0
 800166e:	6879      	ldr	r1, [r7, #4]
 8001670:	2036      	movs	r0, #54	; 0x36
 8001672:	f000 f9ed 	bl	8001a50 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001676:	2036      	movs	r0, #54	; 0x36
 8001678:	f000 fa06 	bl	8001a88 <HAL_NVIC_EnableIRQ>
  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 800167c:	4b1f      	ldr	r3, [pc, #124]	; (80016fc <HAL_InitTick+0xa0>)
 800167e:	69db      	ldr	r3, [r3, #28]
 8001680:	4a1e      	ldr	r2, [pc, #120]	; (80016fc <HAL_InitTick+0xa0>)
 8001682:	f043 0310 	orr.w	r3, r3, #16
 8001686:	61d3      	str	r3, [r2, #28]
 8001688:	4b1c      	ldr	r3, [pc, #112]	; (80016fc <HAL_InitTick+0xa0>)
 800168a:	69db      	ldr	r3, [r3, #28]
 800168c:	f003 0310 	and.w	r3, r3, #16
 8001690:	60fb      	str	r3, [r7, #12]
 8001692:	68fb      	ldr	r3, [r7, #12]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001694:	f107 0210 	add.w	r2, r7, #16
 8001698:	f107 0314 	add.w	r3, r7, #20
 800169c:	4611      	mov	r1, r2
 800169e:	4618      	mov	r0, r3
 80016a0:	f001 fcee 	bl	8003080 <HAL_RCC_GetClockConfig>

  /* Compute TIM6 clock */
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80016a4:	f001 fca8 	bl	8002ff8 <HAL_RCC_GetPCLK1Freq>
 80016a8:	4603      	mov	r3, r0
 80016aa:	005b      	lsls	r3, r3, #1
 80016ac:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80016ae:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80016b0:	4a13      	ldr	r2, [pc, #76]	; (8001700 <HAL_InitTick+0xa4>)
 80016b2:	fba2 2303 	umull	r2, r3, r2, r3
 80016b6:	0c9b      	lsrs	r3, r3, #18
 80016b8:	3b01      	subs	r3, #1
 80016ba:	62bb      	str	r3, [r7, #40]	; 0x28

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80016bc:	4b11      	ldr	r3, [pc, #68]	; (8001704 <HAL_InitTick+0xa8>)
 80016be:	4a12      	ldr	r2, [pc, #72]	; (8001708 <HAL_InitTick+0xac>)
 80016c0:	601a      	str	r2, [r3, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80016c2:	4b10      	ldr	r3, [pc, #64]	; (8001704 <HAL_InitTick+0xa8>)
 80016c4:	f240 32e7 	movw	r2, #999	; 0x3e7
 80016c8:	60da      	str	r2, [r3, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
 80016ca:	4a0e      	ldr	r2, [pc, #56]	; (8001704 <HAL_InitTick+0xa8>)
 80016cc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80016ce:	6053      	str	r3, [r2, #4]
  htim6.Init.ClockDivision = 0;
 80016d0:	4b0c      	ldr	r3, [pc, #48]	; (8001704 <HAL_InitTick+0xa8>)
 80016d2:	2200      	movs	r2, #0
 80016d4:	611a      	str	r2, [r3, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80016d6:	4b0b      	ldr	r3, [pc, #44]	; (8001704 <HAL_InitTick+0xa8>)
 80016d8:	2200      	movs	r2, #0
 80016da:	609a      	str	r2, [r3, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80016dc:	4809      	ldr	r0, [pc, #36]	; (8001704 <HAL_InitTick+0xa8>)
 80016de:	f001 ff1f 	bl	8003520 <HAL_TIM_Base_Init>
 80016e2:	4603      	mov	r3, r0
 80016e4:	2b00      	cmp	r3, #0
 80016e6:	d104      	bne.n	80016f2 <HAL_InitTick+0x96>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 80016e8:	4806      	ldr	r0, [pc, #24]	; (8001704 <HAL_InitTick+0xa8>)
 80016ea:	f001 ff7b 	bl	80035e4 <HAL_TIM_Base_Start_IT>
 80016ee:	4603      	mov	r3, r0
 80016f0:	e000      	b.n	80016f4 <HAL_InitTick+0x98>
  }

  /* Return function status */
  return HAL_ERROR;
 80016f2:	2301      	movs	r3, #1
}
 80016f4:	4618      	mov	r0, r3
 80016f6:	3730      	adds	r7, #48	; 0x30
 80016f8:	46bd      	mov	sp, r7
 80016fa:	bd80      	pop	{r7, pc}
 80016fc:	40021000 	.word	0x40021000
 8001700:	431bde83 	.word	0x431bde83
 8001704:	20001d28 	.word	0x20001d28
 8001708:	40001000 	.word	0x40001000

0800170c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800170c:	b480      	push	{r7}
 800170e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001710:	e7fe      	b.n	8001710 <NMI_Handler+0x4>

08001712 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001712:	b480      	push	{r7}
 8001714:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001716:	e7fe      	b.n	8001716 <HardFault_Handler+0x4>

08001718 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001718:	b480      	push	{r7}
 800171a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800171c:	e7fe      	b.n	800171c <MemManage_Handler+0x4>

0800171e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800171e:	b480      	push	{r7}
 8001720:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001722:	e7fe      	b.n	8001722 <BusFault_Handler+0x4>

08001724 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001724:	b480      	push	{r7}
 8001726:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001728:	e7fe      	b.n	8001728 <UsageFault_Handler+0x4>

0800172a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800172a:	b480      	push	{r7}
 800172c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800172e:	bf00      	nop
 8001730:	46bd      	mov	sp, r7
 8001732:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001736:	4770      	bx	lr

08001738 <TIM6_DAC_IRQHandler>:

/**
  * @brief This function handles TIM6 global interrupt and DAC1 underrun interrupt.
  */
void TIM6_DAC_IRQHandler(void)
{
 8001738:	b580      	push	{r7, lr}
 800173a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 800173c:	4802      	ldr	r0, [pc, #8]	; (8001748 <TIM6_DAC_IRQHandler+0x10>)
 800173e:	f001 ffc1 	bl	80036c4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_DAC_IRQn 1 */

  /* USER CODE END TIM6_DAC_IRQn 1 */
}
 8001742:	bf00      	nop
 8001744:	bd80      	pop	{r7, pc}
 8001746:	bf00      	nop
 8001748:	20001d28 	.word	0x20001d28

0800174c <_sbrk>:
 800174c:	b580      	push	{r7, lr}
 800174e:	b086      	sub	sp, #24
 8001750:	af00      	add	r7, sp, #0
 8001752:	6078      	str	r0, [r7, #4]
 8001754:	4a14      	ldr	r2, [pc, #80]	; (80017a8 <_sbrk+0x5c>)
 8001756:	4b15      	ldr	r3, [pc, #84]	; (80017ac <_sbrk+0x60>)
 8001758:	1ad3      	subs	r3, r2, r3
 800175a:	617b      	str	r3, [r7, #20]
 800175c:	697b      	ldr	r3, [r7, #20]
 800175e:	613b      	str	r3, [r7, #16]
 8001760:	4b13      	ldr	r3, [pc, #76]	; (80017b0 <_sbrk+0x64>)
 8001762:	681b      	ldr	r3, [r3, #0]
 8001764:	2b00      	cmp	r3, #0
 8001766:	d102      	bne.n	800176e <_sbrk+0x22>
 8001768:	4b11      	ldr	r3, [pc, #68]	; (80017b0 <_sbrk+0x64>)
 800176a:	4a12      	ldr	r2, [pc, #72]	; (80017b4 <_sbrk+0x68>)
 800176c:	601a      	str	r2, [r3, #0]
 800176e:	4b10      	ldr	r3, [pc, #64]	; (80017b0 <_sbrk+0x64>)
 8001770:	681a      	ldr	r2, [r3, #0]
 8001772:	687b      	ldr	r3, [r7, #4]
 8001774:	4413      	add	r3, r2
 8001776:	693a      	ldr	r2, [r7, #16]
 8001778:	429a      	cmp	r2, r3
 800177a:	d207      	bcs.n	800178c <_sbrk+0x40>
 800177c:	f005 fac6 	bl	8006d0c <__errno>
 8001780:	4602      	mov	r2, r0
 8001782:	230c      	movs	r3, #12
 8001784:	6013      	str	r3, [r2, #0]
 8001786:	f04f 33ff 	mov.w	r3, #4294967295
 800178a:	e009      	b.n	80017a0 <_sbrk+0x54>
 800178c:	4b08      	ldr	r3, [pc, #32]	; (80017b0 <_sbrk+0x64>)
 800178e:	681b      	ldr	r3, [r3, #0]
 8001790:	60fb      	str	r3, [r7, #12]
 8001792:	4b07      	ldr	r3, [pc, #28]	; (80017b0 <_sbrk+0x64>)
 8001794:	681a      	ldr	r2, [r3, #0]
 8001796:	687b      	ldr	r3, [r7, #4]
 8001798:	4413      	add	r3, r2
 800179a:	4a05      	ldr	r2, [pc, #20]	; (80017b0 <_sbrk+0x64>)
 800179c:	6013      	str	r3, [r2, #0]
 800179e:	68fb      	ldr	r3, [r7, #12]
 80017a0:	4618      	mov	r0, r3
 80017a2:	3718      	adds	r7, #24
 80017a4:	46bd      	mov	sp, r7
 80017a6:	bd80      	pop	{r7, pc}
 80017a8:	20010000 	.word	0x20010000
 80017ac:	00000400 	.word	0x00000400
 80017b0:	20000224 	.word	0x20000224
 80017b4:	20001dc0 	.word	0x20001dc0

080017b8 <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80017b8:	b480      	push	{r7}
 80017ba:	af00      	add	r7, sp, #0
/* FPU settings --------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80017bc:	4b06      	ldr	r3, [pc, #24]	; (80017d8 <SystemInit+0x20>)
 80017be:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80017c2:	4a05      	ldr	r2, [pc, #20]	; (80017d8 <SystemInit+0x20>)
 80017c4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80017c8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80017cc:	bf00      	nop
 80017ce:	46bd      	mov	sp, r7
 80017d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017d4:	4770      	bx	lr
 80017d6:	bf00      	nop
 80017d8:	e000ed00 	.word	0xe000ed00

080017dc <Reset_Handler>:
 80017dc:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001814 <LoopForever+0x2>
 80017e0:	480d      	ldr	r0, [pc, #52]	; (8001818 <LoopForever+0x6>)
 80017e2:	490e      	ldr	r1, [pc, #56]	; (800181c <LoopForever+0xa>)
 80017e4:	4a0e      	ldr	r2, [pc, #56]	; (8001820 <LoopForever+0xe>)
 80017e6:	2300      	movs	r3, #0
 80017e8:	e002      	b.n	80017f0 <LoopCopyDataInit>

080017ea <CopyDataInit>:
 80017ea:	58d4      	ldr	r4, [r2, r3]
 80017ec:	50c4      	str	r4, [r0, r3]
 80017ee:	3304      	adds	r3, #4

080017f0 <LoopCopyDataInit>:
 80017f0:	18c4      	adds	r4, r0, r3
 80017f2:	428c      	cmp	r4, r1
 80017f4:	d3f9      	bcc.n	80017ea <CopyDataInit>
 80017f6:	4a0b      	ldr	r2, [pc, #44]	; (8001824 <LoopForever+0x12>)
 80017f8:	4c0b      	ldr	r4, [pc, #44]	; (8001828 <LoopForever+0x16>)
 80017fa:	2300      	movs	r3, #0
 80017fc:	e001      	b.n	8001802 <LoopFillZerobss>

080017fe <FillZerobss>:
 80017fe:	6013      	str	r3, [r2, #0]
 8001800:	3204      	adds	r2, #4

08001802 <LoopFillZerobss>:
 8001802:	42a2      	cmp	r2, r4
 8001804:	d3fb      	bcc.n	80017fe <FillZerobss>
 8001806:	f7ff ffd7 	bl	80017b8 <SystemInit>
 800180a:	f005 fa85 	bl	8006d18 <__libc_init_array>
 800180e:	f7ff fa23 	bl	8000c58 <main>

08001812 <LoopForever>:
 8001812:	e7fe      	b.n	8001812 <LoopForever>
 8001814:	20010000 	.word	0x20010000
 8001818:	20000000 	.word	0x20000000
 800181c:	200001f8 	.word	0x200001f8
 8001820:	080091e0 	.word	0x080091e0
 8001824:	200001f8 	.word	0x200001f8
 8001828:	20001dbc 	.word	0x20001dbc

0800182c <ADC1_2_IRQHandler>:
 800182c:	e7fe      	b.n	800182c <ADC1_2_IRQHandler>
	...

08001830 <HAL_Init>:
  *         In the default implementation,Systick is used as source of time base.
  *       The tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8001830:	b580      	push	{r7, lr}
 8001832:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001834:	4b08      	ldr	r3, [pc, #32]	; (8001858 <HAL_Init+0x28>)
 8001836:	681b      	ldr	r3, [r3, #0]
 8001838:	4a07      	ldr	r2, [pc, #28]	; (8001858 <HAL_Init+0x28>)
 800183a:	f043 0310 	orr.w	r3, r3, #16
 800183e:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001840:	2003      	movs	r0, #3
 8001842:	f000 f8fa 	bl	8001a3a <HAL_NVIC_SetPriorityGrouping>

  /* Enable systick and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8001846:	2000      	movs	r0, #0
 8001848:	f7ff ff08 	bl	800165c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800184c:	f7ff fe9c 	bl	8001588 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8001850:	2300      	movs	r3, #0
}
 8001852:	4618      	mov	r0, r3
 8001854:	bd80      	pop	{r7, pc}
 8001856:	bf00      	nop
 8001858:	40022000 	.word	0x40022000

0800185c <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *         implementations  in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 800185c:	b480      	push	{r7}
 800185e:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8001860:	4b06      	ldr	r3, [pc, #24]	; (800187c <HAL_IncTick+0x20>)
 8001862:	781b      	ldrb	r3, [r3, #0]
 8001864:	461a      	mov	r2, r3
 8001866:	4b06      	ldr	r3, [pc, #24]	; (8001880 <HAL_IncTick+0x24>)
 8001868:	681b      	ldr	r3, [r3, #0]
 800186a:	4413      	add	r3, r2
 800186c:	4a04      	ldr	r2, [pc, #16]	; (8001880 <HAL_IncTick+0x24>)
 800186e:	6013      	str	r3, [r2, #0]
}
 8001870:	bf00      	nop
 8001872:	46bd      	mov	sp, r7
 8001874:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001878:	4770      	bx	lr
 800187a:	bf00      	nop
 800187c:	20000020 	.word	0x20000020
 8001880:	20001d74 	.word	0x20001d74

08001884 <HAL_GetTick>:
  * @note   The function is declared as __Weak  to be overwritten  in case of other 
  *         implementations  in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8001884:	b480      	push	{r7}
 8001886:	af00      	add	r7, sp, #0
  return uwTick;  
 8001888:	4b03      	ldr	r3, [pc, #12]	; (8001898 <HAL_GetTick+0x14>)
 800188a:	681b      	ldr	r3, [r3, #0]
}
 800188c:	4618      	mov	r0, r3
 800188e:	46bd      	mov	sp, r7
 8001890:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001894:	4770      	bx	lr
 8001896:	bf00      	nop
 8001898:	20001d74 	.word	0x20001d74

0800189c <HAL_Delay>:
  *         implementations  in user file.
  * @param  Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800189c:	b580      	push	{r7, lr}
 800189e:	b084      	sub	sp, #16
 80018a0:	af00      	add	r7, sp, #0
 80018a2:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 80018a4:	f7ff ffee 	bl	8001884 <HAL_GetTick>
 80018a8:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 80018aa:	687b      	ldr	r3, [r7, #4]
 80018ac:	60fb      	str	r3, [r7, #12]
  
  /* Add freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80018ae:	68fb      	ldr	r3, [r7, #12]
 80018b0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80018b4:	d005      	beq.n	80018c2 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 80018b6:	4b09      	ldr	r3, [pc, #36]	; (80018dc <HAL_Delay+0x40>)
 80018b8:	781b      	ldrb	r3, [r3, #0]
 80018ba:	461a      	mov	r2, r3
 80018bc:	68fb      	ldr	r3, [r7, #12]
 80018be:	4413      	add	r3, r2
 80018c0:	60fb      	str	r3, [r7, #12]
  }
  
  while((HAL_GetTick() - tickstart) < wait)
 80018c2:	bf00      	nop
 80018c4:	f7ff ffde 	bl	8001884 <HAL_GetTick>
 80018c8:	4602      	mov	r2, r0
 80018ca:	68bb      	ldr	r3, [r7, #8]
 80018cc:	1ad3      	subs	r3, r2, r3
 80018ce:	68fa      	ldr	r2, [r7, #12]
 80018d0:	429a      	cmp	r2, r3
 80018d2:	d8f7      	bhi.n	80018c4 <HAL_Delay+0x28>
  {
  }
}
 80018d4:	bf00      	nop
 80018d6:	3710      	adds	r7, #16
 80018d8:	46bd      	mov	sp, r7
 80018da:	bd80      	pop	{r7, pc}
 80018dc:	20000020 	.word	0x20000020

080018e0 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80018e0:	b480      	push	{r7}
 80018e2:	b085      	sub	sp, #20
 80018e4:	af00      	add	r7, sp, #0
 80018e6:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80018e8:	687b      	ldr	r3, [r7, #4]
 80018ea:	f003 0307 	and.w	r3, r3, #7
 80018ee:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80018f0:	4b0c      	ldr	r3, [pc, #48]	; (8001924 <__NVIC_SetPriorityGrouping+0x44>)
 80018f2:	68db      	ldr	r3, [r3, #12]
 80018f4:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80018f6:	68ba      	ldr	r2, [r7, #8]
 80018f8:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80018fc:	4013      	ands	r3, r2
 80018fe:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8001900:	68fb      	ldr	r3, [r7, #12]
 8001902:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001904:	68bb      	ldr	r3, [r7, #8]
 8001906:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8001908:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800190c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001910:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8001912:	4a04      	ldr	r2, [pc, #16]	; (8001924 <__NVIC_SetPriorityGrouping+0x44>)
 8001914:	68bb      	ldr	r3, [r7, #8]
 8001916:	60d3      	str	r3, [r2, #12]
}
 8001918:	bf00      	nop
 800191a:	3714      	adds	r7, #20
 800191c:	46bd      	mov	sp, r7
 800191e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001922:	4770      	bx	lr
 8001924:	e000ed00 	.word	0xe000ed00

08001928 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8001928:	b480      	push	{r7}
 800192a:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800192c:	4b04      	ldr	r3, [pc, #16]	; (8001940 <__NVIC_GetPriorityGrouping+0x18>)
 800192e:	68db      	ldr	r3, [r3, #12]
 8001930:	0a1b      	lsrs	r3, r3, #8
 8001932:	f003 0307 	and.w	r3, r3, #7
}
 8001936:	4618      	mov	r0, r3
 8001938:	46bd      	mov	sp, r7
 800193a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800193e:	4770      	bx	lr
 8001940:	e000ed00 	.word	0xe000ed00

08001944 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001944:	b480      	push	{r7}
 8001946:	b083      	sub	sp, #12
 8001948:	af00      	add	r7, sp, #0
 800194a:	4603      	mov	r3, r0
 800194c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800194e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001952:	2b00      	cmp	r3, #0
 8001954:	db0b      	blt.n	800196e <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001956:	79fb      	ldrb	r3, [r7, #7]
 8001958:	f003 021f 	and.w	r2, r3, #31
 800195c:	4907      	ldr	r1, [pc, #28]	; (800197c <__NVIC_EnableIRQ+0x38>)
 800195e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001962:	095b      	lsrs	r3, r3, #5
 8001964:	2001      	movs	r0, #1
 8001966:	fa00 f202 	lsl.w	r2, r0, r2
 800196a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 800196e:	bf00      	nop
 8001970:	370c      	adds	r7, #12
 8001972:	46bd      	mov	sp, r7
 8001974:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001978:	4770      	bx	lr
 800197a:	bf00      	nop
 800197c:	e000e100 	.word	0xe000e100

08001980 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001980:	b480      	push	{r7}
 8001982:	b083      	sub	sp, #12
 8001984:	af00      	add	r7, sp, #0
 8001986:	4603      	mov	r3, r0
 8001988:	6039      	str	r1, [r7, #0]
 800198a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800198c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001990:	2b00      	cmp	r3, #0
 8001992:	db0a      	blt.n	80019aa <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001994:	683b      	ldr	r3, [r7, #0]
 8001996:	b2da      	uxtb	r2, r3
 8001998:	490c      	ldr	r1, [pc, #48]	; (80019cc <__NVIC_SetPriority+0x4c>)
 800199a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800199e:	0112      	lsls	r2, r2, #4
 80019a0:	b2d2      	uxtb	r2, r2
 80019a2:	440b      	add	r3, r1
 80019a4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80019a8:	e00a      	b.n	80019c0 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80019aa:	683b      	ldr	r3, [r7, #0]
 80019ac:	b2da      	uxtb	r2, r3
 80019ae:	4908      	ldr	r1, [pc, #32]	; (80019d0 <__NVIC_SetPriority+0x50>)
 80019b0:	79fb      	ldrb	r3, [r7, #7]
 80019b2:	f003 030f 	and.w	r3, r3, #15
 80019b6:	3b04      	subs	r3, #4
 80019b8:	0112      	lsls	r2, r2, #4
 80019ba:	b2d2      	uxtb	r2, r2
 80019bc:	440b      	add	r3, r1
 80019be:	761a      	strb	r2, [r3, #24]
}
 80019c0:	bf00      	nop
 80019c2:	370c      	adds	r7, #12
 80019c4:	46bd      	mov	sp, r7
 80019c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019ca:	4770      	bx	lr
 80019cc:	e000e100 	.word	0xe000e100
 80019d0:	e000ed00 	.word	0xe000ed00

080019d4 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80019d4:	b480      	push	{r7}
 80019d6:	b089      	sub	sp, #36	; 0x24
 80019d8:	af00      	add	r7, sp, #0
 80019da:	60f8      	str	r0, [r7, #12]
 80019dc:	60b9      	str	r1, [r7, #8]
 80019de:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80019e0:	68fb      	ldr	r3, [r7, #12]
 80019e2:	f003 0307 	and.w	r3, r3, #7
 80019e6:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80019e8:	69fb      	ldr	r3, [r7, #28]
 80019ea:	f1c3 0307 	rsb	r3, r3, #7
 80019ee:	2b04      	cmp	r3, #4
 80019f0:	bf28      	it	cs
 80019f2:	2304      	movcs	r3, #4
 80019f4:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80019f6:	69fb      	ldr	r3, [r7, #28]
 80019f8:	3304      	adds	r3, #4
 80019fa:	2b06      	cmp	r3, #6
 80019fc:	d902      	bls.n	8001a04 <NVIC_EncodePriority+0x30>
 80019fe:	69fb      	ldr	r3, [r7, #28]
 8001a00:	3b03      	subs	r3, #3
 8001a02:	e000      	b.n	8001a06 <NVIC_EncodePriority+0x32>
 8001a04:	2300      	movs	r3, #0
 8001a06:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001a08:	f04f 32ff 	mov.w	r2, #4294967295
 8001a0c:	69bb      	ldr	r3, [r7, #24]
 8001a0e:	fa02 f303 	lsl.w	r3, r2, r3
 8001a12:	43da      	mvns	r2, r3
 8001a14:	68bb      	ldr	r3, [r7, #8]
 8001a16:	401a      	ands	r2, r3
 8001a18:	697b      	ldr	r3, [r7, #20]
 8001a1a:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001a1c:	f04f 31ff 	mov.w	r1, #4294967295
 8001a20:	697b      	ldr	r3, [r7, #20]
 8001a22:	fa01 f303 	lsl.w	r3, r1, r3
 8001a26:	43d9      	mvns	r1, r3
 8001a28:	687b      	ldr	r3, [r7, #4]
 8001a2a:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001a2c:	4313      	orrs	r3, r2
         );
}
 8001a2e:	4618      	mov	r0, r3
 8001a30:	3724      	adds	r7, #36	; 0x24
 8001a32:	46bd      	mov	sp, r7
 8001a34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a38:	4770      	bx	lr

08001a3a <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001a3a:	b580      	push	{r7, lr}
 8001a3c:	b082      	sub	sp, #8
 8001a3e:	af00      	add	r7, sp, #0
 8001a40:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8001a42:	6878      	ldr	r0, [r7, #4]
 8001a44:	f7ff ff4c 	bl	80018e0 <__NVIC_SetPriorityGrouping>
}
 8001a48:	bf00      	nop
 8001a4a:	3708      	adds	r7, #8
 8001a4c:	46bd      	mov	sp, r7
 8001a4e:	bd80      	pop	{r7, pc}

08001a50 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15 as described in the table CORTEX_NVIC_Priority_Table
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001a50:	b580      	push	{r7, lr}
 8001a52:	b086      	sub	sp, #24
 8001a54:	af00      	add	r7, sp, #0
 8001a56:	4603      	mov	r3, r0
 8001a58:	60b9      	str	r1, [r7, #8]
 8001a5a:	607a      	str	r2, [r7, #4]
 8001a5c:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8001a5e:	2300      	movs	r3, #0
 8001a60:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8001a62:	f7ff ff61 	bl	8001928 <__NVIC_GetPriorityGrouping>
 8001a66:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8001a68:	687a      	ldr	r2, [r7, #4]
 8001a6a:	68b9      	ldr	r1, [r7, #8]
 8001a6c:	6978      	ldr	r0, [r7, #20]
 8001a6e:	f7ff ffb1 	bl	80019d4 <NVIC_EncodePriority>
 8001a72:	4602      	mov	r2, r0
 8001a74:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001a78:	4611      	mov	r1, r2
 8001a7a:	4618      	mov	r0, r3
 8001a7c:	f7ff ff80 	bl	8001980 <__NVIC_SetPriority>
}
 8001a80:	bf00      	nop
 8001a82:	3718      	adds	r7, #24
 8001a84:	46bd      	mov	sp, r7
 8001a86:	bd80      	pop	{r7, pc}

08001a88 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f3xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001a88:	b580      	push	{r7, lr}
 8001a8a:	b082      	sub	sp, #8
 8001a8c:	af00      	add	r7, sp, #0
 8001a8e:	4603      	mov	r3, r0
 8001a90:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8001a92:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a96:	4618      	mov	r0, r3
 8001a98:	f7ff ff54 	bl	8001944 <__NVIC_EnableIRQ>
}
 8001a9c:	bf00      	nop
 8001a9e:	3708      	adds	r7, #8
 8001aa0:	46bd      	mov	sp, r7
 8001aa2:	bd80      	pop	{r7, pc}

08001aa4 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001aa4:	b480      	push	{r7}
 8001aa6:	b087      	sub	sp, #28
 8001aa8:	af00      	add	r7, sp, #0
 8001aaa:	6078      	str	r0, [r7, #4]
 8001aac:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 8001aae:	2300      	movs	r3, #0
 8001ab0:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8001ab2:	e160      	b.n	8001d76 <HAL_GPIO_Init+0x2d2>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8001ab4:	683b      	ldr	r3, [r7, #0]
 8001ab6:	681a      	ldr	r2, [r3, #0]
 8001ab8:	2101      	movs	r1, #1
 8001aba:	697b      	ldr	r3, [r7, #20]
 8001abc:	fa01 f303 	lsl.w	r3, r1, r3
 8001ac0:	4013      	ands	r3, r2
 8001ac2:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 8001ac4:	68fb      	ldr	r3, [r7, #12]
 8001ac6:	2b00      	cmp	r3, #0
 8001ac8:	f000 8152 	beq.w	8001d70 <HAL_GPIO_Init+0x2cc>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8001acc:	683b      	ldr	r3, [r7, #0]
 8001ace:	685b      	ldr	r3, [r3, #4]
 8001ad0:	2b01      	cmp	r3, #1
 8001ad2:	d00b      	beq.n	8001aec <HAL_GPIO_Init+0x48>
 8001ad4:	683b      	ldr	r3, [r7, #0]
 8001ad6:	685b      	ldr	r3, [r3, #4]
 8001ad8:	2b02      	cmp	r3, #2
 8001ada:	d007      	beq.n	8001aec <HAL_GPIO_Init+0x48>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001adc:	683b      	ldr	r3, [r7, #0]
 8001ade:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8001ae0:	2b11      	cmp	r3, #17
 8001ae2:	d003      	beq.n	8001aec <HAL_GPIO_Init+0x48>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001ae4:	683b      	ldr	r3, [r7, #0]
 8001ae6:	685b      	ldr	r3, [r3, #4]
 8001ae8:	2b12      	cmp	r3, #18
 8001aea:	d130      	bne.n	8001b4e <HAL_GPIO_Init+0xaa>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8001aec:	687b      	ldr	r3, [r7, #4]
 8001aee:	689b      	ldr	r3, [r3, #8]
 8001af0:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 8001af2:	697b      	ldr	r3, [r7, #20]
 8001af4:	005b      	lsls	r3, r3, #1
 8001af6:	2203      	movs	r2, #3
 8001af8:	fa02 f303 	lsl.w	r3, r2, r3
 8001afc:	43db      	mvns	r3, r3
 8001afe:	693a      	ldr	r2, [r7, #16]
 8001b00:	4013      	ands	r3, r2
 8001b02:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 8001b04:	683b      	ldr	r3, [r7, #0]
 8001b06:	68da      	ldr	r2, [r3, #12]
 8001b08:	697b      	ldr	r3, [r7, #20]
 8001b0a:	005b      	lsls	r3, r3, #1
 8001b0c:	fa02 f303 	lsl.w	r3, r2, r3
 8001b10:	693a      	ldr	r2, [r7, #16]
 8001b12:	4313      	orrs	r3, r2
 8001b14:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 8001b16:	687b      	ldr	r3, [r7, #4]
 8001b18:	693a      	ldr	r2, [r7, #16]
 8001b1a:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8001b1c:	687b      	ldr	r3, [r7, #4]
 8001b1e:	685b      	ldr	r3, [r3, #4]
 8001b20:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8001b22:	2201      	movs	r2, #1
 8001b24:	697b      	ldr	r3, [r7, #20]
 8001b26:	fa02 f303 	lsl.w	r3, r2, r3
 8001b2a:	43db      	mvns	r3, r3
 8001b2c:	693a      	ldr	r2, [r7, #16]
 8001b2e:	4013      	ands	r3, r2
 8001b30:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4u) << position);
 8001b32:	683b      	ldr	r3, [r7, #0]
 8001b34:	685b      	ldr	r3, [r3, #4]
 8001b36:	091b      	lsrs	r3, r3, #4
 8001b38:	f003 0201 	and.w	r2, r3, #1
 8001b3c:	697b      	ldr	r3, [r7, #20]
 8001b3e:	fa02 f303 	lsl.w	r3, r2, r3
 8001b42:	693a      	ldr	r2, [r7, #16]
 8001b44:	4313      	orrs	r3, r2
 8001b46:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8001b48:	687b      	ldr	r3, [r7, #4]
 8001b4a:	693a      	ldr	r2, [r7, #16]
 8001b4c:	605a      	str	r2, [r3, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8001b4e:	687b      	ldr	r3, [r7, #4]
 8001b50:	68db      	ldr	r3, [r3, #12]
 8001b52:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 8001b54:	697b      	ldr	r3, [r7, #20]
 8001b56:	005b      	lsls	r3, r3, #1
 8001b58:	2203      	movs	r2, #3
 8001b5a:	fa02 f303 	lsl.w	r3, r2, r3
 8001b5e:	43db      	mvns	r3, r3
 8001b60:	693a      	ldr	r2, [r7, #16]
 8001b62:	4013      	ands	r3, r2
 8001b64:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Pull) << (position * 2u));
 8001b66:	683b      	ldr	r3, [r7, #0]
 8001b68:	689a      	ldr	r2, [r3, #8]
 8001b6a:	697b      	ldr	r3, [r7, #20]
 8001b6c:	005b      	lsls	r3, r3, #1
 8001b6e:	fa02 f303 	lsl.w	r3, r2, r3
 8001b72:	693a      	ldr	r2, [r7, #16]
 8001b74:	4313      	orrs	r3, r2
 8001b76:	613b      	str	r3, [r7, #16]
      GPIOx->PUPDR = temp;
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	693a      	ldr	r2, [r7, #16]
 8001b7c:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001b7e:	683b      	ldr	r3, [r7, #0]
 8001b80:	685b      	ldr	r3, [r3, #4]
 8001b82:	2b02      	cmp	r3, #2
 8001b84:	d003      	beq.n	8001b8e <HAL_GPIO_Init+0xea>
 8001b86:	683b      	ldr	r3, [r7, #0]
 8001b88:	685b      	ldr	r3, [r3, #4]
 8001b8a:	2b12      	cmp	r3, #18
 8001b8c:	d123      	bne.n	8001bd6 <HAL_GPIO_Init+0x132>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 8001b8e:	697b      	ldr	r3, [r7, #20]
 8001b90:	08da      	lsrs	r2, r3, #3
 8001b92:	687b      	ldr	r3, [r7, #4]
 8001b94:	3208      	adds	r2, #8
 8001b96:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001b9a:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8001b9c:	697b      	ldr	r3, [r7, #20]
 8001b9e:	f003 0307 	and.w	r3, r3, #7
 8001ba2:	009b      	lsls	r3, r3, #2
 8001ba4:	220f      	movs	r2, #15
 8001ba6:	fa02 f303 	lsl.w	r3, r2, r3
 8001baa:	43db      	mvns	r3, r3
 8001bac:	693a      	ldr	r2, [r7, #16]
 8001bae:	4013      	ands	r3, r2
 8001bb0:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8001bb2:	683b      	ldr	r3, [r7, #0]
 8001bb4:	691a      	ldr	r2, [r3, #16]
 8001bb6:	697b      	ldr	r3, [r7, #20]
 8001bb8:	f003 0307 	and.w	r3, r3, #7
 8001bbc:	009b      	lsls	r3, r3, #2
 8001bbe:	fa02 f303 	lsl.w	r3, r2, r3
 8001bc2:	693a      	ldr	r2, [r7, #16]
 8001bc4:	4313      	orrs	r3, r2
 8001bc6:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 8001bc8:	697b      	ldr	r3, [r7, #20]
 8001bca:	08da      	lsrs	r2, r3, #3
 8001bcc:	687b      	ldr	r3, [r7, #4]
 8001bce:	3208      	adds	r2, #8
 8001bd0:	6939      	ldr	r1, [r7, #16]
 8001bd2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8001bd6:	687b      	ldr	r3, [r7, #4]
 8001bd8:	681b      	ldr	r3, [r3, #0]
 8001bda:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 8001bdc:	697b      	ldr	r3, [r7, #20]
 8001bde:	005b      	lsls	r3, r3, #1
 8001be0:	2203      	movs	r2, #3
 8001be2:	fa02 f303 	lsl.w	r3, r2, r3
 8001be6:	43db      	mvns	r3, r3
 8001be8:	693a      	ldr	r2, [r7, #16]
 8001bea:	4013      	ands	r3, r2
 8001bec:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8001bee:	683b      	ldr	r3, [r7, #0]
 8001bf0:	685b      	ldr	r3, [r3, #4]
 8001bf2:	f003 0203 	and.w	r2, r3, #3
 8001bf6:	697b      	ldr	r3, [r7, #20]
 8001bf8:	005b      	lsls	r3, r3, #1
 8001bfa:	fa02 f303 	lsl.w	r3, r2, r3
 8001bfe:	693a      	ldr	r2, [r7, #16]
 8001c00:	4313      	orrs	r3, r2
 8001c02:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 8001c04:	687b      	ldr	r3, [r7, #4]
 8001c06:	693a      	ldr	r2, [r7, #16]
 8001c08:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8001c0a:	683b      	ldr	r3, [r7, #0]
 8001c0c:	685b      	ldr	r3, [r3, #4]
 8001c0e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001c12:	2b00      	cmp	r3, #0
 8001c14:	f000 80ac 	beq.w	8001d70 <HAL_GPIO_Init+0x2cc>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001c18:	4b5e      	ldr	r3, [pc, #376]	; (8001d94 <HAL_GPIO_Init+0x2f0>)
 8001c1a:	699b      	ldr	r3, [r3, #24]
 8001c1c:	4a5d      	ldr	r2, [pc, #372]	; (8001d94 <HAL_GPIO_Init+0x2f0>)
 8001c1e:	f043 0301 	orr.w	r3, r3, #1
 8001c22:	6193      	str	r3, [r2, #24]
 8001c24:	4b5b      	ldr	r3, [pc, #364]	; (8001d94 <HAL_GPIO_Init+0x2f0>)
 8001c26:	699b      	ldr	r3, [r3, #24]
 8001c28:	f003 0301 	and.w	r3, r3, #1
 8001c2c:	60bb      	str	r3, [r7, #8]
 8001c2e:	68bb      	ldr	r3, [r7, #8]

        temp = SYSCFG->EXTICR[position >> 2u];
 8001c30:	4a59      	ldr	r2, [pc, #356]	; (8001d98 <HAL_GPIO_Init+0x2f4>)
 8001c32:	697b      	ldr	r3, [r7, #20]
 8001c34:	089b      	lsrs	r3, r3, #2
 8001c36:	3302      	adds	r3, #2
 8001c38:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001c3c:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8001c3e:	697b      	ldr	r3, [r7, #20]
 8001c40:	f003 0303 	and.w	r3, r3, #3
 8001c44:	009b      	lsls	r3, r3, #2
 8001c46:	220f      	movs	r2, #15
 8001c48:	fa02 f303 	lsl.w	r3, r2, r3
 8001c4c:	43db      	mvns	r3, r3
 8001c4e:	693a      	ldr	r2, [r7, #16]
 8001c50:	4013      	ands	r3, r2
 8001c52:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8001c54:	687b      	ldr	r3, [r7, #4]
 8001c56:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8001c5a:	d025      	beq.n	8001ca8 <HAL_GPIO_Init+0x204>
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	4a4f      	ldr	r2, [pc, #316]	; (8001d9c <HAL_GPIO_Init+0x2f8>)
 8001c60:	4293      	cmp	r3, r2
 8001c62:	d01f      	beq.n	8001ca4 <HAL_GPIO_Init+0x200>
 8001c64:	687b      	ldr	r3, [r7, #4]
 8001c66:	4a4e      	ldr	r2, [pc, #312]	; (8001da0 <HAL_GPIO_Init+0x2fc>)
 8001c68:	4293      	cmp	r3, r2
 8001c6a:	d019      	beq.n	8001ca0 <HAL_GPIO_Init+0x1fc>
 8001c6c:	687b      	ldr	r3, [r7, #4]
 8001c6e:	4a4d      	ldr	r2, [pc, #308]	; (8001da4 <HAL_GPIO_Init+0x300>)
 8001c70:	4293      	cmp	r3, r2
 8001c72:	d013      	beq.n	8001c9c <HAL_GPIO_Init+0x1f8>
 8001c74:	687b      	ldr	r3, [r7, #4]
 8001c76:	4a4c      	ldr	r2, [pc, #304]	; (8001da8 <HAL_GPIO_Init+0x304>)
 8001c78:	4293      	cmp	r3, r2
 8001c7a:	d00d      	beq.n	8001c98 <HAL_GPIO_Init+0x1f4>
 8001c7c:	687b      	ldr	r3, [r7, #4]
 8001c7e:	4a4b      	ldr	r2, [pc, #300]	; (8001dac <HAL_GPIO_Init+0x308>)
 8001c80:	4293      	cmp	r3, r2
 8001c82:	d007      	beq.n	8001c94 <HAL_GPIO_Init+0x1f0>
 8001c84:	687b      	ldr	r3, [r7, #4]
 8001c86:	4a4a      	ldr	r2, [pc, #296]	; (8001db0 <HAL_GPIO_Init+0x30c>)
 8001c88:	4293      	cmp	r3, r2
 8001c8a:	d101      	bne.n	8001c90 <HAL_GPIO_Init+0x1ec>
 8001c8c:	2306      	movs	r3, #6
 8001c8e:	e00c      	b.n	8001caa <HAL_GPIO_Init+0x206>
 8001c90:	2307      	movs	r3, #7
 8001c92:	e00a      	b.n	8001caa <HAL_GPIO_Init+0x206>
 8001c94:	2305      	movs	r3, #5
 8001c96:	e008      	b.n	8001caa <HAL_GPIO_Init+0x206>
 8001c98:	2304      	movs	r3, #4
 8001c9a:	e006      	b.n	8001caa <HAL_GPIO_Init+0x206>
 8001c9c:	2303      	movs	r3, #3
 8001c9e:	e004      	b.n	8001caa <HAL_GPIO_Init+0x206>
 8001ca0:	2302      	movs	r3, #2
 8001ca2:	e002      	b.n	8001caa <HAL_GPIO_Init+0x206>
 8001ca4:	2301      	movs	r3, #1
 8001ca6:	e000      	b.n	8001caa <HAL_GPIO_Init+0x206>
 8001ca8:	2300      	movs	r3, #0
 8001caa:	697a      	ldr	r2, [r7, #20]
 8001cac:	f002 0203 	and.w	r2, r2, #3
 8001cb0:	0092      	lsls	r2, r2, #2
 8001cb2:	4093      	lsls	r3, r2
 8001cb4:	693a      	ldr	r2, [r7, #16]
 8001cb6:	4313      	orrs	r3, r2
 8001cb8:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 8001cba:	4937      	ldr	r1, [pc, #220]	; (8001d98 <HAL_GPIO_Init+0x2f4>)
 8001cbc:	697b      	ldr	r3, [r7, #20]
 8001cbe:	089b      	lsrs	r3, r3, #2
 8001cc0:	3302      	adds	r3, #2
 8001cc2:	693a      	ldr	r2, [r7, #16]
 8001cc4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8001cc8:	4b3a      	ldr	r3, [pc, #232]	; (8001db4 <HAL_GPIO_Init+0x310>)
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8001cce:	68fb      	ldr	r3, [r7, #12]
 8001cd0:	43db      	mvns	r3, r3
 8001cd2:	693a      	ldr	r2, [r7, #16]
 8001cd4:	4013      	ands	r3, r2
 8001cd6:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8001cd8:	683b      	ldr	r3, [r7, #0]
 8001cda:	685b      	ldr	r3, [r3, #4]
 8001cdc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001ce0:	2b00      	cmp	r3, #0
 8001ce2:	d003      	beq.n	8001cec <HAL_GPIO_Init+0x248>
        {
          temp |= iocurrent;
 8001ce4:	693a      	ldr	r2, [r7, #16]
 8001ce6:	68fb      	ldr	r3, [r7, #12]
 8001ce8:	4313      	orrs	r3, r2
 8001cea:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 8001cec:	4a31      	ldr	r2, [pc, #196]	; (8001db4 <HAL_GPIO_Init+0x310>)
 8001cee:	693b      	ldr	r3, [r7, #16]
 8001cf0:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 8001cf2:	4b30      	ldr	r3, [pc, #192]	; (8001db4 <HAL_GPIO_Init+0x310>)
 8001cf4:	685b      	ldr	r3, [r3, #4]
 8001cf6:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8001cf8:	68fb      	ldr	r3, [r7, #12]
 8001cfa:	43db      	mvns	r3, r3
 8001cfc:	693a      	ldr	r2, [r7, #16]
 8001cfe:	4013      	ands	r3, r2
 8001d00:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8001d02:	683b      	ldr	r3, [r7, #0]
 8001d04:	685b      	ldr	r3, [r3, #4]
 8001d06:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001d0a:	2b00      	cmp	r3, #0
 8001d0c:	d003      	beq.n	8001d16 <HAL_GPIO_Init+0x272>
        {
          temp |= iocurrent;
 8001d0e:	693a      	ldr	r2, [r7, #16]
 8001d10:	68fb      	ldr	r3, [r7, #12]
 8001d12:	4313      	orrs	r3, r2
 8001d14:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 8001d16:	4a27      	ldr	r2, [pc, #156]	; (8001db4 <HAL_GPIO_Init+0x310>)
 8001d18:	693b      	ldr	r3, [r7, #16]
 8001d1a:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8001d1c:	4b25      	ldr	r3, [pc, #148]	; (8001db4 <HAL_GPIO_Init+0x310>)
 8001d1e:	689b      	ldr	r3, [r3, #8]
 8001d20:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8001d22:	68fb      	ldr	r3, [r7, #12]
 8001d24:	43db      	mvns	r3, r3
 8001d26:	693a      	ldr	r2, [r7, #16]
 8001d28:	4013      	ands	r3, r2
 8001d2a:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8001d2c:	683b      	ldr	r3, [r7, #0]
 8001d2e:	685b      	ldr	r3, [r3, #4]
 8001d30:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001d34:	2b00      	cmp	r3, #0
 8001d36:	d003      	beq.n	8001d40 <HAL_GPIO_Init+0x29c>
        {
          temp |= iocurrent;
 8001d38:	693a      	ldr	r2, [r7, #16]
 8001d3a:	68fb      	ldr	r3, [r7, #12]
 8001d3c:	4313      	orrs	r3, r2
 8001d3e:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 8001d40:	4a1c      	ldr	r2, [pc, #112]	; (8001db4 <HAL_GPIO_Init+0x310>)
 8001d42:	693b      	ldr	r3, [r7, #16]
 8001d44:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8001d46:	4b1b      	ldr	r3, [pc, #108]	; (8001db4 <HAL_GPIO_Init+0x310>)
 8001d48:	68db      	ldr	r3, [r3, #12]
 8001d4a:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8001d4c:	68fb      	ldr	r3, [r7, #12]
 8001d4e:	43db      	mvns	r3, r3
 8001d50:	693a      	ldr	r2, [r7, #16]
 8001d52:	4013      	ands	r3, r2
 8001d54:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8001d56:	683b      	ldr	r3, [r7, #0]
 8001d58:	685b      	ldr	r3, [r3, #4]
 8001d5a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001d5e:	2b00      	cmp	r3, #0
 8001d60:	d003      	beq.n	8001d6a <HAL_GPIO_Init+0x2c6>
        {
          temp |= iocurrent;
 8001d62:	693a      	ldr	r2, [r7, #16]
 8001d64:	68fb      	ldr	r3, [r7, #12]
 8001d66:	4313      	orrs	r3, r2
 8001d68:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 8001d6a:	4a12      	ldr	r2, [pc, #72]	; (8001db4 <HAL_GPIO_Init+0x310>)
 8001d6c:	693b      	ldr	r3, [r7, #16]
 8001d6e:	60d3      	str	r3, [r2, #12]
      }
    }

    position++;
 8001d70:	697b      	ldr	r3, [r7, #20]
 8001d72:	3301      	adds	r3, #1
 8001d74:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8001d76:	683b      	ldr	r3, [r7, #0]
 8001d78:	681a      	ldr	r2, [r3, #0]
 8001d7a:	697b      	ldr	r3, [r7, #20]
 8001d7c:	fa22 f303 	lsr.w	r3, r2, r3
 8001d80:	2b00      	cmp	r3, #0
 8001d82:	f47f ae97 	bne.w	8001ab4 <HAL_GPIO_Init+0x10>
  }
}
 8001d86:	bf00      	nop
 8001d88:	371c      	adds	r7, #28
 8001d8a:	46bd      	mov	sp, r7
 8001d8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d90:	4770      	bx	lr
 8001d92:	bf00      	nop
 8001d94:	40021000 	.word	0x40021000
 8001d98:	40010000 	.word	0x40010000
 8001d9c:	48000400 	.word	0x48000400
 8001da0:	48000800 	.word	0x48000800
 8001da4:	48000c00 	.word	0x48000c00
 8001da8:	48001000 	.word	0x48001000
 8001dac:	48001400 	.word	0x48001400
 8001db0:	48001800 	.word	0x48001800
 8001db4:	40010400 	.word	0x40010400

08001db8 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8001db8:	b480      	push	{r7}
 8001dba:	b083      	sub	sp, #12
 8001dbc:	af00      	add	r7, sp, #0
 8001dbe:	6078      	str	r0, [r7, #4]
 8001dc0:	460b      	mov	r3, r1
 8001dc2:	807b      	strh	r3, [r7, #2]
 8001dc4:	4613      	mov	r3, r2
 8001dc6:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8001dc8:	787b      	ldrb	r3, [r7, #1]
 8001dca:	2b00      	cmp	r3, #0
 8001dcc:	d003      	beq.n	8001dd6 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8001dce:	887a      	ldrh	r2, [r7, #2]
 8001dd0:	687b      	ldr	r3, [r7, #4]
 8001dd2:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 8001dd4:	e002      	b.n	8001ddc <HAL_GPIO_WritePin+0x24>
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 8001dd6:	887a      	ldrh	r2, [r7, #2]
 8001dd8:	687b      	ldr	r3, [r7, #4]
 8001dda:	629a      	str	r2, [r3, #40]	; 0x28
}
 8001ddc:	bf00      	nop
 8001dde:	370c      	adds	r7, #12
 8001de0:	46bd      	mov	sp, r7
 8001de2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001de6:	4770      	bx	lr

08001de8 <HAL_RCC_OscConfig>:
 8001de8:	b580      	push	{r7, lr}
 8001dea:	f5ad 7d02 	sub.w	sp, sp, #520	; 0x208
 8001dee:	af00      	add	r7, sp, #0
 8001df0:	1d3b      	adds	r3, r7, #4
 8001df2:	6018      	str	r0, [r3, #0]
 8001df4:	1d3b      	adds	r3, r7, #4
 8001df6:	681b      	ldr	r3, [r3, #0]
 8001df8:	2b00      	cmp	r3, #0
 8001dfa:	d102      	bne.n	8001e02 <HAL_RCC_OscConfig+0x1a>
 8001dfc:	2301      	movs	r3, #1
 8001dfe:	f000 bf01 	b.w	8002c04 <HAL_RCC_OscConfig+0xe1c>
 8001e02:	1d3b      	adds	r3, r7, #4
 8001e04:	681b      	ldr	r3, [r3, #0]
 8001e06:	681b      	ldr	r3, [r3, #0]
 8001e08:	f003 0301 	and.w	r3, r3, #1
 8001e0c:	2b00      	cmp	r3, #0
 8001e0e:	f000 8160 	beq.w	80020d2 <HAL_RCC_OscConfig+0x2ea>
 8001e12:	4bae      	ldr	r3, [pc, #696]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001e14:	685b      	ldr	r3, [r3, #4]
 8001e16:	f003 030c 	and.w	r3, r3, #12
 8001e1a:	2b04      	cmp	r3, #4
 8001e1c:	d00c      	beq.n	8001e38 <HAL_RCC_OscConfig+0x50>
 8001e1e:	4bab      	ldr	r3, [pc, #684]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001e20:	685b      	ldr	r3, [r3, #4]
 8001e22:	f003 030c 	and.w	r3, r3, #12
 8001e26:	2b08      	cmp	r3, #8
 8001e28:	d159      	bne.n	8001ede <HAL_RCC_OscConfig+0xf6>
 8001e2a:	4ba8      	ldr	r3, [pc, #672]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001e2c:	685b      	ldr	r3, [r3, #4]
 8001e2e:	f403 33c0 	and.w	r3, r3, #98304	; 0x18000
 8001e32:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001e36:	d152      	bne.n	8001ede <HAL_RCC_OscConfig+0xf6>
 8001e38:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8001e3c:	f8c7 31f4 	str.w	r3, [r7, #500]	; 0x1f4
 8001e40:	f8d7 31f4 	ldr.w	r3, [r7, #500]	; 0x1f4
 8001e44:	fa93 f3a3 	rbit	r3, r3
 8001e48:	f8c7 31f0 	str.w	r3, [r7, #496]	; 0x1f0
 8001e4c:	f8d7 31f0 	ldr.w	r3, [r7, #496]	; 0x1f0
 8001e50:	fab3 f383 	clz	r3, r3
 8001e54:	b2db      	uxtb	r3, r3
 8001e56:	095b      	lsrs	r3, r3, #5
 8001e58:	b2db      	uxtb	r3, r3
 8001e5a:	f043 0301 	orr.w	r3, r3, #1
 8001e5e:	b2db      	uxtb	r3, r3
 8001e60:	2b01      	cmp	r3, #1
 8001e62:	d102      	bne.n	8001e6a <HAL_RCC_OscConfig+0x82>
 8001e64:	4b99      	ldr	r3, [pc, #612]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001e66:	681b      	ldr	r3, [r3, #0]
 8001e68:	e015      	b.n	8001e96 <HAL_RCC_OscConfig+0xae>
 8001e6a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8001e6e:	f8c7 31ec 	str.w	r3, [r7, #492]	; 0x1ec
 8001e72:	f8d7 31ec 	ldr.w	r3, [r7, #492]	; 0x1ec
 8001e76:	fa93 f3a3 	rbit	r3, r3
 8001e7a:	f8c7 31e8 	str.w	r3, [r7, #488]	; 0x1e8
 8001e7e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8001e82:	f8c7 31e4 	str.w	r3, [r7, #484]	; 0x1e4
 8001e86:	f8d7 31e4 	ldr.w	r3, [r7, #484]	; 0x1e4
 8001e8a:	fa93 f3a3 	rbit	r3, r3
 8001e8e:	f8c7 31e0 	str.w	r3, [r7, #480]	; 0x1e0
 8001e92:	4b8e      	ldr	r3, [pc, #568]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001e94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e96:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8001e9a:	f8c7 21dc 	str.w	r2, [r7, #476]	; 0x1dc
 8001e9e:	f8d7 21dc 	ldr.w	r2, [r7, #476]	; 0x1dc
 8001ea2:	fa92 f2a2 	rbit	r2, r2
 8001ea6:	f8c7 21d8 	str.w	r2, [r7, #472]	; 0x1d8
 8001eaa:	f8d7 21d8 	ldr.w	r2, [r7, #472]	; 0x1d8
 8001eae:	fab2 f282 	clz	r2, r2
 8001eb2:	b2d2      	uxtb	r2, r2
 8001eb4:	f042 0220 	orr.w	r2, r2, #32
 8001eb8:	b2d2      	uxtb	r2, r2
 8001eba:	f002 021f 	and.w	r2, r2, #31
 8001ebe:	2101      	movs	r1, #1
 8001ec0:	fa01 f202 	lsl.w	r2, r1, r2
 8001ec4:	4013      	ands	r3, r2
 8001ec6:	2b00      	cmp	r3, #0
 8001ec8:	f000 8102 	beq.w	80020d0 <HAL_RCC_OscConfig+0x2e8>
 8001ecc:	1d3b      	adds	r3, r7, #4
 8001ece:	681b      	ldr	r3, [r3, #0]
 8001ed0:	685b      	ldr	r3, [r3, #4]
 8001ed2:	2b00      	cmp	r3, #0
 8001ed4:	f040 80fc 	bne.w	80020d0 <HAL_RCC_OscConfig+0x2e8>
 8001ed8:	2301      	movs	r3, #1
 8001eda:	f000 be93 	b.w	8002c04 <HAL_RCC_OscConfig+0xe1c>
 8001ede:	1d3b      	adds	r3, r7, #4
 8001ee0:	681b      	ldr	r3, [r3, #0]
 8001ee2:	685b      	ldr	r3, [r3, #4]
 8001ee4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001ee8:	d106      	bne.n	8001ef8 <HAL_RCC_OscConfig+0x110>
 8001eea:	4b78      	ldr	r3, [pc, #480]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001eec:	681b      	ldr	r3, [r3, #0]
 8001eee:	4a77      	ldr	r2, [pc, #476]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001ef0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001ef4:	6013      	str	r3, [r2, #0]
 8001ef6:	e030      	b.n	8001f5a <HAL_RCC_OscConfig+0x172>
 8001ef8:	1d3b      	adds	r3, r7, #4
 8001efa:	681b      	ldr	r3, [r3, #0]
 8001efc:	685b      	ldr	r3, [r3, #4]
 8001efe:	2b00      	cmp	r3, #0
 8001f00:	d10c      	bne.n	8001f1c <HAL_RCC_OscConfig+0x134>
 8001f02:	4b72      	ldr	r3, [pc, #456]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001f04:	681b      	ldr	r3, [r3, #0]
 8001f06:	4a71      	ldr	r2, [pc, #452]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001f08:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001f0c:	6013      	str	r3, [r2, #0]
 8001f0e:	4b6f      	ldr	r3, [pc, #444]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001f10:	681b      	ldr	r3, [r3, #0]
 8001f12:	4a6e      	ldr	r2, [pc, #440]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001f14:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001f18:	6013      	str	r3, [r2, #0]
 8001f1a:	e01e      	b.n	8001f5a <HAL_RCC_OscConfig+0x172>
 8001f1c:	1d3b      	adds	r3, r7, #4
 8001f1e:	681b      	ldr	r3, [r3, #0]
 8001f20:	685b      	ldr	r3, [r3, #4]
 8001f22:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001f26:	d10c      	bne.n	8001f42 <HAL_RCC_OscConfig+0x15a>
 8001f28:	4b68      	ldr	r3, [pc, #416]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001f2a:	681b      	ldr	r3, [r3, #0]
 8001f2c:	4a67      	ldr	r2, [pc, #412]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001f2e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001f32:	6013      	str	r3, [r2, #0]
 8001f34:	4b65      	ldr	r3, [pc, #404]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001f36:	681b      	ldr	r3, [r3, #0]
 8001f38:	4a64      	ldr	r2, [pc, #400]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001f3a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001f3e:	6013      	str	r3, [r2, #0]
 8001f40:	e00b      	b.n	8001f5a <HAL_RCC_OscConfig+0x172>
 8001f42:	4b62      	ldr	r3, [pc, #392]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001f44:	681b      	ldr	r3, [r3, #0]
 8001f46:	4a61      	ldr	r2, [pc, #388]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001f48:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001f4c:	6013      	str	r3, [r2, #0]
 8001f4e:	4b5f      	ldr	r3, [pc, #380]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001f50:	681b      	ldr	r3, [r3, #0]
 8001f52:	4a5e      	ldr	r2, [pc, #376]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001f54:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001f58:	6013      	str	r3, [r2, #0]
 8001f5a:	1d3b      	adds	r3, r7, #4
 8001f5c:	681b      	ldr	r3, [r3, #0]
 8001f5e:	685b      	ldr	r3, [r3, #4]
 8001f60:	2b00      	cmp	r3, #0
 8001f62:	d059      	beq.n	8002018 <HAL_RCC_OscConfig+0x230>
 8001f64:	f7ff fc8e 	bl	8001884 <HAL_GetTick>
 8001f68:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 8001f6c:	e00a      	b.n	8001f84 <HAL_RCC_OscConfig+0x19c>
 8001f6e:	f7ff fc89 	bl	8001884 <HAL_GetTick>
 8001f72:	4602      	mov	r2, r0
 8001f74:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8001f78:	1ad3      	subs	r3, r2, r3
 8001f7a:	2b64      	cmp	r3, #100	; 0x64
 8001f7c:	d902      	bls.n	8001f84 <HAL_RCC_OscConfig+0x19c>
 8001f7e:	2303      	movs	r3, #3
 8001f80:	f000 be40 	b.w	8002c04 <HAL_RCC_OscConfig+0xe1c>
 8001f84:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8001f88:	f8c7 31d4 	str.w	r3, [r7, #468]	; 0x1d4
 8001f8c:	f8d7 31d4 	ldr.w	r3, [r7, #468]	; 0x1d4
 8001f90:	fa93 f3a3 	rbit	r3, r3
 8001f94:	f8c7 31d0 	str.w	r3, [r7, #464]	; 0x1d0
 8001f98:	f8d7 31d0 	ldr.w	r3, [r7, #464]	; 0x1d0
 8001f9c:	fab3 f383 	clz	r3, r3
 8001fa0:	b2db      	uxtb	r3, r3
 8001fa2:	095b      	lsrs	r3, r3, #5
 8001fa4:	b2db      	uxtb	r3, r3
 8001fa6:	f043 0301 	orr.w	r3, r3, #1
 8001faa:	b2db      	uxtb	r3, r3
 8001fac:	2b01      	cmp	r3, #1
 8001fae:	d102      	bne.n	8001fb6 <HAL_RCC_OscConfig+0x1ce>
 8001fb0:	4b46      	ldr	r3, [pc, #280]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001fb2:	681b      	ldr	r3, [r3, #0]
 8001fb4:	e015      	b.n	8001fe2 <HAL_RCC_OscConfig+0x1fa>
 8001fb6:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8001fba:	f8c7 31cc 	str.w	r3, [r7, #460]	; 0x1cc
 8001fbe:	f8d7 31cc 	ldr.w	r3, [r7, #460]	; 0x1cc
 8001fc2:	fa93 f3a3 	rbit	r3, r3
 8001fc6:	f8c7 31c8 	str.w	r3, [r7, #456]	; 0x1c8
 8001fca:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8001fce:	f8c7 31c4 	str.w	r3, [r7, #452]	; 0x1c4
 8001fd2:	f8d7 31c4 	ldr.w	r3, [r7, #452]	; 0x1c4
 8001fd6:	fa93 f3a3 	rbit	r3, r3
 8001fda:	f8c7 31c0 	str.w	r3, [r7, #448]	; 0x1c0
 8001fde:	4b3b      	ldr	r3, [pc, #236]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8001fe0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001fe2:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8001fe6:	f8c7 21bc 	str.w	r2, [r7, #444]	; 0x1bc
 8001fea:	f8d7 21bc 	ldr.w	r2, [r7, #444]	; 0x1bc
 8001fee:	fa92 f2a2 	rbit	r2, r2
 8001ff2:	f8c7 21b8 	str.w	r2, [r7, #440]	; 0x1b8
 8001ff6:	f8d7 21b8 	ldr.w	r2, [r7, #440]	; 0x1b8
 8001ffa:	fab2 f282 	clz	r2, r2
 8001ffe:	b2d2      	uxtb	r2, r2
 8002000:	f042 0220 	orr.w	r2, r2, #32
 8002004:	b2d2      	uxtb	r2, r2
 8002006:	f002 021f 	and.w	r2, r2, #31
 800200a:	2101      	movs	r1, #1
 800200c:	fa01 f202 	lsl.w	r2, r1, r2
 8002010:	4013      	ands	r3, r2
 8002012:	2b00      	cmp	r3, #0
 8002014:	d0ab      	beq.n	8001f6e <HAL_RCC_OscConfig+0x186>
 8002016:	e05c      	b.n	80020d2 <HAL_RCC_OscConfig+0x2ea>
 8002018:	f7ff fc34 	bl	8001884 <HAL_GetTick>
 800201c:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 8002020:	e00a      	b.n	8002038 <HAL_RCC_OscConfig+0x250>
 8002022:	f7ff fc2f 	bl	8001884 <HAL_GetTick>
 8002026:	4602      	mov	r2, r0
 8002028:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 800202c:	1ad3      	subs	r3, r2, r3
 800202e:	2b64      	cmp	r3, #100	; 0x64
 8002030:	d902      	bls.n	8002038 <HAL_RCC_OscConfig+0x250>
 8002032:	2303      	movs	r3, #3
 8002034:	f000 bde6 	b.w	8002c04 <HAL_RCC_OscConfig+0xe1c>
 8002038:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800203c:	f8c7 31b4 	str.w	r3, [r7, #436]	; 0x1b4
 8002040:	f8d7 31b4 	ldr.w	r3, [r7, #436]	; 0x1b4
 8002044:	fa93 f3a3 	rbit	r3, r3
 8002048:	f8c7 31b0 	str.w	r3, [r7, #432]	; 0x1b0
 800204c:	f8d7 31b0 	ldr.w	r3, [r7, #432]	; 0x1b0
 8002050:	fab3 f383 	clz	r3, r3
 8002054:	b2db      	uxtb	r3, r3
 8002056:	095b      	lsrs	r3, r3, #5
 8002058:	b2db      	uxtb	r3, r3
 800205a:	f043 0301 	orr.w	r3, r3, #1
 800205e:	b2db      	uxtb	r3, r3
 8002060:	2b01      	cmp	r3, #1
 8002062:	d102      	bne.n	800206a <HAL_RCC_OscConfig+0x282>
 8002064:	4b19      	ldr	r3, [pc, #100]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8002066:	681b      	ldr	r3, [r3, #0]
 8002068:	e015      	b.n	8002096 <HAL_RCC_OscConfig+0x2ae>
 800206a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800206e:	f8c7 31ac 	str.w	r3, [r7, #428]	; 0x1ac
 8002072:	f8d7 31ac 	ldr.w	r3, [r7, #428]	; 0x1ac
 8002076:	fa93 f3a3 	rbit	r3, r3
 800207a:	f8c7 31a8 	str.w	r3, [r7, #424]	; 0x1a8
 800207e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8002082:	f8c7 31a4 	str.w	r3, [r7, #420]	; 0x1a4
 8002086:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 800208a:	fa93 f3a3 	rbit	r3, r3
 800208e:	f8c7 31a0 	str.w	r3, [r7, #416]	; 0x1a0
 8002092:	4b0e      	ldr	r3, [pc, #56]	; (80020cc <HAL_RCC_OscConfig+0x2e4>)
 8002094:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002096:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 800209a:	f8c7 219c 	str.w	r2, [r7, #412]	; 0x19c
 800209e:	f8d7 219c 	ldr.w	r2, [r7, #412]	; 0x19c
 80020a2:	fa92 f2a2 	rbit	r2, r2
 80020a6:	f8c7 2198 	str.w	r2, [r7, #408]	; 0x198
 80020aa:	f8d7 2198 	ldr.w	r2, [r7, #408]	; 0x198
 80020ae:	fab2 f282 	clz	r2, r2
 80020b2:	b2d2      	uxtb	r2, r2
 80020b4:	f042 0220 	orr.w	r2, r2, #32
 80020b8:	b2d2      	uxtb	r2, r2
 80020ba:	f002 021f 	and.w	r2, r2, #31
 80020be:	2101      	movs	r1, #1
 80020c0:	fa01 f202 	lsl.w	r2, r1, r2
 80020c4:	4013      	ands	r3, r2
 80020c6:	2b00      	cmp	r3, #0
 80020c8:	d1ab      	bne.n	8002022 <HAL_RCC_OscConfig+0x23a>
 80020ca:	e002      	b.n	80020d2 <HAL_RCC_OscConfig+0x2ea>
 80020cc:	40021000 	.word	0x40021000
 80020d0:	bf00      	nop
 80020d2:	1d3b      	adds	r3, r7, #4
 80020d4:	681b      	ldr	r3, [r3, #0]
 80020d6:	681b      	ldr	r3, [r3, #0]
 80020d8:	f003 0302 	and.w	r3, r3, #2
 80020dc:	2b00      	cmp	r3, #0
 80020de:	f000 8170 	beq.w	80023c2 <HAL_RCC_OscConfig+0x5da>
 80020e2:	4bd0      	ldr	r3, [pc, #832]	; (8002424 <HAL_RCC_OscConfig+0x63c>)
 80020e4:	685b      	ldr	r3, [r3, #4]
 80020e6:	f003 030c 	and.w	r3, r3, #12
 80020ea:	2b00      	cmp	r3, #0
 80020ec:	d00c      	beq.n	8002108 <HAL_RCC_OscConfig+0x320>
 80020ee:	4bcd      	ldr	r3, [pc, #820]	; (8002424 <HAL_RCC_OscConfig+0x63c>)
 80020f0:	685b      	ldr	r3, [r3, #4]
 80020f2:	f003 030c 	and.w	r3, r3, #12
 80020f6:	2b08      	cmp	r3, #8
 80020f8:	d16d      	bne.n	80021d6 <HAL_RCC_OscConfig+0x3ee>
 80020fa:	4bca      	ldr	r3, [pc, #808]	; (8002424 <HAL_RCC_OscConfig+0x63c>)
 80020fc:	685b      	ldr	r3, [r3, #4]
 80020fe:	f403 33c0 	and.w	r3, r3, #98304	; 0x18000
 8002102:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002106:	d166      	bne.n	80021d6 <HAL_RCC_OscConfig+0x3ee>
 8002108:	2302      	movs	r3, #2
 800210a:	f8c7 3194 	str.w	r3, [r7, #404]	; 0x194
 800210e:	f8d7 3194 	ldr.w	r3, [r7, #404]	; 0x194
 8002112:	fa93 f3a3 	rbit	r3, r3
 8002116:	f8c7 3190 	str.w	r3, [r7, #400]	; 0x190
 800211a:	f8d7 3190 	ldr.w	r3, [r7, #400]	; 0x190
 800211e:	fab3 f383 	clz	r3, r3
 8002122:	b2db      	uxtb	r3, r3
 8002124:	095b      	lsrs	r3, r3, #5
 8002126:	b2db      	uxtb	r3, r3
 8002128:	f043 0301 	orr.w	r3, r3, #1
 800212c:	b2db      	uxtb	r3, r3
 800212e:	2b01      	cmp	r3, #1
 8002130:	d102      	bne.n	8002138 <HAL_RCC_OscConfig+0x350>
 8002132:	4bbc      	ldr	r3, [pc, #752]	; (8002424 <HAL_RCC_OscConfig+0x63c>)
 8002134:	681b      	ldr	r3, [r3, #0]
 8002136:	e013      	b.n	8002160 <HAL_RCC_OscConfig+0x378>
 8002138:	2302      	movs	r3, #2
 800213a:	f8c7 318c 	str.w	r3, [r7, #396]	; 0x18c
 800213e:	f8d7 318c 	ldr.w	r3, [r7, #396]	; 0x18c
 8002142:	fa93 f3a3 	rbit	r3, r3
 8002146:	f8c7 3188 	str.w	r3, [r7, #392]	; 0x188
 800214a:	2302      	movs	r3, #2
 800214c:	f8c7 3184 	str.w	r3, [r7, #388]	; 0x184
 8002150:	f8d7 3184 	ldr.w	r3, [r7, #388]	; 0x184
 8002154:	fa93 f3a3 	rbit	r3, r3
 8002158:	f8c7 3180 	str.w	r3, [r7, #384]	; 0x180
 800215c:	4bb1      	ldr	r3, [pc, #708]	; (8002424 <HAL_RCC_OscConfig+0x63c>)
 800215e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002160:	2202      	movs	r2, #2
 8002162:	f8c7 217c 	str.w	r2, [r7, #380]	; 0x17c
 8002166:	f8d7 217c 	ldr.w	r2, [r7, #380]	; 0x17c
 800216a:	fa92 f2a2 	rbit	r2, r2
 800216e:	f8c7 2178 	str.w	r2, [r7, #376]	; 0x178
 8002172:	f8d7 2178 	ldr.w	r2, [r7, #376]	; 0x178
 8002176:	fab2 f282 	clz	r2, r2
 800217a:	b2d2      	uxtb	r2, r2
 800217c:	f042 0220 	orr.w	r2, r2, #32
 8002180:	b2d2      	uxtb	r2, r2
 8002182:	f002 021f 	and.w	r2, r2, #31
 8002186:	2101      	movs	r1, #1
 8002188:	fa01 f202 	lsl.w	r2, r1, r2
 800218c:	4013      	ands	r3, r2
 800218e:	2b00      	cmp	r3, #0
 8002190:	d007      	beq.n	80021a2 <HAL_RCC_OscConfig+0x3ba>
 8002192:	1d3b      	adds	r3, r7, #4
 8002194:	681b      	ldr	r3, [r3, #0]
 8002196:	68db      	ldr	r3, [r3, #12]
 8002198:	2b01      	cmp	r3, #1
 800219a:	d002      	beq.n	80021a2 <HAL_RCC_OscConfig+0x3ba>
 800219c:	2301      	movs	r3, #1
 800219e:	f000 bd31 	b.w	8002c04 <HAL_RCC_OscConfig+0xe1c>
 80021a2:	4ba0      	ldr	r3, [pc, #640]	; (8002424 <HAL_RCC_OscConfig+0x63c>)
 80021a4:	681b      	ldr	r3, [r3, #0]
 80021a6:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80021aa:	1d3b      	adds	r3, r7, #4
 80021ac:	681b      	ldr	r3, [r3, #0]
 80021ae:	691b      	ldr	r3, [r3, #16]
 80021b0:	21f8      	movs	r1, #248	; 0xf8
 80021b2:	f8c7 1174 	str.w	r1, [r7, #372]	; 0x174
 80021b6:	f8d7 1174 	ldr.w	r1, [r7, #372]	; 0x174
 80021ba:	fa91 f1a1 	rbit	r1, r1
 80021be:	f8c7 1170 	str.w	r1, [r7, #368]	; 0x170
 80021c2:	f8d7 1170 	ldr.w	r1, [r7, #368]	; 0x170
 80021c6:	fab1 f181 	clz	r1, r1
 80021ca:	b2c9      	uxtb	r1, r1
 80021cc:	408b      	lsls	r3, r1
 80021ce:	4995      	ldr	r1, [pc, #596]	; (8002424 <HAL_RCC_OscConfig+0x63c>)
 80021d0:	4313      	orrs	r3, r2
 80021d2:	600b      	str	r3, [r1, #0]
 80021d4:	e0f5      	b.n	80023c2 <HAL_RCC_OscConfig+0x5da>
 80021d6:	1d3b      	adds	r3, r7, #4
 80021d8:	681b      	ldr	r3, [r3, #0]
 80021da:	68db      	ldr	r3, [r3, #12]
 80021dc:	2b00      	cmp	r3, #0
 80021de:	f000 8085 	beq.w	80022ec <HAL_RCC_OscConfig+0x504>
 80021e2:	2301      	movs	r3, #1
 80021e4:	f8c7 316c 	str.w	r3, [r7, #364]	; 0x16c
 80021e8:	f8d7 316c 	ldr.w	r3, [r7, #364]	; 0x16c
 80021ec:	fa93 f3a3 	rbit	r3, r3
 80021f0:	f8c7 3168 	str.w	r3, [r7, #360]	; 0x168
 80021f4:	f8d7 3168 	ldr.w	r3, [r7, #360]	; 0x168
 80021f8:	fab3 f383 	clz	r3, r3
 80021fc:	b2db      	uxtb	r3, r3
 80021fe:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8002202:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8002206:	009b      	lsls	r3, r3, #2
 8002208:	461a      	mov	r2, r3
 800220a:	2301      	movs	r3, #1
 800220c:	6013      	str	r3, [r2, #0]
 800220e:	f7ff fb39 	bl	8001884 <HAL_GetTick>
 8002212:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 8002216:	e00a      	b.n	800222e <HAL_RCC_OscConfig+0x446>
 8002218:	f7ff fb34 	bl	8001884 <HAL_GetTick>
 800221c:	4602      	mov	r2, r0
 800221e:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8002222:	1ad3      	subs	r3, r2, r3
 8002224:	2b02      	cmp	r3, #2
 8002226:	d902      	bls.n	800222e <HAL_RCC_OscConfig+0x446>
 8002228:	2303      	movs	r3, #3
 800222a:	f000 bceb 	b.w	8002c04 <HAL_RCC_OscConfig+0xe1c>
 800222e:	2302      	movs	r3, #2
 8002230:	f8c7 3164 	str.w	r3, [r7, #356]	; 0x164
 8002234:	f8d7 3164 	ldr.w	r3, [r7, #356]	; 0x164
 8002238:	fa93 f3a3 	rbit	r3, r3
 800223c:	f8c7 3160 	str.w	r3, [r7, #352]	; 0x160
 8002240:	f8d7 3160 	ldr.w	r3, [r7, #352]	; 0x160
 8002244:	fab3 f383 	clz	r3, r3
 8002248:	b2db      	uxtb	r3, r3
 800224a:	095b      	lsrs	r3, r3, #5
 800224c:	b2db      	uxtb	r3, r3
 800224e:	f043 0301 	orr.w	r3, r3, #1
 8002252:	b2db      	uxtb	r3, r3
 8002254:	2b01      	cmp	r3, #1
 8002256:	d102      	bne.n	800225e <HAL_RCC_OscConfig+0x476>
 8002258:	4b72      	ldr	r3, [pc, #456]	; (8002424 <HAL_RCC_OscConfig+0x63c>)
 800225a:	681b      	ldr	r3, [r3, #0]
 800225c:	e013      	b.n	8002286 <HAL_RCC_OscConfig+0x49e>
 800225e:	2302      	movs	r3, #2
 8002260:	f8c7 315c 	str.w	r3, [r7, #348]	; 0x15c
 8002264:	f8d7 315c 	ldr.w	r3, [r7, #348]	; 0x15c
 8002268:	fa93 f3a3 	rbit	r3, r3
 800226c:	f8c7 3158 	str.w	r3, [r7, #344]	; 0x158
 8002270:	2302      	movs	r3, #2
 8002272:	f8c7 3154 	str.w	r3, [r7, #340]	; 0x154
 8002276:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 800227a:	fa93 f3a3 	rbit	r3, r3
 800227e:	f8c7 3150 	str.w	r3, [r7, #336]	; 0x150
 8002282:	4b68      	ldr	r3, [pc, #416]	; (8002424 <HAL_RCC_OscConfig+0x63c>)
 8002284:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002286:	2202      	movs	r2, #2
 8002288:	f8c7 214c 	str.w	r2, [r7, #332]	; 0x14c
 800228c:	f8d7 214c 	ldr.w	r2, [r7, #332]	; 0x14c
 8002290:	fa92 f2a2 	rbit	r2, r2
 8002294:	f8c7 2148 	str.w	r2, [r7, #328]	; 0x148
 8002298:	f8d7 2148 	ldr.w	r2, [r7, #328]	; 0x148
 800229c:	fab2 f282 	clz	r2, r2
 80022a0:	b2d2      	uxtb	r2, r2
 80022a2:	f042 0220 	orr.w	r2, r2, #32
 80022a6:	b2d2      	uxtb	r2, r2
 80022a8:	f002 021f 	and.w	r2, r2, #31
 80022ac:	2101      	movs	r1, #1
 80022ae:	fa01 f202 	lsl.w	r2, r1, r2
 80022b2:	4013      	ands	r3, r2
 80022b4:	2b00      	cmp	r3, #0
 80022b6:	d0af      	beq.n	8002218 <HAL_RCC_OscConfig+0x430>
 80022b8:	4b5a      	ldr	r3, [pc, #360]	; (8002424 <HAL_RCC_OscConfig+0x63c>)
 80022ba:	681b      	ldr	r3, [r3, #0]
 80022bc:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80022c0:	1d3b      	adds	r3, r7, #4
 80022c2:	681b      	ldr	r3, [r3, #0]
 80022c4:	691b      	ldr	r3, [r3, #16]
 80022c6:	21f8      	movs	r1, #248	; 0xf8
 80022c8:	f8c7 1144 	str.w	r1, [r7, #324]	; 0x144
 80022cc:	f8d7 1144 	ldr.w	r1, [r7, #324]	; 0x144
 80022d0:	fa91 f1a1 	rbit	r1, r1
 80022d4:	f8c7 1140 	str.w	r1, [r7, #320]	; 0x140
 80022d8:	f8d7 1140 	ldr.w	r1, [r7, #320]	; 0x140
 80022dc:	fab1 f181 	clz	r1, r1
 80022e0:	b2c9      	uxtb	r1, r1
 80022e2:	408b      	lsls	r3, r1
 80022e4:	494f      	ldr	r1, [pc, #316]	; (8002424 <HAL_RCC_OscConfig+0x63c>)
 80022e6:	4313      	orrs	r3, r2
 80022e8:	600b      	str	r3, [r1, #0]
 80022ea:	e06a      	b.n	80023c2 <HAL_RCC_OscConfig+0x5da>
 80022ec:	2301      	movs	r3, #1
 80022ee:	f8c7 313c 	str.w	r3, [r7, #316]	; 0x13c
 80022f2:	f8d7 313c 	ldr.w	r3, [r7, #316]	; 0x13c
 80022f6:	fa93 f3a3 	rbit	r3, r3
 80022fa:	f8c7 3138 	str.w	r3, [r7, #312]	; 0x138
 80022fe:	f8d7 3138 	ldr.w	r3, [r7, #312]	; 0x138
 8002302:	fab3 f383 	clz	r3, r3
 8002306:	b2db      	uxtb	r3, r3
 8002308:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 800230c:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8002310:	009b      	lsls	r3, r3, #2
 8002312:	461a      	mov	r2, r3
 8002314:	2300      	movs	r3, #0
 8002316:	6013      	str	r3, [r2, #0]
 8002318:	f7ff fab4 	bl	8001884 <HAL_GetTick>
 800231c:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 8002320:	e00a      	b.n	8002338 <HAL_RCC_OscConfig+0x550>
 8002322:	f7ff faaf 	bl	8001884 <HAL_GetTick>
 8002326:	4602      	mov	r2, r0
 8002328:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 800232c:	1ad3      	subs	r3, r2, r3
 800232e:	2b02      	cmp	r3, #2
 8002330:	d902      	bls.n	8002338 <HAL_RCC_OscConfig+0x550>
 8002332:	2303      	movs	r3, #3
 8002334:	f000 bc66 	b.w	8002c04 <HAL_RCC_OscConfig+0xe1c>
 8002338:	2302      	movs	r3, #2
 800233a:	f8c7 3134 	str.w	r3, [r7, #308]	; 0x134
 800233e:	f8d7 3134 	ldr.w	r3, [r7, #308]	; 0x134
 8002342:	fa93 f3a3 	rbit	r3, r3
 8002346:	f8c7 3130 	str.w	r3, [r7, #304]	; 0x130
 800234a:	f8d7 3130 	ldr.w	r3, [r7, #304]	; 0x130
 800234e:	fab3 f383 	clz	r3, r3
 8002352:	b2db      	uxtb	r3, r3
 8002354:	095b      	lsrs	r3, r3, #5
 8002356:	b2db      	uxtb	r3, r3
 8002358:	f043 0301 	orr.w	r3, r3, #1
 800235c:	b2db      	uxtb	r3, r3
 800235e:	2b01      	cmp	r3, #1
 8002360:	d102      	bne.n	8002368 <HAL_RCC_OscConfig+0x580>
 8002362:	4b30      	ldr	r3, [pc, #192]	; (8002424 <HAL_RCC_OscConfig+0x63c>)
 8002364:	681b      	ldr	r3, [r3, #0]
 8002366:	e013      	b.n	8002390 <HAL_RCC_OscConfig+0x5a8>
 8002368:	2302      	movs	r3, #2
 800236a:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 800236e:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8002372:	fa93 f3a3 	rbit	r3, r3
 8002376:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 800237a:	2302      	movs	r3, #2
 800237c:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 8002380:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8002384:	fa93 f3a3 	rbit	r3, r3
 8002388:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
 800238c:	4b25      	ldr	r3, [pc, #148]	; (8002424 <HAL_RCC_OscConfig+0x63c>)
 800238e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002390:	2202      	movs	r2, #2
 8002392:	f8c7 211c 	str.w	r2, [r7, #284]	; 0x11c
 8002396:	f8d7 211c 	ldr.w	r2, [r7, #284]	; 0x11c
 800239a:	fa92 f2a2 	rbit	r2, r2
 800239e:	f8c7 2118 	str.w	r2, [r7, #280]	; 0x118
 80023a2:	f8d7 2118 	ldr.w	r2, [r7, #280]	; 0x118
 80023a6:	fab2 f282 	clz	r2, r2
 80023aa:	b2d2      	uxtb	r2, r2
 80023ac:	f042 0220 	orr.w	r2, r2, #32
 80023b0:	b2d2      	uxtb	r2, r2
 80023b2:	f002 021f 	and.w	r2, r2, #31
 80023b6:	2101      	movs	r1, #1
 80023b8:	fa01 f202 	lsl.w	r2, r1, r2
 80023bc:	4013      	ands	r3, r2
 80023be:	2b00      	cmp	r3, #0
 80023c0:	d1af      	bne.n	8002322 <HAL_RCC_OscConfig+0x53a>
 80023c2:	1d3b      	adds	r3, r7, #4
 80023c4:	681b      	ldr	r3, [r3, #0]
 80023c6:	681b      	ldr	r3, [r3, #0]
 80023c8:	f003 0308 	and.w	r3, r3, #8
 80023cc:	2b00      	cmp	r3, #0
 80023ce:	f000 80da 	beq.w	8002586 <HAL_RCC_OscConfig+0x79e>
 80023d2:	1d3b      	adds	r3, r7, #4
 80023d4:	681b      	ldr	r3, [r3, #0]
 80023d6:	695b      	ldr	r3, [r3, #20]
 80023d8:	2b00      	cmp	r3, #0
 80023da:	d069      	beq.n	80024b0 <HAL_RCC_OscConfig+0x6c8>
 80023dc:	2301      	movs	r3, #1
 80023de:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 80023e2:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80023e6:	fa93 f3a3 	rbit	r3, r3
 80023ea:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
 80023ee:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 80023f2:	fab3 f383 	clz	r3, r3
 80023f6:	b2db      	uxtb	r3, r3
 80023f8:	461a      	mov	r2, r3
 80023fa:	4b0b      	ldr	r3, [pc, #44]	; (8002428 <HAL_RCC_OscConfig+0x640>)
 80023fc:	4413      	add	r3, r2
 80023fe:	009b      	lsls	r3, r3, #2
 8002400:	461a      	mov	r2, r3
 8002402:	2301      	movs	r3, #1
 8002404:	6013      	str	r3, [r2, #0]
 8002406:	f7ff fa3d 	bl	8001884 <HAL_GetTick>
 800240a:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 800240e:	e00d      	b.n	800242c <HAL_RCC_OscConfig+0x644>
 8002410:	f7ff fa38 	bl	8001884 <HAL_GetTick>
 8002414:	4602      	mov	r2, r0
 8002416:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 800241a:	1ad3      	subs	r3, r2, r3
 800241c:	2b02      	cmp	r3, #2
 800241e:	d905      	bls.n	800242c <HAL_RCC_OscConfig+0x644>
 8002420:	2303      	movs	r3, #3
 8002422:	e3ef      	b.n	8002c04 <HAL_RCC_OscConfig+0xe1c>
 8002424:	40021000 	.word	0x40021000
 8002428:	10908120 	.word	0x10908120
 800242c:	2302      	movs	r3, #2
 800242e:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8002432:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8002436:	fa93 f2a3 	rbit	r2, r3
 800243a:	f507 7384 	add.w	r3, r7, #264	; 0x108
 800243e:	601a      	str	r2, [r3, #0]
 8002440:	f507 7382 	add.w	r3, r7, #260	; 0x104
 8002444:	2202      	movs	r2, #2
 8002446:	601a      	str	r2, [r3, #0]
 8002448:	f507 7382 	add.w	r3, r7, #260	; 0x104
 800244c:	681b      	ldr	r3, [r3, #0]
 800244e:	fa93 f2a3 	rbit	r2, r3
 8002452:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8002456:	601a      	str	r2, [r3, #0]
 8002458:	f107 03fc 	add.w	r3, r7, #252	; 0xfc
 800245c:	2202      	movs	r2, #2
 800245e:	601a      	str	r2, [r3, #0]
 8002460:	f107 03fc 	add.w	r3, r7, #252	; 0xfc
 8002464:	681b      	ldr	r3, [r3, #0]
 8002466:	fa93 f2a3 	rbit	r2, r3
 800246a:	f107 03f8 	add.w	r3, r7, #248	; 0xf8
 800246e:	601a      	str	r2, [r3, #0]
 8002470:	4ba4      	ldr	r3, [pc, #656]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 8002472:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002474:	f107 03f4 	add.w	r3, r7, #244	; 0xf4
 8002478:	2102      	movs	r1, #2
 800247a:	6019      	str	r1, [r3, #0]
 800247c:	f107 03f4 	add.w	r3, r7, #244	; 0xf4
 8002480:	681b      	ldr	r3, [r3, #0]
 8002482:	fa93 f1a3 	rbit	r1, r3
 8002486:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
 800248a:	6019      	str	r1, [r3, #0]
 800248c:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
 8002490:	681b      	ldr	r3, [r3, #0]
 8002492:	fab3 f383 	clz	r3, r3
 8002496:	b2db      	uxtb	r3, r3
 8002498:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 800249c:	b2db      	uxtb	r3, r3
 800249e:	f003 031f 	and.w	r3, r3, #31
 80024a2:	2101      	movs	r1, #1
 80024a4:	fa01 f303 	lsl.w	r3, r1, r3
 80024a8:	4013      	ands	r3, r2
 80024aa:	2b00      	cmp	r3, #0
 80024ac:	d0b0      	beq.n	8002410 <HAL_RCC_OscConfig+0x628>
 80024ae:	e06a      	b.n	8002586 <HAL_RCC_OscConfig+0x79e>
 80024b0:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 80024b4:	2201      	movs	r2, #1
 80024b6:	601a      	str	r2, [r3, #0]
 80024b8:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 80024bc:	681b      	ldr	r3, [r3, #0]
 80024be:	fa93 f2a3 	rbit	r2, r3
 80024c2:	f107 03e8 	add.w	r3, r7, #232	; 0xe8
 80024c6:	601a      	str	r2, [r3, #0]
 80024c8:	f107 03e8 	add.w	r3, r7, #232	; 0xe8
 80024cc:	681b      	ldr	r3, [r3, #0]
 80024ce:	fab3 f383 	clz	r3, r3
 80024d2:	b2db      	uxtb	r3, r3
 80024d4:	461a      	mov	r2, r3
 80024d6:	4b8c      	ldr	r3, [pc, #560]	; (8002708 <HAL_RCC_OscConfig+0x920>)
 80024d8:	4413      	add	r3, r2
 80024da:	009b      	lsls	r3, r3, #2
 80024dc:	461a      	mov	r2, r3
 80024de:	2300      	movs	r3, #0
 80024e0:	6013      	str	r3, [r2, #0]
 80024e2:	f7ff f9cf 	bl	8001884 <HAL_GetTick>
 80024e6:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 80024ea:	e009      	b.n	8002500 <HAL_RCC_OscConfig+0x718>
 80024ec:	f7ff f9ca 	bl	8001884 <HAL_GetTick>
 80024f0:	4602      	mov	r2, r0
 80024f2:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 80024f6:	1ad3      	subs	r3, r2, r3
 80024f8:	2b02      	cmp	r3, #2
 80024fa:	d901      	bls.n	8002500 <HAL_RCC_OscConfig+0x718>
 80024fc:	2303      	movs	r3, #3
 80024fe:	e381      	b.n	8002c04 <HAL_RCC_OscConfig+0xe1c>
 8002500:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8002504:	2202      	movs	r2, #2
 8002506:	601a      	str	r2, [r3, #0]
 8002508:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 800250c:	681b      	ldr	r3, [r3, #0]
 800250e:	fa93 f2a3 	rbit	r2, r3
 8002512:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 8002516:	601a      	str	r2, [r3, #0]
 8002518:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 800251c:	2202      	movs	r2, #2
 800251e:	601a      	str	r2, [r3, #0]
 8002520:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8002524:	681b      	ldr	r3, [r3, #0]
 8002526:	fa93 f2a3 	rbit	r2, r3
 800252a:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 800252e:	601a      	str	r2, [r3, #0]
 8002530:	f107 03d4 	add.w	r3, r7, #212	; 0xd4
 8002534:	2202      	movs	r2, #2
 8002536:	601a      	str	r2, [r3, #0]
 8002538:	f107 03d4 	add.w	r3, r7, #212	; 0xd4
 800253c:	681b      	ldr	r3, [r3, #0]
 800253e:	fa93 f2a3 	rbit	r2, r3
 8002542:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
 8002546:	601a      	str	r2, [r3, #0]
 8002548:	4b6e      	ldr	r3, [pc, #440]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 800254a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800254c:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 8002550:	2102      	movs	r1, #2
 8002552:	6019      	str	r1, [r3, #0]
 8002554:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 8002558:	681b      	ldr	r3, [r3, #0]
 800255a:	fa93 f1a3 	rbit	r1, r3
 800255e:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 8002562:	6019      	str	r1, [r3, #0]
 8002564:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 8002568:	681b      	ldr	r3, [r3, #0]
 800256a:	fab3 f383 	clz	r3, r3
 800256e:	b2db      	uxtb	r3, r3
 8002570:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 8002574:	b2db      	uxtb	r3, r3
 8002576:	f003 031f 	and.w	r3, r3, #31
 800257a:	2101      	movs	r1, #1
 800257c:	fa01 f303 	lsl.w	r3, r1, r3
 8002580:	4013      	ands	r3, r2
 8002582:	2b00      	cmp	r3, #0
 8002584:	d1b2      	bne.n	80024ec <HAL_RCC_OscConfig+0x704>
 8002586:	1d3b      	adds	r3, r7, #4
 8002588:	681b      	ldr	r3, [r3, #0]
 800258a:	681b      	ldr	r3, [r3, #0]
 800258c:	f003 0304 	and.w	r3, r3, #4
 8002590:	2b00      	cmp	r3, #0
 8002592:	f000 8157 	beq.w	8002844 <HAL_RCC_OscConfig+0xa5c>
 8002596:	2300      	movs	r3, #0
 8002598:	f887 3207 	strb.w	r3, [r7, #519]	; 0x207
 800259c:	4b59      	ldr	r3, [pc, #356]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 800259e:	69db      	ldr	r3, [r3, #28]
 80025a0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80025a4:	2b00      	cmp	r3, #0
 80025a6:	d112      	bne.n	80025ce <HAL_RCC_OscConfig+0x7e6>
 80025a8:	4b56      	ldr	r3, [pc, #344]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 80025aa:	69db      	ldr	r3, [r3, #28]
 80025ac:	4a55      	ldr	r2, [pc, #340]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 80025ae:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80025b2:	61d3      	str	r3, [r2, #28]
 80025b4:	4b53      	ldr	r3, [pc, #332]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 80025b6:	69db      	ldr	r3, [r3, #28]
 80025b8:	f003 5280 	and.w	r2, r3, #268435456	; 0x10000000
 80025bc:	f107 030c 	add.w	r3, r7, #12
 80025c0:	601a      	str	r2, [r3, #0]
 80025c2:	f107 030c 	add.w	r3, r7, #12
 80025c6:	681b      	ldr	r3, [r3, #0]
 80025c8:	2301      	movs	r3, #1
 80025ca:	f887 3207 	strb.w	r3, [r7, #519]	; 0x207
 80025ce:	4b4f      	ldr	r3, [pc, #316]	; (800270c <HAL_RCC_OscConfig+0x924>)
 80025d0:	681b      	ldr	r3, [r3, #0]
 80025d2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80025d6:	2b00      	cmp	r3, #0
 80025d8:	d11a      	bne.n	8002610 <HAL_RCC_OscConfig+0x828>
 80025da:	4b4c      	ldr	r3, [pc, #304]	; (800270c <HAL_RCC_OscConfig+0x924>)
 80025dc:	681b      	ldr	r3, [r3, #0]
 80025de:	4a4b      	ldr	r2, [pc, #300]	; (800270c <HAL_RCC_OscConfig+0x924>)
 80025e0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80025e4:	6013      	str	r3, [r2, #0]
 80025e6:	f7ff f94d 	bl	8001884 <HAL_GetTick>
 80025ea:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 80025ee:	e009      	b.n	8002604 <HAL_RCC_OscConfig+0x81c>
 80025f0:	f7ff f948 	bl	8001884 <HAL_GetTick>
 80025f4:	4602      	mov	r2, r0
 80025f6:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 80025fa:	1ad3      	subs	r3, r2, r3
 80025fc:	2b64      	cmp	r3, #100	; 0x64
 80025fe:	d901      	bls.n	8002604 <HAL_RCC_OscConfig+0x81c>
 8002600:	2303      	movs	r3, #3
 8002602:	e2ff      	b.n	8002c04 <HAL_RCC_OscConfig+0xe1c>
 8002604:	4b41      	ldr	r3, [pc, #260]	; (800270c <HAL_RCC_OscConfig+0x924>)
 8002606:	681b      	ldr	r3, [r3, #0]
 8002608:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800260c:	2b00      	cmp	r3, #0
 800260e:	d0ef      	beq.n	80025f0 <HAL_RCC_OscConfig+0x808>
 8002610:	1d3b      	adds	r3, r7, #4
 8002612:	681b      	ldr	r3, [r3, #0]
 8002614:	689b      	ldr	r3, [r3, #8]
 8002616:	2b01      	cmp	r3, #1
 8002618:	d106      	bne.n	8002628 <HAL_RCC_OscConfig+0x840>
 800261a:	4b3a      	ldr	r3, [pc, #232]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 800261c:	6a1b      	ldr	r3, [r3, #32]
 800261e:	4a39      	ldr	r2, [pc, #228]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 8002620:	f043 0301 	orr.w	r3, r3, #1
 8002624:	6213      	str	r3, [r2, #32]
 8002626:	e02f      	b.n	8002688 <HAL_RCC_OscConfig+0x8a0>
 8002628:	1d3b      	adds	r3, r7, #4
 800262a:	681b      	ldr	r3, [r3, #0]
 800262c:	689b      	ldr	r3, [r3, #8]
 800262e:	2b00      	cmp	r3, #0
 8002630:	d10c      	bne.n	800264c <HAL_RCC_OscConfig+0x864>
 8002632:	4b34      	ldr	r3, [pc, #208]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 8002634:	6a1b      	ldr	r3, [r3, #32]
 8002636:	4a33      	ldr	r2, [pc, #204]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 8002638:	f023 0301 	bic.w	r3, r3, #1
 800263c:	6213      	str	r3, [r2, #32]
 800263e:	4b31      	ldr	r3, [pc, #196]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 8002640:	6a1b      	ldr	r3, [r3, #32]
 8002642:	4a30      	ldr	r2, [pc, #192]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 8002644:	f023 0304 	bic.w	r3, r3, #4
 8002648:	6213      	str	r3, [r2, #32]
 800264a:	e01d      	b.n	8002688 <HAL_RCC_OscConfig+0x8a0>
 800264c:	1d3b      	adds	r3, r7, #4
 800264e:	681b      	ldr	r3, [r3, #0]
 8002650:	689b      	ldr	r3, [r3, #8]
 8002652:	2b05      	cmp	r3, #5
 8002654:	d10c      	bne.n	8002670 <HAL_RCC_OscConfig+0x888>
 8002656:	4b2b      	ldr	r3, [pc, #172]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 8002658:	6a1b      	ldr	r3, [r3, #32]
 800265a:	4a2a      	ldr	r2, [pc, #168]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 800265c:	f043 0304 	orr.w	r3, r3, #4
 8002660:	6213      	str	r3, [r2, #32]
 8002662:	4b28      	ldr	r3, [pc, #160]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 8002664:	6a1b      	ldr	r3, [r3, #32]
 8002666:	4a27      	ldr	r2, [pc, #156]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 8002668:	f043 0301 	orr.w	r3, r3, #1
 800266c:	6213      	str	r3, [r2, #32]
 800266e:	e00b      	b.n	8002688 <HAL_RCC_OscConfig+0x8a0>
 8002670:	4b24      	ldr	r3, [pc, #144]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 8002672:	6a1b      	ldr	r3, [r3, #32]
 8002674:	4a23      	ldr	r2, [pc, #140]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 8002676:	f023 0301 	bic.w	r3, r3, #1
 800267a:	6213      	str	r3, [r2, #32]
 800267c:	4b21      	ldr	r3, [pc, #132]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 800267e:	6a1b      	ldr	r3, [r3, #32]
 8002680:	4a20      	ldr	r2, [pc, #128]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 8002682:	f023 0304 	bic.w	r3, r3, #4
 8002686:	6213      	str	r3, [r2, #32]
 8002688:	1d3b      	adds	r3, r7, #4
 800268a:	681b      	ldr	r3, [r3, #0]
 800268c:	689b      	ldr	r3, [r3, #8]
 800268e:	2b00      	cmp	r3, #0
 8002690:	d06a      	beq.n	8002768 <HAL_RCC_OscConfig+0x980>
 8002692:	f7ff f8f7 	bl	8001884 <HAL_GetTick>
 8002696:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 800269a:	e00b      	b.n	80026b4 <HAL_RCC_OscConfig+0x8cc>
 800269c:	f7ff f8f2 	bl	8001884 <HAL_GetTick>
 80026a0:	4602      	mov	r2, r0
 80026a2:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 80026a6:	1ad3      	subs	r3, r2, r3
 80026a8:	f241 3288 	movw	r2, #5000	; 0x1388
 80026ac:	4293      	cmp	r3, r2
 80026ae:	d901      	bls.n	80026b4 <HAL_RCC_OscConfig+0x8cc>
 80026b0:	2303      	movs	r3, #3
 80026b2:	e2a7      	b.n	8002c04 <HAL_RCC_OscConfig+0xe1c>
 80026b4:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 80026b8:	2202      	movs	r2, #2
 80026ba:	601a      	str	r2, [r3, #0]
 80026bc:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 80026c0:	681b      	ldr	r3, [r3, #0]
 80026c2:	fa93 f2a3 	rbit	r2, r3
 80026c6:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 80026ca:	601a      	str	r2, [r3, #0]
 80026cc:	f107 03bc 	add.w	r3, r7, #188	; 0xbc
 80026d0:	2202      	movs	r2, #2
 80026d2:	601a      	str	r2, [r3, #0]
 80026d4:	f107 03bc 	add.w	r3, r7, #188	; 0xbc
 80026d8:	681b      	ldr	r3, [r3, #0]
 80026da:	fa93 f2a3 	rbit	r2, r3
 80026de:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 80026e2:	601a      	str	r2, [r3, #0]
 80026e4:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 80026e8:	681b      	ldr	r3, [r3, #0]
 80026ea:	fab3 f383 	clz	r3, r3
 80026ee:	b2db      	uxtb	r3, r3
 80026f0:	095b      	lsrs	r3, r3, #5
 80026f2:	b2db      	uxtb	r3, r3
 80026f4:	f043 0302 	orr.w	r3, r3, #2
 80026f8:	b2db      	uxtb	r3, r3
 80026fa:	2b02      	cmp	r3, #2
 80026fc:	d108      	bne.n	8002710 <HAL_RCC_OscConfig+0x928>
 80026fe:	4b01      	ldr	r3, [pc, #4]	; (8002704 <HAL_RCC_OscConfig+0x91c>)
 8002700:	6a1b      	ldr	r3, [r3, #32]
 8002702:	e013      	b.n	800272c <HAL_RCC_OscConfig+0x944>
 8002704:	40021000 	.word	0x40021000
 8002708:	10908120 	.word	0x10908120
 800270c:	40007000 	.word	0x40007000
 8002710:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8002714:	2202      	movs	r2, #2
 8002716:	601a      	str	r2, [r3, #0]
 8002718:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800271c:	681b      	ldr	r3, [r3, #0]
 800271e:	fa93 f2a3 	rbit	r2, r3
 8002722:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
 8002726:	601a      	str	r2, [r3, #0]
 8002728:	4bc0      	ldr	r3, [pc, #768]	; (8002a2c <HAL_RCC_OscConfig+0xc44>)
 800272a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800272c:	f107 02ac 	add.w	r2, r7, #172	; 0xac
 8002730:	2102      	movs	r1, #2
 8002732:	6011      	str	r1, [r2, #0]
 8002734:	f107 02ac 	add.w	r2, r7, #172	; 0xac
 8002738:	6812      	ldr	r2, [r2, #0]
 800273a:	fa92 f1a2 	rbit	r1, r2
 800273e:	f107 02a8 	add.w	r2, r7, #168	; 0xa8
 8002742:	6011      	str	r1, [r2, #0]
 8002744:	f107 02a8 	add.w	r2, r7, #168	; 0xa8
 8002748:	6812      	ldr	r2, [r2, #0]
 800274a:	fab2 f282 	clz	r2, r2
 800274e:	b2d2      	uxtb	r2, r2
 8002750:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002754:	b2d2      	uxtb	r2, r2
 8002756:	f002 021f 	and.w	r2, r2, #31
 800275a:	2101      	movs	r1, #1
 800275c:	fa01 f202 	lsl.w	r2, r1, r2
 8002760:	4013      	ands	r3, r2
 8002762:	2b00      	cmp	r3, #0
 8002764:	d09a      	beq.n	800269c <HAL_RCC_OscConfig+0x8b4>
 8002766:	e063      	b.n	8002830 <HAL_RCC_OscConfig+0xa48>
 8002768:	f7ff f88c 	bl	8001884 <HAL_GetTick>
 800276c:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 8002770:	e00b      	b.n	800278a <HAL_RCC_OscConfig+0x9a2>
 8002772:	f7ff f887 	bl	8001884 <HAL_GetTick>
 8002776:	4602      	mov	r2, r0
 8002778:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 800277c:	1ad3      	subs	r3, r2, r3
 800277e:	f241 3288 	movw	r2, #5000	; 0x1388
 8002782:	4293      	cmp	r3, r2
 8002784:	d901      	bls.n	800278a <HAL_RCC_OscConfig+0x9a2>
 8002786:	2303      	movs	r3, #3
 8002788:	e23c      	b.n	8002c04 <HAL_RCC_OscConfig+0xe1c>
 800278a:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 800278e:	2202      	movs	r2, #2
 8002790:	601a      	str	r2, [r3, #0]
 8002792:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 8002796:	681b      	ldr	r3, [r3, #0]
 8002798:	fa93 f2a3 	rbit	r2, r3
 800279c:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 80027a0:	601a      	str	r2, [r3, #0]
 80027a2:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 80027a6:	2202      	movs	r2, #2
 80027a8:	601a      	str	r2, [r3, #0]
 80027aa:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	fa93 f2a3 	rbit	r2, r3
 80027b4:	f107 0398 	add.w	r3, r7, #152	; 0x98
 80027b8:	601a      	str	r2, [r3, #0]
 80027ba:	f107 0398 	add.w	r3, r7, #152	; 0x98
 80027be:	681b      	ldr	r3, [r3, #0]
 80027c0:	fab3 f383 	clz	r3, r3
 80027c4:	b2db      	uxtb	r3, r3
 80027c6:	095b      	lsrs	r3, r3, #5
 80027c8:	b2db      	uxtb	r3, r3
 80027ca:	f043 0302 	orr.w	r3, r3, #2
 80027ce:	b2db      	uxtb	r3, r3
 80027d0:	2b02      	cmp	r3, #2
 80027d2:	d102      	bne.n	80027da <HAL_RCC_OscConfig+0x9f2>
 80027d4:	4b95      	ldr	r3, [pc, #596]	; (8002a2c <HAL_RCC_OscConfig+0xc44>)
 80027d6:	6a1b      	ldr	r3, [r3, #32]
 80027d8:	e00d      	b.n	80027f6 <HAL_RCC_OscConfig+0xa0e>
 80027da:	f107 0394 	add.w	r3, r7, #148	; 0x94
 80027de:	2202      	movs	r2, #2
 80027e0:	601a      	str	r2, [r3, #0]
 80027e2:	f107 0394 	add.w	r3, r7, #148	; 0x94
 80027e6:	681b      	ldr	r3, [r3, #0]
 80027e8:	fa93 f2a3 	rbit	r2, r3
 80027ec:	f107 0390 	add.w	r3, r7, #144	; 0x90
 80027f0:	601a      	str	r2, [r3, #0]
 80027f2:	4b8e      	ldr	r3, [pc, #568]	; (8002a2c <HAL_RCC_OscConfig+0xc44>)
 80027f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027f6:	f107 028c 	add.w	r2, r7, #140	; 0x8c
 80027fa:	2102      	movs	r1, #2
 80027fc:	6011      	str	r1, [r2, #0]
 80027fe:	f107 028c 	add.w	r2, r7, #140	; 0x8c
 8002802:	6812      	ldr	r2, [r2, #0]
 8002804:	fa92 f1a2 	rbit	r1, r2
 8002808:	f107 0288 	add.w	r2, r7, #136	; 0x88
 800280c:	6011      	str	r1, [r2, #0]
 800280e:	f107 0288 	add.w	r2, r7, #136	; 0x88
 8002812:	6812      	ldr	r2, [r2, #0]
 8002814:	fab2 f282 	clz	r2, r2
 8002818:	b2d2      	uxtb	r2, r2
 800281a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800281e:	b2d2      	uxtb	r2, r2
 8002820:	f002 021f 	and.w	r2, r2, #31
 8002824:	2101      	movs	r1, #1
 8002826:	fa01 f202 	lsl.w	r2, r1, r2
 800282a:	4013      	ands	r3, r2
 800282c:	2b00      	cmp	r3, #0
 800282e:	d1a0      	bne.n	8002772 <HAL_RCC_OscConfig+0x98a>
 8002830:	f897 3207 	ldrb.w	r3, [r7, #519]	; 0x207
 8002834:	2b01      	cmp	r3, #1
 8002836:	d105      	bne.n	8002844 <HAL_RCC_OscConfig+0xa5c>
 8002838:	4b7c      	ldr	r3, [pc, #496]	; (8002a2c <HAL_RCC_OscConfig+0xc44>)
 800283a:	69db      	ldr	r3, [r3, #28]
 800283c:	4a7b      	ldr	r2, [pc, #492]	; (8002a2c <HAL_RCC_OscConfig+0xc44>)
 800283e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002842:	61d3      	str	r3, [r2, #28]
 8002844:	1d3b      	adds	r3, r7, #4
 8002846:	681b      	ldr	r3, [r3, #0]
 8002848:	699b      	ldr	r3, [r3, #24]
 800284a:	2b00      	cmp	r3, #0
 800284c:	f000 81d9 	beq.w	8002c02 <HAL_RCC_OscConfig+0xe1a>
 8002850:	4b76      	ldr	r3, [pc, #472]	; (8002a2c <HAL_RCC_OscConfig+0xc44>)
 8002852:	685b      	ldr	r3, [r3, #4]
 8002854:	f003 030c 	and.w	r3, r3, #12
 8002858:	2b08      	cmp	r3, #8
 800285a:	f000 81a6 	beq.w	8002baa <HAL_RCC_OscConfig+0xdc2>
 800285e:	1d3b      	adds	r3, r7, #4
 8002860:	681b      	ldr	r3, [r3, #0]
 8002862:	699b      	ldr	r3, [r3, #24]
 8002864:	2b02      	cmp	r3, #2
 8002866:	f040 811e 	bne.w	8002aa6 <HAL_RCC_OscConfig+0xcbe>
 800286a:	f107 0384 	add.w	r3, r7, #132	; 0x84
 800286e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002872:	601a      	str	r2, [r3, #0]
 8002874:	f107 0384 	add.w	r3, r7, #132	; 0x84
 8002878:	681b      	ldr	r3, [r3, #0]
 800287a:	fa93 f2a3 	rbit	r2, r3
 800287e:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8002882:	601a      	str	r2, [r3, #0]
 8002884:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8002888:	681b      	ldr	r3, [r3, #0]
 800288a:	fab3 f383 	clz	r3, r3
 800288e:	b2db      	uxtb	r3, r3
 8002890:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8002894:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8002898:	009b      	lsls	r3, r3, #2
 800289a:	461a      	mov	r2, r3
 800289c:	2300      	movs	r3, #0
 800289e:	6013      	str	r3, [r2, #0]
 80028a0:	f7fe fff0 	bl	8001884 <HAL_GetTick>
 80028a4:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 80028a8:	e009      	b.n	80028be <HAL_RCC_OscConfig+0xad6>
 80028aa:	f7fe ffeb 	bl	8001884 <HAL_GetTick>
 80028ae:	4602      	mov	r2, r0
 80028b0:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 80028b4:	1ad3      	subs	r3, r2, r3
 80028b6:	2b02      	cmp	r3, #2
 80028b8:	d901      	bls.n	80028be <HAL_RCC_OscConfig+0xad6>
 80028ba:	2303      	movs	r3, #3
 80028bc:	e1a2      	b.n	8002c04 <HAL_RCC_OscConfig+0xe1c>
 80028be:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 80028c2:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 80028c6:	601a      	str	r2, [r3, #0]
 80028c8:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 80028cc:	681b      	ldr	r3, [r3, #0]
 80028ce:	fa93 f2a3 	rbit	r2, r3
 80028d2:	f107 0378 	add.w	r3, r7, #120	; 0x78
 80028d6:	601a      	str	r2, [r3, #0]
 80028d8:	f107 0378 	add.w	r3, r7, #120	; 0x78
 80028dc:	681b      	ldr	r3, [r3, #0]
 80028de:	fab3 f383 	clz	r3, r3
 80028e2:	b2db      	uxtb	r3, r3
 80028e4:	095b      	lsrs	r3, r3, #5
 80028e6:	b2db      	uxtb	r3, r3
 80028e8:	f043 0301 	orr.w	r3, r3, #1
 80028ec:	b2db      	uxtb	r3, r3
 80028ee:	2b01      	cmp	r3, #1
 80028f0:	d102      	bne.n	80028f8 <HAL_RCC_OscConfig+0xb10>
 80028f2:	4b4e      	ldr	r3, [pc, #312]	; (8002a2c <HAL_RCC_OscConfig+0xc44>)
 80028f4:	681b      	ldr	r3, [r3, #0]
 80028f6:	e01b      	b.n	8002930 <HAL_RCC_OscConfig+0xb48>
 80028f8:	f107 0374 	add.w	r3, r7, #116	; 0x74
 80028fc:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8002900:	601a      	str	r2, [r3, #0]
 8002902:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8002906:	681b      	ldr	r3, [r3, #0]
 8002908:	fa93 f2a3 	rbit	r2, r3
 800290c:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8002910:	601a      	str	r2, [r3, #0]
 8002912:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 8002916:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 800291a:	601a      	str	r2, [r3, #0]
 800291c:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 8002920:	681b      	ldr	r3, [r3, #0]
 8002922:	fa93 f2a3 	rbit	r2, r3
 8002926:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800292a:	601a      	str	r2, [r3, #0]
 800292c:	4b3f      	ldr	r3, [pc, #252]	; (8002a2c <HAL_RCC_OscConfig+0xc44>)
 800292e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002930:	f107 0264 	add.w	r2, r7, #100	; 0x64
 8002934:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8002938:	6011      	str	r1, [r2, #0]
 800293a:	f107 0264 	add.w	r2, r7, #100	; 0x64
 800293e:	6812      	ldr	r2, [r2, #0]
 8002940:	fa92 f1a2 	rbit	r1, r2
 8002944:	f107 0260 	add.w	r2, r7, #96	; 0x60
 8002948:	6011      	str	r1, [r2, #0]
 800294a:	f107 0260 	add.w	r2, r7, #96	; 0x60
 800294e:	6812      	ldr	r2, [r2, #0]
 8002950:	fab2 f282 	clz	r2, r2
 8002954:	b2d2      	uxtb	r2, r2
 8002956:	f042 0220 	orr.w	r2, r2, #32
 800295a:	b2d2      	uxtb	r2, r2
 800295c:	f002 021f 	and.w	r2, r2, #31
 8002960:	2101      	movs	r1, #1
 8002962:	fa01 f202 	lsl.w	r2, r1, r2
 8002966:	4013      	ands	r3, r2
 8002968:	2b00      	cmp	r3, #0
 800296a:	d19e      	bne.n	80028aa <HAL_RCC_OscConfig+0xac2>
 800296c:	4b2f      	ldr	r3, [pc, #188]	; (8002a2c <HAL_RCC_OscConfig+0xc44>)
 800296e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002970:	f023 020f 	bic.w	r2, r3, #15
 8002974:	1d3b      	adds	r3, r7, #4
 8002976:	681b      	ldr	r3, [r3, #0]
 8002978:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800297a:	492c      	ldr	r1, [pc, #176]	; (8002a2c <HAL_RCC_OscConfig+0xc44>)
 800297c:	4313      	orrs	r3, r2
 800297e:	62cb      	str	r3, [r1, #44]	; 0x2c
 8002980:	4b2a      	ldr	r3, [pc, #168]	; (8002a2c <HAL_RCC_OscConfig+0xc44>)
 8002982:	685b      	ldr	r3, [r3, #4]
 8002984:	f423 1276 	bic.w	r2, r3, #4030464	; 0x3d8000
 8002988:	1d3b      	adds	r3, r7, #4
 800298a:	681b      	ldr	r3, [r3, #0]
 800298c:	6a19      	ldr	r1, [r3, #32]
 800298e:	1d3b      	adds	r3, r7, #4
 8002990:	681b      	ldr	r3, [r3, #0]
 8002992:	69db      	ldr	r3, [r3, #28]
 8002994:	430b      	orrs	r3, r1
 8002996:	4925      	ldr	r1, [pc, #148]	; (8002a2c <HAL_RCC_OscConfig+0xc44>)
 8002998:	4313      	orrs	r3, r2
 800299a:	604b      	str	r3, [r1, #4]
 800299c:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 80029a0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80029a4:	601a      	str	r2, [r3, #0]
 80029a6:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 80029aa:	681b      	ldr	r3, [r3, #0]
 80029ac:	fa93 f2a3 	rbit	r2, r3
 80029b0:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80029b4:	601a      	str	r2, [r3, #0]
 80029b6:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	fab3 f383 	clz	r3, r3
 80029c0:	b2db      	uxtb	r3, r3
 80029c2:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 80029c6:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 80029ca:	009b      	lsls	r3, r3, #2
 80029cc:	461a      	mov	r2, r3
 80029ce:	2301      	movs	r3, #1
 80029d0:	6013      	str	r3, [r2, #0]
 80029d2:	f7fe ff57 	bl	8001884 <HAL_GetTick>
 80029d6:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 80029da:	e009      	b.n	80029f0 <HAL_RCC_OscConfig+0xc08>
 80029dc:	f7fe ff52 	bl	8001884 <HAL_GetTick>
 80029e0:	4602      	mov	r2, r0
 80029e2:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 80029e6:	1ad3      	subs	r3, r2, r3
 80029e8:	2b02      	cmp	r3, #2
 80029ea:	d901      	bls.n	80029f0 <HAL_RCC_OscConfig+0xc08>
 80029ec:	2303      	movs	r3, #3
 80029ee:	e109      	b.n	8002c04 <HAL_RCC_OscConfig+0xe1c>
 80029f0:	f107 0354 	add.w	r3, r7, #84	; 0x54
 80029f4:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 80029f8:	601a      	str	r2, [r3, #0]
 80029fa:	f107 0354 	add.w	r3, r7, #84	; 0x54
 80029fe:	681b      	ldr	r3, [r3, #0]
 8002a00:	fa93 f2a3 	rbit	r2, r3
 8002a04:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8002a08:	601a      	str	r2, [r3, #0]
 8002a0a:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8002a0e:	681b      	ldr	r3, [r3, #0]
 8002a10:	fab3 f383 	clz	r3, r3
 8002a14:	b2db      	uxtb	r3, r3
 8002a16:	095b      	lsrs	r3, r3, #5
 8002a18:	b2db      	uxtb	r3, r3
 8002a1a:	f043 0301 	orr.w	r3, r3, #1
 8002a1e:	b2db      	uxtb	r3, r3
 8002a20:	2b01      	cmp	r3, #1
 8002a22:	d105      	bne.n	8002a30 <HAL_RCC_OscConfig+0xc48>
 8002a24:	4b01      	ldr	r3, [pc, #4]	; (8002a2c <HAL_RCC_OscConfig+0xc44>)
 8002a26:	681b      	ldr	r3, [r3, #0]
 8002a28:	e01e      	b.n	8002a68 <HAL_RCC_OscConfig+0xc80>
 8002a2a:	bf00      	nop
 8002a2c:	40021000 	.word	0x40021000
 8002a30:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8002a34:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8002a38:	601a      	str	r2, [r3, #0]
 8002a3a:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8002a3e:	681b      	ldr	r3, [r3, #0]
 8002a40:	fa93 f2a3 	rbit	r2, r3
 8002a44:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8002a48:	601a      	str	r2, [r3, #0]
 8002a4a:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8002a4e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8002a52:	601a      	str	r2, [r3, #0]
 8002a54:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8002a58:	681b      	ldr	r3, [r3, #0]
 8002a5a:	fa93 f2a3 	rbit	r2, r3
 8002a5e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8002a62:	601a      	str	r2, [r3, #0]
 8002a64:	4b6a      	ldr	r3, [pc, #424]	; (8002c10 <HAL_RCC_OscConfig+0xe28>)
 8002a66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a68:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8002a6c:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8002a70:	6011      	str	r1, [r2, #0]
 8002a72:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8002a76:	6812      	ldr	r2, [r2, #0]
 8002a78:	fa92 f1a2 	rbit	r1, r2
 8002a7c:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8002a80:	6011      	str	r1, [r2, #0]
 8002a82:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8002a86:	6812      	ldr	r2, [r2, #0]
 8002a88:	fab2 f282 	clz	r2, r2
 8002a8c:	b2d2      	uxtb	r2, r2
 8002a8e:	f042 0220 	orr.w	r2, r2, #32
 8002a92:	b2d2      	uxtb	r2, r2
 8002a94:	f002 021f 	and.w	r2, r2, #31
 8002a98:	2101      	movs	r1, #1
 8002a9a:	fa01 f202 	lsl.w	r2, r1, r2
 8002a9e:	4013      	ands	r3, r2
 8002aa0:	2b00      	cmp	r3, #0
 8002aa2:	d09b      	beq.n	80029dc <HAL_RCC_OscConfig+0xbf4>
 8002aa4:	e0ad      	b.n	8002c02 <HAL_RCC_OscConfig+0xe1a>
 8002aa6:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8002aaa:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002aae:	601a      	str	r2, [r3, #0]
 8002ab0:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8002ab4:	681b      	ldr	r3, [r3, #0]
 8002ab6:	fa93 f2a3 	rbit	r2, r3
 8002aba:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8002abe:	601a      	str	r2, [r3, #0]
 8002ac0:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8002ac4:	681b      	ldr	r3, [r3, #0]
 8002ac6:	fab3 f383 	clz	r3, r3
 8002aca:	b2db      	uxtb	r3, r3
 8002acc:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8002ad0:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8002ad4:	009b      	lsls	r3, r3, #2
 8002ad6:	461a      	mov	r2, r3
 8002ad8:	2300      	movs	r3, #0
 8002ada:	6013      	str	r3, [r2, #0]
 8002adc:	f7fe fed2 	bl	8001884 <HAL_GetTick>
 8002ae0:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
 8002ae4:	e009      	b.n	8002afa <HAL_RCC_OscConfig+0xd12>
 8002ae6:	f7fe fecd 	bl	8001884 <HAL_GetTick>
 8002aea:	4602      	mov	r2, r0
 8002aec:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8002af0:	1ad3      	subs	r3, r2, r3
 8002af2:	2b02      	cmp	r3, #2
 8002af4:	d901      	bls.n	8002afa <HAL_RCC_OscConfig+0xd12>
 8002af6:	2303      	movs	r3, #3
 8002af8:	e084      	b.n	8002c04 <HAL_RCC_OscConfig+0xe1c>
 8002afa:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8002afe:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8002b02:	601a      	str	r2, [r3, #0]
 8002b04:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8002b08:	681b      	ldr	r3, [r3, #0]
 8002b0a:	fa93 f2a3 	rbit	r2, r3
 8002b0e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8002b12:	601a      	str	r2, [r3, #0]
 8002b14:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8002b18:	681b      	ldr	r3, [r3, #0]
 8002b1a:	fab3 f383 	clz	r3, r3
 8002b1e:	b2db      	uxtb	r3, r3
 8002b20:	095b      	lsrs	r3, r3, #5
 8002b22:	b2db      	uxtb	r3, r3
 8002b24:	f043 0301 	orr.w	r3, r3, #1
 8002b28:	b2db      	uxtb	r3, r3
 8002b2a:	2b01      	cmp	r3, #1
 8002b2c:	d102      	bne.n	8002b34 <HAL_RCC_OscConfig+0xd4c>
 8002b2e:	4b38      	ldr	r3, [pc, #224]	; (8002c10 <HAL_RCC_OscConfig+0xe28>)
 8002b30:	681b      	ldr	r3, [r3, #0]
 8002b32:	e01b      	b.n	8002b6c <HAL_RCC_OscConfig+0xd84>
 8002b34:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002b38:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8002b3c:	601a      	str	r2, [r3, #0]
 8002b3e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002b42:	681b      	ldr	r3, [r3, #0]
 8002b44:	fa93 f2a3 	rbit	r2, r3
 8002b48:	f107 0320 	add.w	r3, r7, #32
 8002b4c:	601a      	str	r2, [r3, #0]
 8002b4e:	f107 031c 	add.w	r3, r7, #28
 8002b52:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8002b56:	601a      	str	r2, [r3, #0]
 8002b58:	f107 031c 	add.w	r3, r7, #28
 8002b5c:	681b      	ldr	r3, [r3, #0]
 8002b5e:	fa93 f2a3 	rbit	r2, r3
 8002b62:	f107 0318 	add.w	r3, r7, #24
 8002b66:	601a      	str	r2, [r3, #0]
 8002b68:	4b29      	ldr	r3, [pc, #164]	; (8002c10 <HAL_RCC_OscConfig+0xe28>)
 8002b6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b6c:	f107 0214 	add.w	r2, r7, #20
 8002b70:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8002b74:	6011      	str	r1, [r2, #0]
 8002b76:	f107 0214 	add.w	r2, r7, #20
 8002b7a:	6812      	ldr	r2, [r2, #0]
 8002b7c:	fa92 f1a2 	rbit	r1, r2
 8002b80:	f107 0210 	add.w	r2, r7, #16
 8002b84:	6011      	str	r1, [r2, #0]
 8002b86:	f107 0210 	add.w	r2, r7, #16
 8002b8a:	6812      	ldr	r2, [r2, #0]
 8002b8c:	fab2 f282 	clz	r2, r2
 8002b90:	b2d2      	uxtb	r2, r2
 8002b92:	f042 0220 	orr.w	r2, r2, #32
 8002b96:	b2d2      	uxtb	r2, r2
 8002b98:	f002 021f 	and.w	r2, r2, #31
 8002b9c:	2101      	movs	r1, #1
 8002b9e:	fa01 f202 	lsl.w	r2, r1, r2
 8002ba2:	4013      	ands	r3, r2
 8002ba4:	2b00      	cmp	r3, #0
 8002ba6:	d19e      	bne.n	8002ae6 <HAL_RCC_OscConfig+0xcfe>
 8002ba8:	e02b      	b.n	8002c02 <HAL_RCC_OscConfig+0xe1a>
 8002baa:	1d3b      	adds	r3, r7, #4
 8002bac:	681b      	ldr	r3, [r3, #0]
 8002bae:	699b      	ldr	r3, [r3, #24]
 8002bb0:	2b01      	cmp	r3, #1
 8002bb2:	d101      	bne.n	8002bb8 <HAL_RCC_OscConfig+0xdd0>
 8002bb4:	2301      	movs	r3, #1
 8002bb6:	e025      	b.n	8002c04 <HAL_RCC_OscConfig+0xe1c>
 8002bb8:	4b15      	ldr	r3, [pc, #84]	; (8002c10 <HAL_RCC_OscConfig+0xe28>)
 8002bba:	685b      	ldr	r3, [r3, #4]
 8002bbc:	f8c7 31fc 	str.w	r3, [r7, #508]	; 0x1fc
 8002bc0:	4b13      	ldr	r3, [pc, #76]	; (8002c10 <HAL_RCC_OscConfig+0xe28>)
 8002bc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002bc4:	f8c7 31f8 	str.w	r3, [r7, #504]	; 0x1f8
 8002bc8:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8002bcc:	f403 32c0 	and.w	r2, r3, #98304	; 0x18000
 8002bd0:	1d3b      	adds	r3, r7, #4
 8002bd2:	681b      	ldr	r3, [r3, #0]
 8002bd4:	69db      	ldr	r3, [r3, #28]
 8002bd6:	429a      	cmp	r2, r3
 8002bd8:	d111      	bne.n	8002bfe <HAL_RCC_OscConfig+0xe16>
 8002bda:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8002bde:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8002be2:	1d3b      	adds	r3, r7, #4
 8002be4:	681b      	ldr	r3, [r3, #0]
 8002be6:	6a1b      	ldr	r3, [r3, #32]
 8002be8:	429a      	cmp	r2, r3
 8002bea:	d108      	bne.n	8002bfe <HAL_RCC_OscConfig+0xe16>
 8002bec:	f8d7 31f8 	ldr.w	r3, [r7, #504]	; 0x1f8
 8002bf0:	f003 020f 	and.w	r2, r3, #15
 8002bf4:	1d3b      	adds	r3, r7, #4
 8002bf6:	681b      	ldr	r3, [r3, #0]
 8002bf8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002bfa:	429a      	cmp	r2, r3
 8002bfc:	d001      	beq.n	8002c02 <HAL_RCC_OscConfig+0xe1a>
 8002bfe:	2301      	movs	r3, #1
 8002c00:	e000      	b.n	8002c04 <HAL_RCC_OscConfig+0xe1c>
 8002c02:	2300      	movs	r3, #0
 8002c04:	4618      	mov	r0, r3
 8002c06:	f507 7702 	add.w	r7, r7, #520	; 0x208
 8002c0a:	46bd      	mov	sp, r7
 8002c0c:	bd80      	pop	{r7, pc}
 8002c0e:	bf00      	nop
 8002c10:	40021000 	.word	0x40021000

08002c14 <HAL_RCC_ClockConfig>:
 8002c14:	b580      	push	{r7, lr}
 8002c16:	b09e      	sub	sp, #120	; 0x78
 8002c18:	af00      	add	r7, sp, #0
 8002c1a:	6078      	str	r0, [r7, #4]
 8002c1c:	6039      	str	r1, [r7, #0]
 8002c1e:	2300      	movs	r3, #0
 8002c20:	677b      	str	r3, [r7, #116]	; 0x74
 8002c22:	687b      	ldr	r3, [r7, #4]
 8002c24:	2b00      	cmp	r3, #0
 8002c26:	d101      	bne.n	8002c2c <HAL_RCC_ClockConfig+0x18>
 8002c28:	2301      	movs	r3, #1
 8002c2a:	e162      	b.n	8002ef2 <HAL_RCC_ClockConfig+0x2de>
 8002c2c:	4b90      	ldr	r3, [pc, #576]	; (8002e70 <HAL_RCC_ClockConfig+0x25c>)
 8002c2e:	681b      	ldr	r3, [r3, #0]
 8002c30:	f003 0307 	and.w	r3, r3, #7
 8002c34:	683a      	ldr	r2, [r7, #0]
 8002c36:	429a      	cmp	r2, r3
 8002c38:	d910      	bls.n	8002c5c <HAL_RCC_ClockConfig+0x48>
 8002c3a:	4b8d      	ldr	r3, [pc, #564]	; (8002e70 <HAL_RCC_ClockConfig+0x25c>)
 8002c3c:	681b      	ldr	r3, [r3, #0]
 8002c3e:	f023 0207 	bic.w	r2, r3, #7
 8002c42:	498b      	ldr	r1, [pc, #556]	; (8002e70 <HAL_RCC_ClockConfig+0x25c>)
 8002c44:	683b      	ldr	r3, [r7, #0]
 8002c46:	4313      	orrs	r3, r2
 8002c48:	600b      	str	r3, [r1, #0]
 8002c4a:	4b89      	ldr	r3, [pc, #548]	; (8002e70 <HAL_RCC_ClockConfig+0x25c>)
 8002c4c:	681b      	ldr	r3, [r3, #0]
 8002c4e:	f003 0307 	and.w	r3, r3, #7
 8002c52:	683a      	ldr	r2, [r7, #0]
 8002c54:	429a      	cmp	r2, r3
 8002c56:	d001      	beq.n	8002c5c <HAL_RCC_ClockConfig+0x48>
 8002c58:	2301      	movs	r3, #1
 8002c5a:	e14a      	b.n	8002ef2 <HAL_RCC_ClockConfig+0x2de>
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	681b      	ldr	r3, [r3, #0]
 8002c60:	f003 0302 	and.w	r3, r3, #2
 8002c64:	2b00      	cmp	r3, #0
 8002c66:	d008      	beq.n	8002c7a <HAL_RCC_ClockConfig+0x66>
 8002c68:	4b82      	ldr	r3, [pc, #520]	; (8002e74 <HAL_RCC_ClockConfig+0x260>)
 8002c6a:	685b      	ldr	r3, [r3, #4]
 8002c6c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002c70:	687b      	ldr	r3, [r7, #4]
 8002c72:	689b      	ldr	r3, [r3, #8]
 8002c74:	497f      	ldr	r1, [pc, #508]	; (8002e74 <HAL_RCC_ClockConfig+0x260>)
 8002c76:	4313      	orrs	r3, r2
 8002c78:	604b      	str	r3, [r1, #4]
 8002c7a:	687b      	ldr	r3, [r7, #4]
 8002c7c:	681b      	ldr	r3, [r3, #0]
 8002c7e:	f003 0301 	and.w	r3, r3, #1
 8002c82:	2b00      	cmp	r3, #0
 8002c84:	f000 80dc 	beq.w	8002e40 <HAL_RCC_ClockConfig+0x22c>
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	685b      	ldr	r3, [r3, #4]
 8002c8c:	2b01      	cmp	r3, #1
 8002c8e:	d13c      	bne.n	8002d0a <HAL_RCC_ClockConfig+0xf6>
 8002c90:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8002c94:	673b      	str	r3, [r7, #112]	; 0x70
 8002c96:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8002c98:	fa93 f3a3 	rbit	r3, r3
 8002c9c:	66fb      	str	r3, [r7, #108]	; 0x6c
 8002c9e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002ca0:	fab3 f383 	clz	r3, r3
 8002ca4:	b2db      	uxtb	r3, r3
 8002ca6:	095b      	lsrs	r3, r3, #5
 8002ca8:	b2db      	uxtb	r3, r3
 8002caa:	f043 0301 	orr.w	r3, r3, #1
 8002cae:	b2db      	uxtb	r3, r3
 8002cb0:	2b01      	cmp	r3, #1
 8002cb2:	d102      	bne.n	8002cba <HAL_RCC_ClockConfig+0xa6>
 8002cb4:	4b6f      	ldr	r3, [pc, #444]	; (8002e74 <HAL_RCC_ClockConfig+0x260>)
 8002cb6:	681b      	ldr	r3, [r3, #0]
 8002cb8:	e00f      	b.n	8002cda <HAL_RCC_ClockConfig+0xc6>
 8002cba:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8002cbe:	66bb      	str	r3, [r7, #104]	; 0x68
 8002cc0:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8002cc2:	fa93 f3a3 	rbit	r3, r3
 8002cc6:	667b      	str	r3, [r7, #100]	; 0x64
 8002cc8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8002ccc:	663b      	str	r3, [r7, #96]	; 0x60
 8002cce:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8002cd0:	fa93 f3a3 	rbit	r3, r3
 8002cd4:	65fb      	str	r3, [r7, #92]	; 0x5c
 8002cd6:	4b67      	ldr	r3, [pc, #412]	; (8002e74 <HAL_RCC_ClockConfig+0x260>)
 8002cd8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002cda:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8002cde:	65ba      	str	r2, [r7, #88]	; 0x58
 8002ce0:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8002ce2:	fa92 f2a2 	rbit	r2, r2
 8002ce6:	657a      	str	r2, [r7, #84]	; 0x54
 8002ce8:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8002cea:	fab2 f282 	clz	r2, r2
 8002cee:	b2d2      	uxtb	r2, r2
 8002cf0:	f042 0220 	orr.w	r2, r2, #32
 8002cf4:	b2d2      	uxtb	r2, r2
 8002cf6:	f002 021f 	and.w	r2, r2, #31
 8002cfa:	2101      	movs	r1, #1
 8002cfc:	fa01 f202 	lsl.w	r2, r1, r2
 8002d00:	4013      	ands	r3, r2
 8002d02:	2b00      	cmp	r3, #0
 8002d04:	d17b      	bne.n	8002dfe <HAL_RCC_ClockConfig+0x1ea>
 8002d06:	2301      	movs	r3, #1
 8002d08:	e0f3      	b.n	8002ef2 <HAL_RCC_ClockConfig+0x2de>
 8002d0a:	687b      	ldr	r3, [r7, #4]
 8002d0c:	685b      	ldr	r3, [r3, #4]
 8002d0e:	2b02      	cmp	r3, #2
 8002d10:	d13c      	bne.n	8002d8c <HAL_RCC_ClockConfig+0x178>
 8002d12:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8002d16:	653b      	str	r3, [r7, #80]	; 0x50
 8002d18:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8002d1a:	fa93 f3a3 	rbit	r3, r3
 8002d1e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8002d20:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8002d22:	fab3 f383 	clz	r3, r3
 8002d26:	b2db      	uxtb	r3, r3
 8002d28:	095b      	lsrs	r3, r3, #5
 8002d2a:	b2db      	uxtb	r3, r3
 8002d2c:	f043 0301 	orr.w	r3, r3, #1
 8002d30:	b2db      	uxtb	r3, r3
 8002d32:	2b01      	cmp	r3, #1
 8002d34:	d102      	bne.n	8002d3c <HAL_RCC_ClockConfig+0x128>
 8002d36:	4b4f      	ldr	r3, [pc, #316]	; (8002e74 <HAL_RCC_ClockConfig+0x260>)
 8002d38:	681b      	ldr	r3, [r3, #0]
 8002d3a:	e00f      	b.n	8002d5c <HAL_RCC_ClockConfig+0x148>
 8002d3c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8002d40:	64bb      	str	r3, [r7, #72]	; 0x48
 8002d42:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8002d44:	fa93 f3a3 	rbit	r3, r3
 8002d48:	647b      	str	r3, [r7, #68]	; 0x44
 8002d4a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8002d4e:	643b      	str	r3, [r7, #64]	; 0x40
 8002d50:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002d52:	fa93 f3a3 	rbit	r3, r3
 8002d56:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002d58:	4b46      	ldr	r3, [pc, #280]	; (8002e74 <HAL_RCC_ClockConfig+0x260>)
 8002d5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d5c:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8002d60:	63ba      	str	r2, [r7, #56]	; 0x38
 8002d62:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8002d64:	fa92 f2a2 	rbit	r2, r2
 8002d68:	637a      	str	r2, [r7, #52]	; 0x34
 8002d6a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002d6c:	fab2 f282 	clz	r2, r2
 8002d70:	b2d2      	uxtb	r2, r2
 8002d72:	f042 0220 	orr.w	r2, r2, #32
 8002d76:	b2d2      	uxtb	r2, r2
 8002d78:	f002 021f 	and.w	r2, r2, #31
 8002d7c:	2101      	movs	r1, #1
 8002d7e:	fa01 f202 	lsl.w	r2, r1, r2
 8002d82:	4013      	ands	r3, r2
 8002d84:	2b00      	cmp	r3, #0
 8002d86:	d13a      	bne.n	8002dfe <HAL_RCC_ClockConfig+0x1ea>
 8002d88:	2301      	movs	r3, #1
 8002d8a:	e0b2      	b.n	8002ef2 <HAL_RCC_ClockConfig+0x2de>
 8002d8c:	2302      	movs	r3, #2
 8002d8e:	633b      	str	r3, [r7, #48]	; 0x30
 8002d90:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002d92:	fa93 f3a3 	rbit	r3, r3
 8002d96:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002d98:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002d9a:	fab3 f383 	clz	r3, r3
 8002d9e:	b2db      	uxtb	r3, r3
 8002da0:	095b      	lsrs	r3, r3, #5
 8002da2:	b2db      	uxtb	r3, r3
 8002da4:	f043 0301 	orr.w	r3, r3, #1
 8002da8:	b2db      	uxtb	r3, r3
 8002daa:	2b01      	cmp	r3, #1
 8002dac:	d102      	bne.n	8002db4 <HAL_RCC_ClockConfig+0x1a0>
 8002dae:	4b31      	ldr	r3, [pc, #196]	; (8002e74 <HAL_RCC_ClockConfig+0x260>)
 8002db0:	681b      	ldr	r3, [r3, #0]
 8002db2:	e00d      	b.n	8002dd0 <HAL_RCC_ClockConfig+0x1bc>
 8002db4:	2302      	movs	r3, #2
 8002db6:	62bb      	str	r3, [r7, #40]	; 0x28
 8002db8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002dba:	fa93 f3a3 	rbit	r3, r3
 8002dbe:	627b      	str	r3, [r7, #36]	; 0x24
 8002dc0:	2302      	movs	r3, #2
 8002dc2:	623b      	str	r3, [r7, #32]
 8002dc4:	6a3b      	ldr	r3, [r7, #32]
 8002dc6:	fa93 f3a3 	rbit	r3, r3
 8002dca:	61fb      	str	r3, [r7, #28]
 8002dcc:	4b29      	ldr	r3, [pc, #164]	; (8002e74 <HAL_RCC_ClockConfig+0x260>)
 8002dce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002dd0:	2202      	movs	r2, #2
 8002dd2:	61ba      	str	r2, [r7, #24]
 8002dd4:	69ba      	ldr	r2, [r7, #24]
 8002dd6:	fa92 f2a2 	rbit	r2, r2
 8002dda:	617a      	str	r2, [r7, #20]
 8002ddc:	697a      	ldr	r2, [r7, #20]
 8002dde:	fab2 f282 	clz	r2, r2
 8002de2:	b2d2      	uxtb	r2, r2
 8002de4:	f042 0220 	orr.w	r2, r2, #32
 8002de8:	b2d2      	uxtb	r2, r2
 8002dea:	f002 021f 	and.w	r2, r2, #31
 8002dee:	2101      	movs	r1, #1
 8002df0:	fa01 f202 	lsl.w	r2, r1, r2
 8002df4:	4013      	ands	r3, r2
 8002df6:	2b00      	cmp	r3, #0
 8002df8:	d101      	bne.n	8002dfe <HAL_RCC_ClockConfig+0x1ea>
 8002dfa:	2301      	movs	r3, #1
 8002dfc:	e079      	b.n	8002ef2 <HAL_RCC_ClockConfig+0x2de>
 8002dfe:	4b1d      	ldr	r3, [pc, #116]	; (8002e74 <HAL_RCC_ClockConfig+0x260>)
 8002e00:	685b      	ldr	r3, [r3, #4]
 8002e02:	f023 0203 	bic.w	r2, r3, #3
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	685b      	ldr	r3, [r3, #4]
 8002e0a:	491a      	ldr	r1, [pc, #104]	; (8002e74 <HAL_RCC_ClockConfig+0x260>)
 8002e0c:	4313      	orrs	r3, r2
 8002e0e:	604b      	str	r3, [r1, #4]
 8002e10:	f7fe fd38 	bl	8001884 <HAL_GetTick>
 8002e14:	6778      	str	r0, [r7, #116]	; 0x74
 8002e16:	e00a      	b.n	8002e2e <HAL_RCC_ClockConfig+0x21a>
 8002e18:	f7fe fd34 	bl	8001884 <HAL_GetTick>
 8002e1c:	4602      	mov	r2, r0
 8002e1e:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8002e20:	1ad3      	subs	r3, r2, r3
 8002e22:	f241 3288 	movw	r2, #5000	; 0x1388
 8002e26:	4293      	cmp	r3, r2
 8002e28:	d901      	bls.n	8002e2e <HAL_RCC_ClockConfig+0x21a>
 8002e2a:	2303      	movs	r3, #3
 8002e2c:	e061      	b.n	8002ef2 <HAL_RCC_ClockConfig+0x2de>
 8002e2e:	4b11      	ldr	r3, [pc, #68]	; (8002e74 <HAL_RCC_ClockConfig+0x260>)
 8002e30:	685b      	ldr	r3, [r3, #4]
 8002e32:	f003 020c 	and.w	r2, r3, #12
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	685b      	ldr	r3, [r3, #4]
 8002e3a:	009b      	lsls	r3, r3, #2
 8002e3c:	429a      	cmp	r2, r3
 8002e3e:	d1eb      	bne.n	8002e18 <HAL_RCC_ClockConfig+0x204>
 8002e40:	4b0b      	ldr	r3, [pc, #44]	; (8002e70 <HAL_RCC_ClockConfig+0x25c>)
 8002e42:	681b      	ldr	r3, [r3, #0]
 8002e44:	f003 0307 	and.w	r3, r3, #7
 8002e48:	683a      	ldr	r2, [r7, #0]
 8002e4a:	429a      	cmp	r2, r3
 8002e4c:	d214      	bcs.n	8002e78 <HAL_RCC_ClockConfig+0x264>
 8002e4e:	4b08      	ldr	r3, [pc, #32]	; (8002e70 <HAL_RCC_ClockConfig+0x25c>)
 8002e50:	681b      	ldr	r3, [r3, #0]
 8002e52:	f023 0207 	bic.w	r2, r3, #7
 8002e56:	4906      	ldr	r1, [pc, #24]	; (8002e70 <HAL_RCC_ClockConfig+0x25c>)
 8002e58:	683b      	ldr	r3, [r7, #0]
 8002e5a:	4313      	orrs	r3, r2
 8002e5c:	600b      	str	r3, [r1, #0]
 8002e5e:	4b04      	ldr	r3, [pc, #16]	; (8002e70 <HAL_RCC_ClockConfig+0x25c>)
 8002e60:	681b      	ldr	r3, [r3, #0]
 8002e62:	f003 0307 	and.w	r3, r3, #7
 8002e66:	683a      	ldr	r2, [r7, #0]
 8002e68:	429a      	cmp	r2, r3
 8002e6a:	d005      	beq.n	8002e78 <HAL_RCC_ClockConfig+0x264>
 8002e6c:	2301      	movs	r3, #1
 8002e6e:	e040      	b.n	8002ef2 <HAL_RCC_ClockConfig+0x2de>
 8002e70:	40022000 	.word	0x40022000
 8002e74:	40021000 	.word	0x40021000
 8002e78:	687b      	ldr	r3, [r7, #4]
 8002e7a:	681b      	ldr	r3, [r3, #0]
 8002e7c:	f003 0304 	and.w	r3, r3, #4
 8002e80:	2b00      	cmp	r3, #0
 8002e82:	d008      	beq.n	8002e96 <HAL_RCC_ClockConfig+0x282>
 8002e84:	4b1d      	ldr	r3, [pc, #116]	; (8002efc <HAL_RCC_ClockConfig+0x2e8>)
 8002e86:	685b      	ldr	r3, [r3, #4]
 8002e88:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	68db      	ldr	r3, [r3, #12]
 8002e90:	491a      	ldr	r1, [pc, #104]	; (8002efc <HAL_RCC_ClockConfig+0x2e8>)
 8002e92:	4313      	orrs	r3, r2
 8002e94:	604b      	str	r3, [r1, #4]
 8002e96:	687b      	ldr	r3, [r7, #4]
 8002e98:	681b      	ldr	r3, [r3, #0]
 8002e9a:	f003 0308 	and.w	r3, r3, #8
 8002e9e:	2b00      	cmp	r3, #0
 8002ea0:	d009      	beq.n	8002eb6 <HAL_RCC_ClockConfig+0x2a2>
 8002ea2:	4b16      	ldr	r3, [pc, #88]	; (8002efc <HAL_RCC_ClockConfig+0x2e8>)
 8002ea4:	685b      	ldr	r3, [r3, #4]
 8002ea6:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	691b      	ldr	r3, [r3, #16]
 8002eae:	00db      	lsls	r3, r3, #3
 8002eb0:	4912      	ldr	r1, [pc, #72]	; (8002efc <HAL_RCC_ClockConfig+0x2e8>)
 8002eb2:	4313      	orrs	r3, r2
 8002eb4:	604b      	str	r3, [r1, #4]
 8002eb6:	f000 f829 	bl	8002f0c <HAL_RCC_GetSysClockFreq>
 8002eba:	4601      	mov	r1, r0
 8002ebc:	4b0f      	ldr	r3, [pc, #60]	; (8002efc <HAL_RCC_ClockConfig+0x2e8>)
 8002ebe:	685b      	ldr	r3, [r3, #4]
 8002ec0:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8002ec4:	22f0      	movs	r2, #240	; 0xf0
 8002ec6:	613a      	str	r2, [r7, #16]
 8002ec8:	693a      	ldr	r2, [r7, #16]
 8002eca:	fa92 f2a2 	rbit	r2, r2
 8002ece:	60fa      	str	r2, [r7, #12]
 8002ed0:	68fa      	ldr	r2, [r7, #12]
 8002ed2:	fab2 f282 	clz	r2, r2
 8002ed6:	b2d2      	uxtb	r2, r2
 8002ed8:	40d3      	lsrs	r3, r2
 8002eda:	4a09      	ldr	r2, [pc, #36]	; (8002f00 <HAL_RCC_ClockConfig+0x2ec>)
 8002edc:	5cd3      	ldrb	r3, [r2, r3]
 8002ede:	fa21 f303 	lsr.w	r3, r1, r3
 8002ee2:	4a08      	ldr	r2, [pc, #32]	; (8002f04 <HAL_RCC_ClockConfig+0x2f0>)
 8002ee4:	6013      	str	r3, [r2, #0]
 8002ee6:	4b08      	ldr	r3, [pc, #32]	; (8002f08 <HAL_RCC_ClockConfig+0x2f4>)
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	4618      	mov	r0, r3
 8002eec:	f7fe fbb6 	bl	800165c <HAL_InitTick>
 8002ef0:	2300      	movs	r3, #0
 8002ef2:	4618      	mov	r0, r3
 8002ef4:	3778      	adds	r7, #120	; 0x78
 8002ef6:	46bd      	mov	sp, r7
 8002ef8:	bd80      	pop	{r7, pc}
 8002efa:	bf00      	nop
 8002efc:	40021000 	.word	0x40021000
 8002f00:	08008f44 	.word	0x08008f44
 8002f04:	20000018 	.word	0x20000018
 8002f08:	2000001c 	.word	0x2000001c

08002f0c <HAL_RCC_GetSysClockFreq>:
 8002f0c:	b480      	push	{r7}
 8002f0e:	b08b      	sub	sp, #44	; 0x2c
 8002f10:	af00      	add	r7, sp, #0
 8002f12:	2300      	movs	r3, #0
 8002f14:	61fb      	str	r3, [r7, #28]
 8002f16:	2300      	movs	r3, #0
 8002f18:	61bb      	str	r3, [r7, #24]
 8002f1a:	2300      	movs	r3, #0
 8002f1c:	627b      	str	r3, [r7, #36]	; 0x24
 8002f1e:	2300      	movs	r3, #0
 8002f20:	617b      	str	r3, [r7, #20]
 8002f22:	2300      	movs	r3, #0
 8002f24:	623b      	str	r3, [r7, #32]
 8002f26:	4b2a      	ldr	r3, [pc, #168]	; (8002fd0 <HAL_RCC_GetSysClockFreq+0xc4>)
 8002f28:	685b      	ldr	r3, [r3, #4]
 8002f2a:	61fb      	str	r3, [r7, #28]
 8002f2c:	69fb      	ldr	r3, [r7, #28]
 8002f2e:	f003 030c 	and.w	r3, r3, #12
 8002f32:	2b04      	cmp	r3, #4
 8002f34:	d002      	beq.n	8002f3c <HAL_RCC_GetSysClockFreq+0x30>
 8002f36:	2b08      	cmp	r3, #8
 8002f38:	d003      	beq.n	8002f42 <HAL_RCC_GetSysClockFreq+0x36>
 8002f3a:	e03f      	b.n	8002fbc <HAL_RCC_GetSysClockFreq+0xb0>
 8002f3c:	4b25      	ldr	r3, [pc, #148]	; (8002fd4 <HAL_RCC_GetSysClockFreq+0xc8>)
 8002f3e:	623b      	str	r3, [r7, #32]
 8002f40:	e03f      	b.n	8002fc2 <HAL_RCC_GetSysClockFreq+0xb6>
 8002f42:	69fb      	ldr	r3, [r7, #28]
 8002f44:	f403 1370 	and.w	r3, r3, #3932160	; 0x3c0000
 8002f48:	f44f 1270 	mov.w	r2, #3932160	; 0x3c0000
 8002f4c:	60ba      	str	r2, [r7, #8]
 8002f4e:	68ba      	ldr	r2, [r7, #8]
 8002f50:	fa92 f2a2 	rbit	r2, r2
 8002f54:	607a      	str	r2, [r7, #4]
 8002f56:	687a      	ldr	r2, [r7, #4]
 8002f58:	fab2 f282 	clz	r2, r2
 8002f5c:	b2d2      	uxtb	r2, r2
 8002f5e:	40d3      	lsrs	r3, r2
 8002f60:	4a1d      	ldr	r2, [pc, #116]	; (8002fd8 <HAL_RCC_GetSysClockFreq+0xcc>)
 8002f62:	5cd3      	ldrb	r3, [r2, r3]
 8002f64:	617b      	str	r3, [r7, #20]
 8002f66:	4b1a      	ldr	r3, [pc, #104]	; (8002fd0 <HAL_RCC_GetSysClockFreq+0xc4>)
 8002f68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002f6a:	f003 030f 	and.w	r3, r3, #15
 8002f6e:	220f      	movs	r2, #15
 8002f70:	613a      	str	r2, [r7, #16]
 8002f72:	693a      	ldr	r2, [r7, #16]
 8002f74:	fa92 f2a2 	rbit	r2, r2
 8002f78:	60fa      	str	r2, [r7, #12]
 8002f7a:	68fa      	ldr	r2, [r7, #12]
 8002f7c:	fab2 f282 	clz	r2, r2
 8002f80:	b2d2      	uxtb	r2, r2
 8002f82:	40d3      	lsrs	r3, r2
 8002f84:	4a15      	ldr	r2, [pc, #84]	; (8002fdc <HAL_RCC_GetSysClockFreq+0xd0>)
 8002f86:	5cd3      	ldrb	r3, [r2, r3]
 8002f88:	61bb      	str	r3, [r7, #24]
 8002f8a:	69fb      	ldr	r3, [r7, #28]
 8002f8c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002f90:	2b00      	cmp	r3, #0
 8002f92:	d008      	beq.n	8002fa6 <HAL_RCC_GetSysClockFreq+0x9a>
 8002f94:	4a0f      	ldr	r2, [pc, #60]	; (8002fd4 <HAL_RCC_GetSysClockFreq+0xc8>)
 8002f96:	69bb      	ldr	r3, [r7, #24]
 8002f98:	fbb2 f2f3 	udiv	r2, r2, r3
 8002f9c:	697b      	ldr	r3, [r7, #20]
 8002f9e:	fb02 f303 	mul.w	r3, r2, r3
 8002fa2:	627b      	str	r3, [r7, #36]	; 0x24
 8002fa4:	e007      	b.n	8002fb6 <HAL_RCC_GetSysClockFreq+0xaa>
 8002fa6:	4a0b      	ldr	r2, [pc, #44]	; (8002fd4 <HAL_RCC_GetSysClockFreq+0xc8>)
 8002fa8:	69bb      	ldr	r3, [r7, #24]
 8002faa:	fbb2 f2f3 	udiv	r2, r2, r3
 8002fae:	697b      	ldr	r3, [r7, #20]
 8002fb0:	fb02 f303 	mul.w	r3, r2, r3
 8002fb4:	627b      	str	r3, [r7, #36]	; 0x24
 8002fb6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002fb8:	623b      	str	r3, [r7, #32]
 8002fba:	e002      	b.n	8002fc2 <HAL_RCC_GetSysClockFreq+0xb6>
 8002fbc:	4b05      	ldr	r3, [pc, #20]	; (8002fd4 <HAL_RCC_GetSysClockFreq+0xc8>)
 8002fbe:	623b      	str	r3, [r7, #32]
 8002fc0:	bf00      	nop
 8002fc2:	6a3b      	ldr	r3, [r7, #32]
 8002fc4:	4618      	mov	r0, r3
 8002fc6:	372c      	adds	r7, #44	; 0x2c
 8002fc8:	46bd      	mov	sp, r7
 8002fca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fce:	4770      	bx	lr
 8002fd0:	40021000 	.word	0x40021000
 8002fd4:	007a1200 	.word	0x007a1200
 8002fd8:	08008f5c 	.word	0x08008f5c
 8002fdc:	08008f6c 	.word	0x08008f6c

08002fe0 <HAL_RCC_GetHCLKFreq>:
 8002fe0:	b480      	push	{r7}
 8002fe2:	af00      	add	r7, sp, #0
 8002fe4:	4b03      	ldr	r3, [pc, #12]	; (8002ff4 <HAL_RCC_GetHCLKFreq+0x14>)
 8002fe6:	681b      	ldr	r3, [r3, #0]
 8002fe8:	4618      	mov	r0, r3
 8002fea:	46bd      	mov	sp, r7
 8002fec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ff0:	4770      	bx	lr
 8002ff2:	bf00      	nop
 8002ff4:	20000018 	.word	0x20000018

08002ff8 <HAL_RCC_GetPCLK1Freq>:
 8002ff8:	b580      	push	{r7, lr}
 8002ffa:	b082      	sub	sp, #8
 8002ffc:	af00      	add	r7, sp, #0
 8002ffe:	f7ff ffef 	bl	8002fe0 <HAL_RCC_GetHCLKFreq>
 8003002:	4601      	mov	r1, r0
 8003004:	4b0b      	ldr	r3, [pc, #44]	; (8003034 <HAL_RCC_GetPCLK1Freq+0x3c>)
 8003006:	685b      	ldr	r3, [r3, #4]
 8003008:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800300c:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8003010:	607a      	str	r2, [r7, #4]
 8003012:	687a      	ldr	r2, [r7, #4]
 8003014:	fa92 f2a2 	rbit	r2, r2
 8003018:	603a      	str	r2, [r7, #0]
 800301a:	683a      	ldr	r2, [r7, #0]
 800301c:	fab2 f282 	clz	r2, r2
 8003020:	b2d2      	uxtb	r2, r2
 8003022:	40d3      	lsrs	r3, r2
 8003024:	4a04      	ldr	r2, [pc, #16]	; (8003038 <HAL_RCC_GetPCLK1Freq+0x40>)
 8003026:	5cd3      	ldrb	r3, [r2, r3]
 8003028:	fa21 f303 	lsr.w	r3, r1, r3
 800302c:	4618      	mov	r0, r3
 800302e:	3708      	adds	r7, #8
 8003030:	46bd      	mov	sp, r7
 8003032:	bd80      	pop	{r7, pc}
 8003034:	40021000 	.word	0x40021000
 8003038:	08008f54 	.word	0x08008f54

0800303c <HAL_RCC_GetPCLK2Freq>:
 800303c:	b580      	push	{r7, lr}
 800303e:	b082      	sub	sp, #8
 8003040:	af00      	add	r7, sp, #0
 8003042:	f7ff ffcd 	bl	8002fe0 <HAL_RCC_GetHCLKFreq>
 8003046:	4601      	mov	r1, r0
 8003048:	4b0b      	ldr	r3, [pc, #44]	; (8003078 <HAL_RCC_GetPCLK2Freq+0x3c>)
 800304a:	685b      	ldr	r3, [r3, #4]
 800304c:	f403 5360 	and.w	r3, r3, #14336	; 0x3800
 8003050:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 8003054:	607a      	str	r2, [r7, #4]
 8003056:	687a      	ldr	r2, [r7, #4]
 8003058:	fa92 f2a2 	rbit	r2, r2
 800305c:	603a      	str	r2, [r7, #0]
 800305e:	683a      	ldr	r2, [r7, #0]
 8003060:	fab2 f282 	clz	r2, r2
 8003064:	b2d2      	uxtb	r2, r2
 8003066:	40d3      	lsrs	r3, r2
 8003068:	4a04      	ldr	r2, [pc, #16]	; (800307c <HAL_RCC_GetPCLK2Freq+0x40>)
 800306a:	5cd3      	ldrb	r3, [r2, r3]
 800306c:	fa21 f303 	lsr.w	r3, r1, r3
 8003070:	4618      	mov	r0, r3
 8003072:	3708      	adds	r7, #8
 8003074:	46bd      	mov	sp, r7
 8003076:	bd80      	pop	{r7, pc}
 8003078:	40021000 	.word	0x40021000
 800307c:	08008f54 	.word	0x08008f54

08003080 <HAL_RCC_GetClockConfig>:
 8003080:	b480      	push	{r7}
 8003082:	b083      	sub	sp, #12
 8003084:	af00      	add	r7, sp, #0
 8003086:	6078      	str	r0, [r7, #4]
 8003088:	6039      	str	r1, [r7, #0]
 800308a:	687b      	ldr	r3, [r7, #4]
 800308c:	220f      	movs	r2, #15
 800308e:	601a      	str	r2, [r3, #0]
 8003090:	4b12      	ldr	r3, [pc, #72]	; (80030dc <HAL_RCC_GetClockConfig+0x5c>)
 8003092:	685b      	ldr	r3, [r3, #4]
 8003094:	f003 0203 	and.w	r2, r3, #3
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	605a      	str	r2, [r3, #4]
 800309c:	4b0f      	ldr	r3, [pc, #60]	; (80030dc <HAL_RCC_GetClockConfig+0x5c>)
 800309e:	685b      	ldr	r3, [r3, #4]
 80030a0:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	609a      	str	r2, [r3, #8]
 80030a8:	4b0c      	ldr	r3, [pc, #48]	; (80030dc <HAL_RCC_GetClockConfig+0x5c>)
 80030aa:	685b      	ldr	r3, [r3, #4]
 80030ac:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 80030b0:	687b      	ldr	r3, [r7, #4]
 80030b2:	60da      	str	r2, [r3, #12]
 80030b4:	4b09      	ldr	r3, [pc, #36]	; (80030dc <HAL_RCC_GetClockConfig+0x5c>)
 80030b6:	685b      	ldr	r3, [r3, #4]
 80030b8:	08db      	lsrs	r3, r3, #3
 80030ba:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	611a      	str	r2, [r3, #16]
 80030c2:	4b07      	ldr	r3, [pc, #28]	; (80030e0 <HAL_RCC_GetClockConfig+0x60>)
 80030c4:	681b      	ldr	r3, [r3, #0]
 80030c6:	f003 0207 	and.w	r2, r3, #7
 80030ca:	683b      	ldr	r3, [r7, #0]
 80030cc:	601a      	str	r2, [r3, #0]
 80030ce:	bf00      	nop
 80030d0:	370c      	adds	r7, #12
 80030d2:	46bd      	mov	sp, r7
 80030d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030d8:	4770      	bx	lr
 80030da:	bf00      	nop
 80030dc:	40021000 	.word	0x40021000
 80030e0:	40022000 	.word	0x40022000

080030e4 <HAL_RCCEx_PeriphCLKConfig>:
 80030e4:	b580      	push	{r7, lr}
 80030e6:	b092      	sub	sp, #72	; 0x48
 80030e8:	af00      	add	r7, sp, #0
 80030ea:	6078      	str	r0, [r7, #4]
 80030ec:	2300      	movs	r3, #0
 80030ee:	643b      	str	r3, [r7, #64]	; 0x40
 80030f0:	2300      	movs	r3, #0
 80030f2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80030f4:	2300      	movs	r3, #0
 80030f6:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 80030fa:	687b      	ldr	r3, [r7, #4]
 80030fc:	681b      	ldr	r3, [r3, #0]
 80030fe:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003102:	2b00      	cmp	r3, #0
 8003104:	f000 80d4 	beq.w	80032b0 <HAL_RCCEx_PeriphCLKConfig+0x1cc>
 8003108:	4b4e      	ldr	r3, [pc, #312]	; (8003244 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800310a:	69db      	ldr	r3, [r3, #28]
 800310c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003110:	2b00      	cmp	r3, #0
 8003112:	d10e      	bne.n	8003132 <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8003114:	4b4b      	ldr	r3, [pc, #300]	; (8003244 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003116:	69db      	ldr	r3, [r3, #28]
 8003118:	4a4a      	ldr	r2, [pc, #296]	; (8003244 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800311a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800311e:	61d3      	str	r3, [r2, #28]
 8003120:	4b48      	ldr	r3, [pc, #288]	; (8003244 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003122:	69db      	ldr	r3, [r3, #28]
 8003124:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003128:	60bb      	str	r3, [r7, #8]
 800312a:	68bb      	ldr	r3, [r7, #8]
 800312c:	2301      	movs	r3, #1
 800312e:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 8003132:	4b45      	ldr	r3, [pc, #276]	; (8003248 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8003134:	681b      	ldr	r3, [r3, #0]
 8003136:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800313a:	2b00      	cmp	r3, #0
 800313c:	d118      	bne.n	8003170 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 800313e:	4b42      	ldr	r3, [pc, #264]	; (8003248 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8003140:	681b      	ldr	r3, [r3, #0]
 8003142:	4a41      	ldr	r2, [pc, #260]	; (8003248 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8003144:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003148:	6013      	str	r3, [r2, #0]
 800314a:	f7fe fb9b 	bl	8001884 <HAL_GetTick>
 800314e:	6438      	str	r0, [r7, #64]	; 0x40
 8003150:	e008      	b.n	8003164 <HAL_RCCEx_PeriphCLKConfig+0x80>
 8003152:	f7fe fb97 	bl	8001884 <HAL_GetTick>
 8003156:	4602      	mov	r2, r0
 8003158:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800315a:	1ad3      	subs	r3, r2, r3
 800315c:	2b64      	cmp	r3, #100	; 0x64
 800315e:	d901      	bls.n	8003164 <HAL_RCCEx_PeriphCLKConfig+0x80>
 8003160:	2303      	movs	r3, #3
 8003162:	e1d6      	b.n	8003512 <HAL_RCCEx_PeriphCLKConfig+0x42e>
 8003164:	4b38      	ldr	r3, [pc, #224]	; (8003248 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8003166:	681b      	ldr	r3, [r3, #0]
 8003168:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800316c:	2b00      	cmp	r3, #0
 800316e:	d0f0      	beq.n	8003152 <HAL_RCCEx_PeriphCLKConfig+0x6e>
 8003170:	4b34      	ldr	r3, [pc, #208]	; (8003244 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003172:	6a1b      	ldr	r3, [r3, #32]
 8003174:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8003178:	63fb      	str	r3, [r7, #60]	; 0x3c
 800317a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800317c:	2b00      	cmp	r3, #0
 800317e:	f000 8084 	beq.w	800328a <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8003182:	687b      	ldr	r3, [r7, #4]
 8003184:	685b      	ldr	r3, [r3, #4]
 8003186:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800318a:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800318c:	429a      	cmp	r2, r3
 800318e:	d07c      	beq.n	800328a <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8003190:	4b2c      	ldr	r3, [pc, #176]	; (8003244 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003192:	6a1b      	ldr	r3, [r3, #32]
 8003194:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003198:	63fb      	str	r3, [r7, #60]	; 0x3c
 800319a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800319e:	633b      	str	r3, [r7, #48]	; 0x30
 80031a0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80031a2:	fa93 f3a3 	rbit	r3, r3
 80031a6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80031a8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80031aa:	fab3 f383 	clz	r3, r3
 80031ae:	b2db      	uxtb	r3, r3
 80031b0:	461a      	mov	r2, r3
 80031b2:	4b26      	ldr	r3, [pc, #152]	; (800324c <HAL_RCCEx_PeriphCLKConfig+0x168>)
 80031b4:	4413      	add	r3, r2
 80031b6:	009b      	lsls	r3, r3, #2
 80031b8:	461a      	mov	r2, r3
 80031ba:	2301      	movs	r3, #1
 80031bc:	6013      	str	r3, [r2, #0]
 80031be:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80031c2:	63bb      	str	r3, [r7, #56]	; 0x38
 80031c4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80031c6:	fa93 f3a3 	rbit	r3, r3
 80031ca:	637b      	str	r3, [r7, #52]	; 0x34
 80031cc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80031ce:	fab3 f383 	clz	r3, r3
 80031d2:	b2db      	uxtb	r3, r3
 80031d4:	461a      	mov	r2, r3
 80031d6:	4b1d      	ldr	r3, [pc, #116]	; (800324c <HAL_RCCEx_PeriphCLKConfig+0x168>)
 80031d8:	4413      	add	r3, r2
 80031da:	009b      	lsls	r3, r3, #2
 80031dc:	461a      	mov	r2, r3
 80031de:	2300      	movs	r3, #0
 80031e0:	6013      	str	r3, [r2, #0]
 80031e2:	4a18      	ldr	r2, [pc, #96]	; (8003244 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80031e4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80031e6:	6213      	str	r3, [r2, #32]
 80031e8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80031ea:	f003 0301 	and.w	r3, r3, #1
 80031ee:	2b00      	cmp	r3, #0
 80031f0:	d04b      	beq.n	800328a <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 80031f2:	f7fe fb47 	bl	8001884 <HAL_GetTick>
 80031f6:	6438      	str	r0, [r7, #64]	; 0x40
 80031f8:	e00a      	b.n	8003210 <HAL_RCCEx_PeriphCLKConfig+0x12c>
 80031fa:	f7fe fb43 	bl	8001884 <HAL_GetTick>
 80031fe:	4602      	mov	r2, r0
 8003200:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8003202:	1ad3      	subs	r3, r2, r3
 8003204:	f241 3288 	movw	r2, #5000	; 0x1388
 8003208:	4293      	cmp	r3, r2
 800320a:	d901      	bls.n	8003210 <HAL_RCCEx_PeriphCLKConfig+0x12c>
 800320c:	2303      	movs	r3, #3
 800320e:	e180      	b.n	8003512 <HAL_RCCEx_PeriphCLKConfig+0x42e>
 8003210:	2302      	movs	r3, #2
 8003212:	62bb      	str	r3, [r7, #40]	; 0x28
 8003214:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003216:	fa93 f3a3 	rbit	r3, r3
 800321a:	627b      	str	r3, [r7, #36]	; 0x24
 800321c:	2302      	movs	r3, #2
 800321e:	623b      	str	r3, [r7, #32]
 8003220:	6a3b      	ldr	r3, [r7, #32]
 8003222:	fa93 f3a3 	rbit	r3, r3
 8003226:	61fb      	str	r3, [r7, #28]
 8003228:	69fb      	ldr	r3, [r7, #28]
 800322a:	fab3 f383 	clz	r3, r3
 800322e:	b2db      	uxtb	r3, r3
 8003230:	095b      	lsrs	r3, r3, #5
 8003232:	b2db      	uxtb	r3, r3
 8003234:	f043 0302 	orr.w	r3, r3, #2
 8003238:	b2db      	uxtb	r3, r3
 800323a:	2b02      	cmp	r3, #2
 800323c:	d108      	bne.n	8003250 <HAL_RCCEx_PeriphCLKConfig+0x16c>
 800323e:	4b01      	ldr	r3, [pc, #4]	; (8003244 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003240:	6a1b      	ldr	r3, [r3, #32]
 8003242:	e00d      	b.n	8003260 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 8003244:	40021000 	.word	0x40021000
 8003248:	40007000 	.word	0x40007000
 800324c:	10908100 	.word	0x10908100
 8003250:	2302      	movs	r3, #2
 8003252:	61bb      	str	r3, [r7, #24]
 8003254:	69bb      	ldr	r3, [r7, #24]
 8003256:	fa93 f3a3 	rbit	r3, r3
 800325a:	617b      	str	r3, [r7, #20]
 800325c:	4ba0      	ldr	r3, [pc, #640]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 800325e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003260:	2202      	movs	r2, #2
 8003262:	613a      	str	r2, [r7, #16]
 8003264:	693a      	ldr	r2, [r7, #16]
 8003266:	fa92 f2a2 	rbit	r2, r2
 800326a:	60fa      	str	r2, [r7, #12]
 800326c:	68fa      	ldr	r2, [r7, #12]
 800326e:	fab2 f282 	clz	r2, r2
 8003272:	b2d2      	uxtb	r2, r2
 8003274:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003278:	b2d2      	uxtb	r2, r2
 800327a:	f002 021f 	and.w	r2, r2, #31
 800327e:	2101      	movs	r1, #1
 8003280:	fa01 f202 	lsl.w	r2, r1, r2
 8003284:	4013      	ands	r3, r2
 8003286:	2b00      	cmp	r3, #0
 8003288:	d0b7      	beq.n	80031fa <HAL_RCCEx_PeriphCLKConfig+0x116>
 800328a:	4b95      	ldr	r3, [pc, #596]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 800328c:	6a1b      	ldr	r3, [r3, #32]
 800328e:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8003292:	687b      	ldr	r3, [r7, #4]
 8003294:	685b      	ldr	r3, [r3, #4]
 8003296:	4992      	ldr	r1, [pc, #584]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003298:	4313      	orrs	r3, r2
 800329a:	620b      	str	r3, [r1, #32]
 800329c:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 80032a0:	2b01      	cmp	r3, #1
 80032a2:	d105      	bne.n	80032b0 <HAL_RCCEx_PeriphCLKConfig+0x1cc>
 80032a4:	4b8e      	ldr	r3, [pc, #568]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80032a6:	69db      	ldr	r3, [r3, #28]
 80032a8:	4a8d      	ldr	r2, [pc, #564]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80032aa:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80032ae:	61d3      	str	r3, [r2, #28]
 80032b0:	687b      	ldr	r3, [r7, #4]
 80032b2:	681b      	ldr	r3, [r3, #0]
 80032b4:	f003 0301 	and.w	r3, r3, #1
 80032b8:	2b00      	cmp	r3, #0
 80032ba:	d008      	beq.n	80032ce <HAL_RCCEx_PeriphCLKConfig+0x1ea>
 80032bc:	4b88      	ldr	r3, [pc, #544]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80032be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80032c0:	f023 0203 	bic.w	r2, r3, #3
 80032c4:	687b      	ldr	r3, [r7, #4]
 80032c6:	689b      	ldr	r3, [r3, #8]
 80032c8:	4985      	ldr	r1, [pc, #532]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80032ca:	4313      	orrs	r3, r2
 80032cc:	630b      	str	r3, [r1, #48]	; 0x30
 80032ce:	687b      	ldr	r3, [r7, #4]
 80032d0:	681b      	ldr	r3, [r3, #0]
 80032d2:	f003 0302 	and.w	r3, r3, #2
 80032d6:	2b00      	cmp	r3, #0
 80032d8:	d008      	beq.n	80032ec <HAL_RCCEx_PeriphCLKConfig+0x208>
 80032da:	4b81      	ldr	r3, [pc, #516]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80032dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80032de:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	68db      	ldr	r3, [r3, #12]
 80032e6:	497e      	ldr	r1, [pc, #504]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80032e8:	4313      	orrs	r3, r2
 80032ea:	630b      	str	r3, [r1, #48]	; 0x30
 80032ec:	687b      	ldr	r3, [r7, #4]
 80032ee:	681b      	ldr	r3, [r3, #0]
 80032f0:	f003 0304 	and.w	r3, r3, #4
 80032f4:	2b00      	cmp	r3, #0
 80032f6:	d008      	beq.n	800330a <HAL_RCCEx_PeriphCLKConfig+0x226>
 80032f8:	4b79      	ldr	r3, [pc, #484]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80032fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80032fc:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8003300:	687b      	ldr	r3, [r7, #4]
 8003302:	691b      	ldr	r3, [r3, #16]
 8003304:	4976      	ldr	r1, [pc, #472]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003306:	4313      	orrs	r3, r2
 8003308:	630b      	str	r3, [r1, #48]	; 0x30
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	f003 0320 	and.w	r3, r3, #32
 8003312:	2b00      	cmp	r3, #0
 8003314:	d008      	beq.n	8003328 <HAL_RCCEx_PeriphCLKConfig+0x244>
 8003316:	4b72      	ldr	r3, [pc, #456]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003318:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800331a:	f023 0210 	bic.w	r2, r3, #16
 800331e:	687b      	ldr	r3, [r7, #4]
 8003320:	69db      	ldr	r3, [r3, #28]
 8003322:	496f      	ldr	r1, [pc, #444]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003324:	4313      	orrs	r3, r2
 8003326:	630b      	str	r3, [r1, #48]	; 0x30
 8003328:	687b      	ldr	r3, [r7, #4]
 800332a:	681b      	ldr	r3, [r3, #0]
 800332c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003330:	2b00      	cmp	r3, #0
 8003332:	d008      	beq.n	8003346 <HAL_RCCEx_PeriphCLKConfig+0x262>
 8003334:	4b6a      	ldr	r3, [pc, #424]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003336:	685b      	ldr	r3, [r3, #4]
 8003338:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003340:	4967      	ldr	r1, [pc, #412]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003342:	4313      	orrs	r3, r2
 8003344:	604b      	str	r3, [r1, #4]
 8003346:	687b      	ldr	r3, [r7, #4]
 8003348:	681b      	ldr	r3, [r3, #0]
 800334a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800334e:	2b00      	cmp	r3, #0
 8003350:	d008      	beq.n	8003364 <HAL_RCCEx_PeriphCLKConfig+0x280>
 8003352:	4b63      	ldr	r3, [pc, #396]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003354:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003356:	f023 0220 	bic.w	r2, r3, #32
 800335a:	687b      	ldr	r3, [r7, #4]
 800335c:	6a1b      	ldr	r3, [r3, #32]
 800335e:	4960      	ldr	r1, [pc, #384]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003360:	4313      	orrs	r3, r2
 8003362:	630b      	str	r3, [r1, #48]	; 0x30
 8003364:	687b      	ldr	r3, [r7, #4]
 8003366:	681b      	ldr	r3, [r3, #0]
 8003368:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800336c:	2b00      	cmp	r3, #0
 800336e:	d008      	beq.n	8003382 <HAL_RCCEx_PeriphCLKConfig+0x29e>
 8003370:	4b5b      	ldr	r3, [pc, #364]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003372:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003374:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8003378:	687b      	ldr	r3, [r7, #4]
 800337a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800337c:	4958      	ldr	r1, [pc, #352]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 800337e:	4313      	orrs	r3, r2
 8003380:	630b      	str	r3, [r1, #48]	; 0x30
 8003382:	687b      	ldr	r3, [r7, #4]
 8003384:	681b      	ldr	r3, [r3, #0]
 8003386:	f003 0308 	and.w	r3, r3, #8
 800338a:	2b00      	cmp	r3, #0
 800338c:	d008      	beq.n	80033a0 <HAL_RCCEx_PeriphCLKConfig+0x2bc>
 800338e:	4b54      	ldr	r3, [pc, #336]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003390:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003392:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	695b      	ldr	r3, [r3, #20]
 800339a:	4951      	ldr	r1, [pc, #324]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 800339c:	4313      	orrs	r3, r2
 800339e:	630b      	str	r3, [r1, #48]	; 0x30
 80033a0:	687b      	ldr	r3, [r7, #4]
 80033a2:	681b      	ldr	r3, [r3, #0]
 80033a4:	f003 0310 	and.w	r3, r3, #16
 80033a8:	2b00      	cmp	r3, #0
 80033aa:	d008      	beq.n	80033be <HAL_RCCEx_PeriphCLKConfig+0x2da>
 80033ac:	4b4c      	ldr	r3, [pc, #304]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80033ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80033b0:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 80033b4:	687b      	ldr	r3, [r7, #4]
 80033b6:	699b      	ldr	r3, [r3, #24]
 80033b8:	4949      	ldr	r1, [pc, #292]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80033ba:	4313      	orrs	r3, r2
 80033bc:	630b      	str	r3, [r1, #48]	; 0x30
 80033be:	687b      	ldr	r3, [r7, #4]
 80033c0:	681b      	ldr	r3, [r3, #0]
 80033c2:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80033c6:	2b00      	cmp	r3, #0
 80033c8:	d008      	beq.n	80033dc <HAL_RCCEx_PeriphCLKConfig+0x2f8>
 80033ca:	4b45      	ldr	r3, [pc, #276]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80033cc:	685b      	ldr	r3, [r3, #4]
 80033ce:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 80033d2:	687b      	ldr	r3, [r7, #4]
 80033d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80033d6:	4942      	ldr	r1, [pc, #264]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80033d8:	4313      	orrs	r3, r2
 80033da:	604b      	str	r3, [r1, #4]
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	681b      	ldr	r3, [r3, #0]
 80033e0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80033e4:	2b00      	cmp	r3, #0
 80033e6:	d008      	beq.n	80033fa <HAL_RCCEx_PeriphCLKConfig+0x316>
 80033e8:	4b3d      	ldr	r3, [pc, #244]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80033ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80033ec:	f423 72f8 	bic.w	r2, r3, #496	; 0x1f0
 80033f0:	687b      	ldr	r3, [r7, #4]
 80033f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80033f4:	493a      	ldr	r1, [pc, #232]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80033f6:	4313      	orrs	r3, r2
 80033f8:	62cb      	str	r3, [r1, #44]	; 0x2c
 80033fa:	687b      	ldr	r3, [r7, #4]
 80033fc:	681b      	ldr	r3, [r3, #0]
 80033fe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003402:	2b00      	cmp	r3, #0
 8003404:	d008      	beq.n	8003418 <HAL_RCCEx_PeriphCLKConfig+0x334>
 8003406:	4b36      	ldr	r3, [pc, #216]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003408:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800340a:	f423 5278 	bic.w	r2, r3, #15872	; 0x3e00
 800340e:	687b      	ldr	r3, [r7, #4]
 8003410:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003412:	4933      	ldr	r1, [pc, #204]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003414:	4313      	orrs	r3, r2
 8003416:	62cb      	str	r3, [r1, #44]	; 0x2c
 8003418:	687b      	ldr	r3, [r7, #4]
 800341a:	681b      	ldr	r3, [r3, #0]
 800341c:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003420:	2b00      	cmp	r3, #0
 8003422:	d008      	beq.n	8003436 <HAL_RCCEx_PeriphCLKConfig+0x352>
 8003424:	4b2e      	ldr	r3, [pc, #184]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003426:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003428:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800342c:	687b      	ldr	r3, [r7, #4]
 800342e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003430:	492b      	ldr	r1, [pc, #172]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003432:	4313      	orrs	r3, r2
 8003434:	630b      	str	r3, [r1, #48]	; 0x30
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	681b      	ldr	r3, [r3, #0]
 800343a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800343e:	2b00      	cmp	r3, #0
 8003440:	d008      	beq.n	8003454 <HAL_RCCEx_PeriphCLKConfig+0x370>
 8003442:	4b27      	ldr	r3, [pc, #156]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003444:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003446:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 800344a:	687b      	ldr	r3, [r7, #4]
 800344c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800344e:	4924      	ldr	r1, [pc, #144]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003450:	4313      	orrs	r3, r2
 8003452:	630b      	str	r3, [r1, #48]	; 0x30
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	681b      	ldr	r3, [r3, #0]
 8003458:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800345c:	2b00      	cmp	r3, #0
 800345e:	d008      	beq.n	8003472 <HAL_RCCEx_PeriphCLKConfig+0x38e>
 8003460:	4b1f      	ldr	r3, [pc, #124]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003462:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003464:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800346c:	491c      	ldr	r1, [pc, #112]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 800346e:	4313      	orrs	r3, r2
 8003470:	630b      	str	r3, [r1, #48]	; 0x30
 8003472:	687b      	ldr	r3, [r7, #4]
 8003474:	681b      	ldr	r3, [r3, #0]
 8003476:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800347a:	2b00      	cmp	r3, #0
 800347c:	d008      	beq.n	8003490 <HAL_RCCEx_PeriphCLKConfig+0x3ac>
 800347e:	4b18      	ldr	r3, [pc, #96]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 8003480:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003482:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 8003486:	687b      	ldr	r3, [r7, #4]
 8003488:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800348a:	4915      	ldr	r1, [pc, #84]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 800348c:	4313      	orrs	r3, r2
 800348e:	630b      	str	r3, [r1, #48]	; 0x30
 8003490:	687b      	ldr	r3, [r7, #4]
 8003492:	681b      	ldr	r3, [r3, #0]
 8003494:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003498:	2b00      	cmp	r3, #0
 800349a:	d008      	beq.n	80034ae <HAL_RCCEx_PeriphCLKConfig+0x3ca>
 800349c:	4b10      	ldr	r3, [pc, #64]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 800349e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80034a0:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80034a8:	490d      	ldr	r1, [pc, #52]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80034aa:	4313      	orrs	r3, r2
 80034ac:	630b      	str	r3, [r1, #48]	; 0x30
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	681b      	ldr	r3, [r3, #0]
 80034b2:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80034b6:	2b00      	cmp	r3, #0
 80034b8:	d008      	beq.n	80034cc <HAL_RCCEx_PeriphCLKConfig+0x3e8>
 80034ba:	4b09      	ldr	r3, [pc, #36]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80034bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80034be:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 80034c2:	687b      	ldr	r3, [r7, #4]
 80034c4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80034c6:	4906      	ldr	r1, [pc, #24]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80034c8:	4313      	orrs	r3, r2
 80034ca:	630b      	str	r3, [r1, #48]	; 0x30
 80034cc:	687b      	ldr	r3, [r7, #4]
 80034ce:	681b      	ldr	r3, [r3, #0]
 80034d0:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80034d4:	2b00      	cmp	r3, #0
 80034d6:	d00c      	beq.n	80034f2 <HAL_RCCEx_PeriphCLKConfig+0x40e>
 80034d8:	4b01      	ldr	r3, [pc, #4]	; (80034e0 <HAL_RCCEx_PeriphCLKConfig+0x3fc>)
 80034da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80034dc:	e002      	b.n	80034e4 <HAL_RCCEx_PeriphCLKConfig+0x400>
 80034de:	bf00      	nop
 80034e0:	40021000 	.word	0x40021000
 80034e4:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80034ec:	490b      	ldr	r1, [pc, #44]	; (800351c <HAL_RCCEx_PeriphCLKConfig+0x438>)
 80034ee:	4313      	orrs	r3, r2
 80034f0:	630b      	str	r3, [r1, #48]	; 0x30
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	681b      	ldr	r3, [r3, #0]
 80034f6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80034fa:	2b00      	cmp	r3, #0
 80034fc:	d008      	beq.n	8003510 <HAL_RCCEx_PeriphCLKConfig+0x42c>
 80034fe:	4b07      	ldr	r3, [pc, #28]	; (800351c <HAL_RCCEx_PeriphCLKConfig+0x438>)
 8003500:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003502:	f423 4200 	bic.w	r2, r3, #32768	; 0x8000
 8003506:	687b      	ldr	r3, [r7, #4]
 8003508:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800350a:	4904      	ldr	r1, [pc, #16]	; (800351c <HAL_RCCEx_PeriphCLKConfig+0x438>)
 800350c:	4313      	orrs	r3, r2
 800350e:	630b      	str	r3, [r1, #48]	; 0x30
 8003510:	2300      	movs	r3, #0
 8003512:	4618      	mov	r0, r3
 8003514:	3748      	adds	r7, #72	; 0x48
 8003516:	46bd      	mov	sp, r7
 8003518:	bd80      	pop	{r7, pc}
 800351a:	bf00      	nop
 800351c:	40021000 	.word	0x40021000

08003520 <HAL_TIM_Base_Init>:
 8003520:	b580      	push	{r7, lr}
 8003522:	b082      	sub	sp, #8
 8003524:	af00      	add	r7, sp, #0
 8003526:	6078      	str	r0, [r7, #4]
 8003528:	687b      	ldr	r3, [r7, #4]
 800352a:	2b00      	cmp	r3, #0
 800352c:	d101      	bne.n	8003532 <HAL_TIM_Base_Init+0x12>
 800352e:	2301      	movs	r3, #1
 8003530:	e049      	b.n	80035c6 <HAL_TIM_Base_Init+0xa6>
 8003532:	687b      	ldr	r3, [r7, #4]
 8003534:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003538:	b2db      	uxtb	r3, r3
 800353a:	2b00      	cmp	r3, #0
 800353c:	d106      	bne.n	800354c <HAL_TIM_Base_Init+0x2c>
 800353e:	687b      	ldr	r3, [r7, #4]
 8003540:	2200      	movs	r2, #0
 8003542:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003546:	6878      	ldr	r0, [r7, #4]
 8003548:	f000 f841 	bl	80035ce <HAL_TIM_Base_MspInit>
 800354c:	687b      	ldr	r3, [r7, #4]
 800354e:	2202      	movs	r2, #2
 8003550:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	681a      	ldr	r2, [r3, #0]
 8003558:	687b      	ldr	r3, [r7, #4]
 800355a:	3304      	adds	r3, #4
 800355c:	4619      	mov	r1, r3
 800355e:	4610      	mov	r0, r2
 8003560:	f000 f9f8 	bl	8003954 <TIM_Base_SetConfig>
 8003564:	687b      	ldr	r3, [r7, #4]
 8003566:	2201      	movs	r2, #1
 8003568:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800356c:	687b      	ldr	r3, [r7, #4]
 800356e:	2201      	movs	r2, #1
 8003570:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003574:	687b      	ldr	r3, [r7, #4]
 8003576:	2201      	movs	r2, #1
 8003578:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	2201      	movs	r2, #1
 8003580:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	2201      	movs	r2, #1
 8003588:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	2201      	movs	r2, #1
 8003590:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003594:	687b      	ldr	r3, [r7, #4]
 8003596:	2201      	movs	r2, #1
 8003598:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	2201      	movs	r2, #1
 80035a0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80035a4:	687b      	ldr	r3, [r7, #4]
 80035a6:	2201      	movs	r2, #1
 80035a8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80035ac:	687b      	ldr	r3, [r7, #4]
 80035ae:	2201      	movs	r2, #1
 80035b0:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	2201      	movs	r2, #1
 80035b8:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 80035bc:	687b      	ldr	r3, [r7, #4]
 80035be:	2201      	movs	r2, #1
 80035c0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80035c4:	2300      	movs	r3, #0
 80035c6:	4618      	mov	r0, r3
 80035c8:	3708      	adds	r7, #8
 80035ca:	46bd      	mov	sp, r7
 80035cc:	bd80      	pop	{r7, pc}

080035ce <HAL_TIM_Base_MspInit>:
 80035ce:	b480      	push	{r7}
 80035d0:	b083      	sub	sp, #12
 80035d2:	af00      	add	r7, sp, #0
 80035d4:	6078      	str	r0, [r7, #4]
 80035d6:	bf00      	nop
 80035d8:	370c      	adds	r7, #12
 80035da:	46bd      	mov	sp, r7
 80035dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035e0:	4770      	bx	lr
	...

080035e4 <HAL_TIM_Base_Start_IT>:
 80035e4:	b480      	push	{r7}
 80035e6:	b085      	sub	sp, #20
 80035e8:	af00      	add	r7, sp, #0
 80035ea:	6078      	str	r0, [r7, #4]
 80035ec:	687b      	ldr	r3, [r7, #4]
 80035ee:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80035f2:	b2db      	uxtb	r3, r3
 80035f4:	2b01      	cmp	r3, #1
 80035f6:	d001      	beq.n	80035fc <HAL_TIM_Base_Start_IT+0x18>
 80035f8:	2301      	movs	r3, #1
 80035fa:	e04f      	b.n	800369c <HAL_TIM_Base_Start_IT+0xb8>
 80035fc:	687b      	ldr	r3, [r7, #4]
 80035fe:	2202      	movs	r2, #2
 8003600:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003604:	687b      	ldr	r3, [r7, #4]
 8003606:	681b      	ldr	r3, [r3, #0]
 8003608:	68da      	ldr	r2, [r3, #12]
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	681b      	ldr	r3, [r3, #0]
 800360e:	f042 0201 	orr.w	r2, r2, #1
 8003612:	60da      	str	r2, [r3, #12]
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	681b      	ldr	r3, [r3, #0]
 8003618:	4a23      	ldr	r2, [pc, #140]	; (80036a8 <HAL_TIM_Base_Start_IT+0xc4>)
 800361a:	4293      	cmp	r3, r2
 800361c:	d01d      	beq.n	800365a <HAL_TIM_Base_Start_IT+0x76>
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	681b      	ldr	r3, [r3, #0]
 8003622:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003626:	d018      	beq.n	800365a <HAL_TIM_Base_Start_IT+0x76>
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	681b      	ldr	r3, [r3, #0]
 800362c:	4a1f      	ldr	r2, [pc, #124]	; (80036ac <HAL_TIM_Base_Start_IT+0xc8>)
 800362e:	4293      	cmp	r3, r2
 8003630:	d013      	beq.n	800365a <HAL_TIM_Base_Start_IT+0x76>
 8003632:	687b      	ldr	r3, [r7, #4]
 8003634:	681b      	ldr	r3, [r3, #0]
 8003636:	4a1e      	ldr	r2, [pc, #120]	; (80036b0 <HAL_TIM_Base_Start_IT+0xcc>)
 8003638:	4293      	cmp	r3, r2
 800363a:	d00e      	beq.n	800365a <HAL_TIM_Base_Start_IT+0x76>
 800363c:	687b      	ldr	r3, [r7, #4]
 800363e:	681b      	ldr	r3, [r3, #0]
 8003640:	4a1c      	ldr	r2, [pc, #112]	; (80036b4 <HAL_TIM_Base_Start_IT+0xd0>)
 8003642:	4293      	cmp	r3, r2
 8003644:	d009      	beq.n	800365a <HAL_TIM_Base_Start_IT+0x76>
 8003646:	687b      	ldr	r3, [r7, #4]
 8003648:	681b      	ldr	r3, [r3, #0]
 800364a:	4a1b      	ldr	r2, [pc, #108]	; (80036b8 <HAL_TIM_Base_Start_IT+0xd4>)
 800364c:	4293      	cmp	r3, r2
 800364e:	d004      	beq.n	800365a <HAL_TIM_Base_Start_IT+0x76>
 8003650:	687b      	ldr	r3, [r7, #4]
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	4a19      	ldr	r2, [pc, #100]	; (80036bc <HAL_TIM_Base_Start_IT+0xd8>)
 8003656:	4293      	cmp	r3, r2
 8003658:	d115      	bne.n	8003686 <HAL_TIM_Base_Start_IT+0xa2>
 800365a:	687b      	ldr	r3, [r7, #4]
 800365c:	681b      	ldr	r3, [r3, #0]
 800365e:	689a      	ldr	r2, [r3, #8]
 8003660:	4b17      	ldr	r3, [pc, #92]	; (80036c0 <HAL_TIM_Base_Start_IT+0xdc>)
 8003662:	4013      	ands	r3, r2
 8003664:	60fb      	str	r3, [r7, #12]
 8003666:	68fb      	ldr	r3, [r7, #12]
 8003668:	2b06      	cmp	r3, #6
 800366a:	d015      	beq.n	8003698 <HAL_TIM_Base_Start_IT+0xb4>
 800366c:	68fb      	ldr	r3, [r7, #12]
 800366e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003672:	d011      	beq.n	8003698 <HAL_TIM_Base_Start_IT+0xb4>
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	681b      	ldr	r3, [r3, #0]
 8003678:	681a      	ldr	r2, [r3, #0]
 800367a:	687b      	ldr	r3, [r7, #4]
 800367c:	681b      	ldr	r3, [r3, #0]
 800367e:	f042 0201 	orr.w	r2, r2, #1
 8003682:	601a      	str	r2, [r3, #0]
 8003684:	e008      	b.n	8003698 <HAL_TIM_Base_Start_IT+0xb4>
 8003686:	687b      	ldr	r3, [r7, #4]
 8003688:	681b      	ldr	r3, [r3, #0]
 800368a:	681a      	ldr	r2, [r3, #0]
 800368c:	687b      	ldr	r3, [r7, #4]
 800368e:	681b      	ldr	r3, [r3, #0]
 8003690:	f042 0201 	orr.w	r2, r2, #1
 8003694:	601a      	str	r2, [r3, #0]
 8003696:	e000      	b.n	800369a <HAL_TIM_Base_Start_IT+0xb6>
 8003698:	bf00      	nop
 800369a:	2300      	movs	r3, #0
 800369c:	4618      	mov	r0, r3
 800369e:	3714      	adds	r7, #20
 80036a0:	46bd      	mov	sp, r7
 80036a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036a6:	4770      	bx	lr
 80036a8:	40012c00 	.word	0x40012c00
 80036ac:	40000400 	.word	0x40000400
 80036b0:	40000800 	.word	0x40000800
 80036b4:	40013400 	.word	0x40013400
 80036b8:	40014000 	.word	0x40014000
 80036bc:	40015000 	.word	0x40015000
 80036c0:	00010007 	.word	0x00010007

080036c4 <HAL_TIM_IRQHandler>:
 80036c4:	b580      	push	{r7, lr}
 80036c6:	b082      	sub	sp, #8
 80036c8:	af00      	add	r7, sp, #0
 80036ca:	6078      	str	r0, [r7, #4]
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	681b      	ldr	r3, [r3, #0]
 80036d0:	691b      	ldr	r3, [r3, #16]
 80036d2:	f003 0302 	and.w	r3, r3, #2
 80036d6:	2b02      	cmp	r3, #2
 80036d8:	d122      	bne.n	8003720 <HAL_TIM_IRQHandler+0x5c>
 80036da:	687b      	ldr	r3, [r7, #4]
 80036dc:	681b      	ldr	r3, [r3, #0]
 80036de:	68db      	ldr	r3, [r3, #12]
 80036e0:	f003 0302 	and.w	r3, r3, #2
 80036e4:	2b02      	cmp	r3, #2
 80036e6:	d11b      	bne.n	8003720 <HAL_TIM_IRQHandler+0x5c>
 80036e8:	687b      	ldr	r3, [r7, #4]
 80036ea:	681b      	ldr	r3, [r3, #0]
 80036ec:	f06f 0202 	mvn.w	r2, #2
 80036f0:	611a      	str	r2, [r3, #16]
 80036f2:	687b      	ldr	r3, [r7, #4]
 80036f4:	2201      	movs	r2, #1
 80036f6:	771a      	strb	r2, [r3, #28]
 80036f8:	687b      	ldr	r3, [r7, #4]
 80036fa:	681b      	ldr	r3, [r3, #0]
 80036fc:	699b      	ldr	r3, [r3, #24]
 80036fe:	f003 0303 	and.w	r3, r3, #3
 8003702:	2b00      	cmp	r3, #0
 8003704:	d003      	beq.n	800370e <HAL_TIM_IRQHandler+0x4a>
 8003706:	6878      	ldr	r0, [r7, #4]
 8003708:	f000 f905 	bl	8003916 <HAL_TIM_IC_CaptureCallback>
 800370c:	e005      	b.n	800371a <HAL_TIM_IRQHandler+0x56>
 800370e:	6878      	ldr	r0, [r7, #4]
 8003710:	f000 f8f7 	bl	8003902 <HAL_TIM_OC_DelayElapsedCallback>
 8003714:	6878      	ldr	r0, [r7, #4]
 8003716:	f000 f908 	bl	800392a <HAL_TIM_PWM_PulseFinishedCallback>
 800371a:	687b      	ldr	r3, [r7, #4]
 800371c:	2200      	movs	r2, #0
 800371e:	771a      	strb	r2, [r3, #28]
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	681b      	ldr	r3, [r3, #0]
 8003724:	691b      	ldr	r3, [r3, #16]
 8003726:	f003 0304 	and.w	r3, r3, #4
 800372a:	2b04      	cmp	r3, #4
 800372c:	d122      	bne.n	8003774 <HAL_TIM_IRQHandler+0xb0>
 800372e:	687b      	ldr	r3, [r7, #4]
 8003730:	681b      	ldr	r3, [r3, #0]
 8003732:	68db      	ldr	r3, [r3, #12]
 8003734:	f003 0304 	and.w	r3, r3, #4
 8003738:	2b04      	cmp	r3, #4
 800373a:	d11b      	bne.n	8003774 <HAL_TIM_IRQHandler+0xb0>
 800373c:	687b      	ldr	r3, [r7, #4]
 800373e:	681b      	ldr	r3, [r3, #0]
 8003740:	f06f 0204 	mvn.w	r2, #4
 8003744:	611a      	str	r2, [r3, #16]
 8003746:	687b      	ldr	r3, [r7, #4]
 8003748:	2202      	movs	r2, #2
 800374a:	771a      	strb	r2, [r3, #28]
 800374c:	687b      	ldr	r3, [r7, #4]
 800374e:	681b      	ldr	r3, [r3, #0]
 8003750:	699b      	ldr	r3, [r3, #24]
 8003752:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8003756:	2b00      	cmp	r3, #0
 8003758:	d003      	beq.n	8003762 <HAL_TIM_IRQHandler+0x9e>
 800375a:	6878      	ldr	r0, [r7, #4]
 800375c:	f000 f8db 	bl	8003916 <HAL_TIM_IC_CaptureCallback>
 8003760:	e005      	b.n	800376e <HAL_TIM_IRQHandler+0xaa>
 8003762:	6878      	ldr	r0, [r7, #4]
 8003764:	f000 f8cd 	bl	8003902 <HAL_TIM_OC_DelayElapsedCallback>
 8003768:	6878      	ldr	r0, [r7, #4]
 800376a:	f000 f8de 	bl	800392a <HAL_TIM_PWM_PulseFinishedCallback>
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	2200      	movs	r2, #0
 8003772:	771a      	strb	r2, [r3, #28]
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	681b      	ldr	r3, [r3, #0]
 8003778:	691b      	ldr	r3, [r3, #16]
 800377a:	f003 0308 	and.w	r3, r3, #8
 800377e:	2b08      	cmp	r3, #8
 8003780:	d122      	bne.n	80037c8 <HAL_TIM_IRQHandler+0x104>
 8003782:	687b      	ldr	r3, [r7, #4]
 8003784:	681b      	ldr	r3, [r3, #0]
 8003786:	68db      	ldr	r3, [r3, #12]
 8003788:	f003 0308 	and.w	r3, r3, #8
 800378c:	2b08      	cmp	r3, #8
 800378e:	d11b      	bne.n	80037c8 <HAL_TIM_IRQHandler+0x104>
 8003790:	687b      	ldr	r3, [r7, #4]
 8003792:	681b      	ldr	r3, [r3, #0]
 8003794:	f06f 0208 	mvn.w	r2, #8
 8003798:	611a      	str	r2, [r3, #16]
 800379a:	687b      	ldr	r3, [r7, #4]
 800379c:	2204      	movs	r2, #4
 800379e:	771a      	strb	r2, [r3, #28]
 80037a0:	687b      	ldr	r3, [r7, #4]
 80037a2:	681b      	ldr	r3, [r3, #0]
 80037a4:	69db      	ldr	r3, [r3, #28]
 80037a6:	f003 0303 	and.w	r3, r3, #3
 80037aa:	2b00      	cmp	r3, #0
 80037ac:	d003      	beq.n	80037b6 <HAL_TIM_IRQHandler+0xf2>
 80037ae:	6878      	ldr	r0, [r7, #4]
 80037b0:	f000 f8b1 	bl	8003916 <HAL_TIM_IC_CaptureCallback>
 80037b4:	e005      	b.n	80037c2 <HAL_TIM_IRQHandler+0xfe>
 80037b6:	6878      	ldr	r0, [r7, #4]
 80037b8:	f000 f8a3 	bl	8003902 <HAL_TIM_OC_DelayElapsedCallback>
 80037bc:	6878      	ldr	r0, [r7, #4]
 80037be:	f000 f8b4 	bl	800392a <HAL_TIM_PWM_PulseFinishedCallback>
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	2200      	movs	r2, #0
 80037c6:	771a      	strb	r2, [r3, #28]
 80037c8:	687b      	ldr	r3, [r7, #4]
 80037ca:	681b      	ldr	r3, [r3, #0]
 80037cc:	691b      	ldr	r3, [r3, #16]
 80037ce:	f003 0310 	and.w	r3, r3, #16
 80037d2:	2b10      	cmp	r3, #16
 80037d4:	d122      	bne.n	800381c <HAL_TIM_IRQHandler+0x158>
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	681b      	ldr	r3, [r3, #0]
 80037da:	68db      	ldr	r3, [r3, #12]
 80037dc:	f003 0310 	and.w	r3, r3, #16
 80037e0:	2b10      	cmp	r3, #16
 80037e2:	d11b      	bne.n	800381c <HAL_TIM_IRQHandler+0x158>
 80037e4:	687b      	ldr	r3, [r7, #4]
 80037e6:	681b      	ldr	r3, [r3, #0]
 80037e8:	f06f 0210 	mvn.w	r2, #16
 80037ec:	611a      	str	r2, [r3, #16]
 80037ee:	687b      	ldr	r3, [r7, #4]
 80037f0:	2208      	movs	r2, #8
 80037f2:	771a      	strb	r2, [r3, #28]
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	681b      	ldr	r3, [r3, #0]
 80037f8:	69db      	ldr	r3, [r3, #28]
 80037fa:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80037fe:	2b00      	cmp	r3, #0
 8003800:	d003      	beq.n	800380a <HAL_TIM_IRQHandler+0x146>
 8003802:	6878      	ldr	r0, [r7, #4]
 8003804:	f000 f887 	bl	8003916 <HAL_TIM_IC_CaptureCallback>
 8003808:	e005      	b.n	8003816 <HAL_TIM_IRQHandler+0x152>
 800380a:	6878      	ldr	r0, [r7, #4]
 800380c:	f000 f879 	bl	8003902 <HAL_TIM_OC_DelayElapsedCallback>
 8003810:	6878      	ldr	r0, [r7, #4]
 8003812:	f000 f88a 	bl	800392a <HAL_TIM_PWM_PulseFinishedCallback>
 8003816:	687b      	ldr	r3, [r7, #4]
 8003818:	2200      	movs	r2, #0
 800381a:	771a      	strb	r2, [r3, #28]
 800381c:	687b      	ldr	r3, [r7, #4]
 800381e:	681b      	ldr	r3, [r3, #0]
 8003820:	691b      	ldr	r3, [r3, #16]
 8003822:	f003 0301 	and.w	r3, r3, #1
 8003826:	2b01      	cmp	r3, #1
 8003828:	d10e      	bne.n	8003848 <HAL_TIM_IRQHandler+0x184>
 800382a:	687b      	ldr	r3, [r7, #4]
 800382c:	681b      	ldr	r3, [r3, #0]
 800382e:	68db      	ldr	r3, [r3, #12]
 8003830:	f003 0301 	and.w	r3, r3, #1
 8003834:	2b01      	cmp	r3, #1
 8003836:	d107      	bne.n	8003848 <HAL_TIM_IRQHandler+0x184>
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	681b      	ldr	r3, [r3, #0]
 800383c:	f06f 0201 	mvn.w	r2, #1
 8003840:	611a      	str	r2, [r3, #16]
 8003842:	6878      	ldr	r0, [r7, #4]
 8003844:	f7fd fe8a 	bl	800155c <HAL_TIM_PeriodElapsedCallback>
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	681b      	ldr	r3, [r3, #0]
 800384c:	691b      	ldr	r3, [r3, #16]
 800384e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003852:	2b80      	cmp	r3, #128	; 0x80
 8003854:	d10e      	bne.n	8003874 <HAL_TIM_IRQHandler+0x1b0>
 8003856:	687b      	ldr	r3, [r7, #4]
 8003858:	681b      	ldr	r3, [r3, #0]
 800385a:	68db      	ldr	r3, [r3, #12]
 800385c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003860:	2b80      	cmp	r3, #128	; 0x80
 8003862:	d107      	bne.n	8003874 <HAL_TIM_IRQHandler+0x1b0>
 8003864:	687b      	ldr	r3, [r7, #4]
 8003866:	681b      	ldr	r3, [r3, #0]
 8003868:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800386c:	611a      	str	r2, [r3, #16]
 800386e:	6878      	ldr	r0, [r7, #4]
 8003870:	f000 f918 	bl	8003aa4 <HAL_TIMEx_BreakCallback>
 8003874:	687b      	ldr	r3, [r7, #4]
 8003876:	681b      	ldr	r3, [r3, #0]
 8003878:	691b      	ldr	r3, [r3, #16]
 800387a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800387e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003882:	d10e      	bne.n	80038a2 <HAL_TIM_IRQHandler+0x1de>
 8003884:	687b      	ldr	r3, [r7, #4]
 8003886:	681b      	ldr	r3, [r3, #0]
 8003888:	68db      	ldr	r3, [r3, #12]
 800388a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800388e:	2b80      	cmp	r3, #128	; 0x80
 8003890:	d107      	bne.n	80038a2 <HAL_TIM_IRQHandler+0x1de>
 8003892:	687b      	ldr	r3, [r7, #4]
 8003894:	681b      	ldr	r3, [r3, #0]
 8003896:	f46f 7280 	mvn.w	r2, #256	; 0x100
 800389a:	611a      	str	r2, [r3, #16]
 800389c:	6878      	ldr	r0, [r7, #4]
 800389e:	f000 f90b 	bl	8003ab8 <HAL_TIMEx_Break2Callback>
 80038a2:	687b      	ldr	r3, [r7, #4]
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	691b      	ldr	r3, [r3, #16]
 80038a8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80038ac:	2b40      	cmp	r3, #64	; 0x40
 80038ae:	d10e      	bne.n	80038ce <HAL_TIM_IRQHandler+0x20a>
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	681b      	ldr	r3, [r3, #0]
 80038b4:	68db      	ldr	r3, [r3, #12]
 80038b6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80038ba:	2b40      	cmp	r3, #64	; 0x40
 80038bc:	d107      	bne.n	80038ce <HAL_TIM_IRQHandler+0x20a>
 80038be:	687b      	ldr	r3, [r7, #4]
 80038c0:	681b      	ldr	r3, [r3, #0]
 80038c2:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80038c6:	611a      	str	r2, [r3, #16]
 80038c8:	6878      	ldr	r0, [r7, #4]
 80038ca:	f000 f838 	bl	800393e <HAL_TIM_TriggerCallback>
 80038ce:	687b      	ldr	r3, [r7, #4]
 80038d0:	681b      	ldr	r3, [r3, #0]
 80038d2:	691b      	ldr	r3, [r3, #16]
 80038d4:	f003 0320 	and.w	r3, r3, #32
 80038d8:	2b20      	cmp	r3, #32
 80038da:	d10e      	bne.n	80038fa <HAL_TIM_IRQHandler+0x236>
 80038dc:	687b      	ldr	r3, [r7, #4]
 80038de:	681b      	ldr	r3, [r3, #0]
 80038e0:	68db      	ldr	r3, [r3, #12]
 80038e2:	f003 0320 	and.w	r3, r3, #32
 80038e6:	2b20      	cmp	r3, #32
 80038e8:	d107      	bne.n	80038fa <HAL_TIM_IRQHandler+0x236>
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	681b      	ldr	r3, [r3, #0]
 80038ee:	f06f 0220 	mvn.w	r2, #32
 80038f2:	611a      	str	r2, [r3, #16]
 80038f4:	6878      	ldr	r0, [r7, #4]
 80038f6:	f000 f8cb 	bl	8003a90 <HAL_TIMEx_CommutCallback>
 80038fa:	bf00      	nop
 80038fc:	3708      	adds	r7, #8
 80038fe:	46bd      	mov	sp, r7
 8003900:	bd80      	pop	{r7, pc}

08003902 <HAL_TIM_OC_DelayElapsedCallback>:
 8003902:	b480      	push	{r7}
 8003904:	b083      	sub	sp, #12
 8003906:	af00      	add	r7, sp, #0
 8003908:	6078      	str	r0, [r7, #4]
 800390a:	bf00      	nop
 800390c:	370c      	adds	r7, #12
 800390e:	46bd      	mov	sp, r7
 8003910:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003914:	4770      	bx	lr

08003916 <HAL_TIM_IC_CaptureCallback>:
 8003916:	b480      	push	{r7}
 8003918:	b083      	sub	sp, #12
 800391a:	af00      	add	r7, sp, #0
 800391c:	6078      	str	r0, [r7, #4]
 800391e:	bf00      	nop
 8003920:	370c      	adds	r7, #12
 8003922:	46bd      	mov	sp, r7
 8003924:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003928:	4770      	bx	lr

0800392a <HAL_TIM_PWM_PulseFinishedCallback>:
 800392a:	b480      	push	{r7}
 800392c:	b083      	sub	sp, #12
 800392e:	af00      	add	r7, sp, #0
 8003930:	6078      	str	r0, [r7, #4]
 8003932:	bf00      	nop
 8003934:	370c      	adds	r7, #12
 8003936:	46bd      	mov	sp, r7
 8003938:	f85d 7b04 	ldr.w	r7, [sp], #4
 800393c:	4770      	bx	lr

0800393e <HAL_TIM_TriggerCallback>:
 800393e:	b480      	push	{r7}
 8003940:	b083      	sub	sp, #12
 8003942:	af00      	add	r7, sp, #0
 8003944:	6078      	str	r0, [r7, #4]
 8003946:	bf00      	nop
 8003948:	370c      	adds	r7, #12
 800394a:	46bd      	mov	sp, r7
 800394c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003950:	4770      	bx	lr
	...

08003954 <TIM_Base_SetConfig>:
 8003954:	b480      	push	{r7}
 8003956:	b085      	sub	sp, #20
 8003958:	af00      	add	r7, sp, #0
 800395a:	6078      	str	r0, [r7, #4]
 800395c:	6039      	str	r1, [r7, #0]
 800395e:	687b      	ldr	r3, [r7, #4]
 8003960:	681b      	ldr	r3, [r3, #0]
 8003962:	60fb      	str	r3, [r7, #12]
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	4a42      	ldr	r2, [pc, #264]	; (8003a70 <TIM_Base_SetConfig+0x11c>)
 8003968:	4293      	cmp	r3, r2
 800396a:	d013      	beq.n	8003994 <TIM_Base_SetConfig+0x40>
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003972:	d00f      	beq.n	8003994 <TIM_Base_SetConfig+0x40>
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	4a3f      	ldr	r2, [pc, #252]	; (8003a74 <TIM_Base_SetConfig+0x120>)
 8003978:	4293      	cmp	r3, r2
 800397a:	d00b      	beq.n	8003994 <TIM_Base_SetConfig+0x40>
 800397c:	687b      	ldr	r3, [r7, #4]
 800397e:	4a3e      	ldr	r2, [pc, #248]	; (8003a78 <TIM_Base_SetConfig+0x124>)
 8003980:	4293      	cmp	r3, r2
 8003982:	d007      	beq.n	8003994 <TIM_Base_SetConfig+0x40>
 8003984:	687b      	ldr	r3, [r7, #4]
 8003986:	4a3d      	ldr	r2, [pc, #244]	; (8003a7c <TIM_Base_SetConfig+0x128>)
 8003988:	4293      	cmp	r3, r2
 800398a:	d003      	beq.n	8003994 <TIM_Base_SetConfig+0x40>
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	4a3c      	ldr	r2, [pc, #240]	; (8003a80 <TIM_Base_SetConfig+0x12c>)
 8003990:	4293      	cmp	r3, r2
 8003992:	d108      	bne.n	80039a6 <TIM_Base_SetConfig+0x52>
 8003994:	68fb      	ldr	r3, [r7, #12]
 8003996:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800399a:	60fb      	str	r3, [r7, #12]
 800399c:	683b      	ldr	r3, [r7, #0]
 800399e:	685b      	ldr	r3, [r3, #4]
 80039a0:	68fa      	ldr	r2, [r7, #12]
 80039a2:	4313      	orrs	r3, r2
 80039a4:	60fb      	str	r3, [r7, #12]
 80039a6:	687b      	ldr	r3, [r7, #4]
 80039a8:	4a31      	ldr	r2, [pc, #196]	; (8003a70 <TIM_Base_SetConfig+0x11c>)
 80039aa:	4293      	cmp	r3, r2
 80039ac:	d01f      	beq.n	80039ee <TIM_Base_SetConfig+0x9a>
 80039ae:	687b      	ldr	r3, [r7, #4]
 80039b0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80039b4:	d01b      	beq.n	80039ee <TIM_Base_SetConfig+0x9a>
 80039b6:	687b      	ldr	r3, [r7, #4]
 80039b8:	4a2e      	ldr	r2, [pc, #184]	; (8003a74 <TIM_Base_SetConfig+0x120>)
 80039ba:	4293      	cmp	r3, r2
 80039bc:	d017      	beq.n	80039ee <TIM_Base_SetConfig+0x9a>
 80039be:	687b      	ldr	r3, [r7, #4]
 80039c0:	4a2d      	ldr	r2, [pc, #180]	; (8003a78 <TIM_Base_SetConfig+0x124>)
 80039c2:	4293      	cmp	r3, r2
 80039c4:	d013      	beq.n	80039ee <TIM_Base_SetConfig+0x9a>
 80039c6:	687b      	ldr	r3, [r7, #4]
 80039c8:	4a2c      	ldr	r2, [pc, #176]	; (8003a7c <TIM_Base_SetConfig+0x128>)
 80039ca:	4293      	cmp	r3, r2
 80039cc:	d00f      	beq.n	80039ee <TIM_Base_SetConfig+0x9a>
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	4a2c      	ldr	r2, [pc, #176]	; (8003a84 <TIM_Base_SetConfig+0x130>)
 80039d2:	4293      	cmp	r3, r2
 80039d4:	d00b      	beq.n	80039ee <TIM_Base_SetConfig+0x9a>
 80039d6:	687b      	ldr	r3, [r7, #4]
 80039d8:	4a2b      	ldr	r2, [pc, #172]	; (8003a88 <TIM_Base_SetConfig+0x134>)
 80039da:	4293      	cmp	r3, r2
 80039dc:	d007      	beq.n	80039ee <TIM_Base_SetConfig+0x9a>
 80039de:	687b      	ldr	r3, [r7, #4]
 80039e0:	4a2a      	ldr	r2, [pc, #168]	; (8003a8c <TIM_Base_SetConfig+0x138>)
 80039e2:	4293      	cmp	r3, r2
 80039e4:	d003      	beq.n	80039ee <TIM_Base_SetConfig+0x9a>
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	4a25      	ldr	r2, [pc, #148]	; (8003a80 <TIM_Base_SetConfig+0x12c>)
 80039ea:	4293      	cmp	r3, r2
 80039ec:	d108      	bne.n	8003a00 <TIM_Base_SetConfig+0xac>
 80039ee:	68fb      	ldr	r3, [r7, #12]
 80039f0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80039f4:	60fb      	str	r3, [r7, #12]
 80039f6:	683b      	ldr	r3, [r7, #0]
 80039f8:	68db      	ldr	r3, [r3, #12]
 80039fa:	68fa      	ldr	r2, [r7, #12]
 80039fc:	4313      	orrs	r3, r2
 80039fe:	60fb      	str	r3, [r7, #12]
 8003a00:	68fb      	ldr	r3, [r7, #12]
 8003a02:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8003a06:	683b      	ldr	r3, [r7, #0]
 8003a08:	695b      	ldr	r3, [r3, #20]
 8003a0a:	4313      	orrs	r3, r2
 8003a0c:	60fb      	str	r3, [r7, #12]
 8003a0e:	687b      	ldr	r3, [r7, #4]
 8003a10:	68fa      	ldr	r2, [r7, #12]
 8003a12:	601a      	str	r2, [r3, #0]
 8003a14:	683b      	ldr	r3, [r7, #0]
 8003a16:	689a      	ldr	r2, [r3, #8]
 8003a18:	687b      	ldr	r3, [r7, #4]
 8003a1a:	62da      	str	r2, [r3, #44]	; 0x2c
 8003a1c:	683b      	ldr	r3, [r7, #0]
 8003a1e:	681a      	ldr	r2, [r3, #0]
 8003a20:	687b      	ldr	r3, [r7, #4]
 8003a22:	629a      	str	r2, [r3, #40]	; 0x28
 8003a24:	687b      	ldr	r3, [r7, #4]
 8003a26:	4a12      	ldr	r2, [pc, #72]	; (8003a70 <TIM_Base_SetConfig+0x11c>)
 8003a28:	4293      	cmp	r3, r2
 8003a2a:	d013      	beq.n	8003a54 <TIM_Base_SetConfig+0x100>
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	4a13      	ldr	r2, [pc, #76]	; (8003a7c <TIM_Base_SetConfig+0x128>)
 8003a30:	4293      	cmp	r3, r2
 8003a32:	d00f      	beq.n	8003a54 <TIM_Base_SetConfig+0x100>
 8003a34:	687b      	ldr	r3, [r7, #4]
 8003a36:	4a13      	ldr	r2, [pc, #76]	; (8003a84 <TIM_Base_SetConfig+0x130>)
 8003a38:	4293      	cmp	r3, r2
 8003a3a:	d00b      	beq.n	8003a54 <TIM_Base_SetConfig+0x100>
 8003a3c:	687b      	ldr	r3, [r7, #4]
 8003a3e:	4a12      	ldr	r2, [pc, #72]	; (8003a88 <TIM_Base_SetConfig+0x134>)
 8003a40:	4293      	cmp	r3, r2
 8003a42:	d007      	beq.n	8003a54 <TIM_Base_SetConfig+0x100>
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	4a11      	ldr	r2, [pc, #68]	; (8003a8c <TIM_Base_SetConfig+0x138>)
 8003a48:	4293      	cmp	r3, r2
 8003a4a:	d003      	beq.n	8003a54 <TIM_Base_SetConfig+0x100>
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	4a0c      	ldr	r2, [pc, #48]	; (8003a80 <TIM_Base_SetConfig+0x12c>)
 8003a50:	4293      	cmp	r3, r2
 8003a52:	d103      	bne.n	8003a5c <TIM_Base_SetConfig+0x108>
 8003a54:	683b      	ldr	r3, [r7, #0]
 8003a56:	691a      	ldr	r2, [r3, #16]
 8003a58:	687b      	ldr	r3, [r7, #4]
 8003a5a:	631a      	str	r2, [r3, #48]	; 0x30
 8003a5c:	687b      	ldr	r3, [r7, #4]
 8003a5e:	2201      	movs	r2, #1
 8003a60:	615a      	str	r2, [r3, #20]
 8003a62:	bf00      	nop
 8003a64:	3714      	adds	r7, #20
 8003a66:	46bd      	mov	sp, r7
 8003a68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a6c:	4770      	bx	lr
 8003a6e:	bf00      	nop
 8003a70:	40012c00 	.word	0x40012c00
 8003a74:	40000400 	.word	0x40000400
 8003a78:	40000800 	.word	0x40000800
 8003a7c:	40013400 	.word	0x40013400
 8003a80:	40015000 	.word	0x40015000
 8003a84:	40014000 	.word	0x40014000
 8003a88:	40014400 	.word	0x40014400
 8003a8c:	40014800 	.word	0x40014800

08003a90 <HAL_TIMEx_CommutCallback>:
 8003a90:	b480      	push	{r7}
 8003a92:	b083      	sub	sp, #12
 8003a94:	af00      	add	r7, sp, #0
 8003a96:	6078      	str	r0, [r7, #4]
 8003a98:	bf00      	nop
 8003a9a:	370c      	adds	r7, #12
 8003a9c:	46bd      	mov	sp, r7
 8003a9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003aa2:	4770      	bx	lr

08003aa4 <HAL_TIMEx_BreakCallback>:
 8003aa4:	b480      	push	{r7}
 8003aa6:	b083      	sub	sp, #12
 8003aa8:	af00      	add	r7, sp, #0
 8003aaa:	6078      	str	r0, [r7, #4]
 8003aac:	bf00      	nop
 8003aae:	370c      	adds	r7, #12
 8003ab0:	46bd      	mov	sp, r7
 8003ab2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ab6:	4770      	bx	lr

08003ab8 <HAL_TIMEx_Break2Callback>:
 8003ab8:	b480      	push	{r7}
 8003aba:	b083      	sub	sp, #12
 8003abc:	af00      	add	r7, sp, #0
 8003abe:	6078      	str	r0, [r7, #4]
 8003ac0:	bf00      	nop
 8003ac2:	370c      	adds	r7, #12
 8003ac4:	46bd      	mov	sp, r7
 8003ac6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003aca:	4770      	bx	lr

08003acc <HAL_UART_Init>:
 8003acc:	b580      	push	{r7, lr}
 8003ace:	b082      	sub	sp, #8
 8003ad0:	af00      	add	r7, sp, #0
 8003ad2:	6078      	str	r0, [r7, #4]
 8003ad4:	687b      	ldr	r3, [r7, #4]
 8003ad6:	2b00      	cmp	r3, #0
 8003ad8:	d101      	bne.n	8003ade <HAL_UART_Init+0x12>
 8003ada:	2301      	movs	r3, #1
 8003adc:	e040      	b.n	8003b60 <HAL_UART_Init+0x94>
 8003ade:	687b      	ldr	r3, [r7, #4]
 8003ae0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8003ae2:	2b00      	cmp	r3, #0
 8003ae4:	d106      	bne.n	8003af4 <HAL_UART_Init+0x28>
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	2200      	movs	r2, #0
 8003aea:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8003aee:	6878      	ldr	r0, [r7, #4]
 8003af0:	f7fd fd72 	bl	80015d8 <HAL_UART_MspInit>
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	2224      	movs	r2, #36	; 0x24
 8003af8:	679a      	str	r2, [r3, #120]	; 0x78
 8003afa:	687b      	ldr	r3, [r7, #4]
 8003afc:	681b      	ldr	r3, [r3, #0]
 8003afe:	681a      	ldr	r2, [r3, #0]
 8003b00:	687b      	ldr	r3, [r7, #4]
 8003b02:	681b      	ldr	r3, [r3, #0]
 8003b04:	f022 0201 	bic.w	r2, r2, #1
 8003b08:	601a      	str	r2, [r3, #0]
 8003b0a:	6878      	ldr	r0, [r7, #4]
 8003b0c:	f000 f8c0 	bl	8003c90 <UART_SetConfig>
 8003b10:	4603      	mov	r3, r0
 8003b12:	2b01      	cmp	r3, #1
 8003b14:	d101      	bne.n	8003b1a <HAL_UART_Init+0x4e>
 8003b16:	2301      	movs	r3, #1
 8003b18:	e022      	b.n	8003b60 <HAL_UART_Init+0x94>
 8003b1a:	687b      	ldr	r3, [r7, #4]
 8003b1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b1e:	2b00      	cmp	r3, #0
 8003b20:	d002      	beq.n	8003b28 <HAL_UART_Init+0x5c>
 8003b22:	6878      	ldr	r0, [r7, #4]
 8003b24:	f000 fa88 	bl	8004038 <UART_AdvFeatureConfig>
 8003b28:	687b      	ldr	r3, [r7, #4]
 8003b2a:	681b      	ldr	r3, [r3, #0]
 8003b2c:	685a      	ldr	r2, [r3, #4]
 8003b2e:	687b      	ldr	r3, [r7, #4]
 8003b30:	681b      	ldr	r3, [r3, #0]
 8003b32:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003b36:	605a      	str	r2, [r3, #4]
 8003b38:	687b      	ldr	r3, [r7, #4]
 8003b3a:	681b      	ldr	r3, [r3, #0]
 8003b3c:	689a      	ldr	r2, [r3, #8]
 8003b3e:	687b      	ldr	r3, [r7, #4]
 8003b40:	681b      	ldr	r3, [r3, #0]
 8003b42:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003b46:	609a      	str	r2, [r3, #8]
 8003b48:	687b      	ldr	r3, [r7, #4]
 8003b4a:	681b      	ldr	r3, [r3, #0]
 8003b4c:	681a      	ldr	r2, [r3, #0]
 8003b4e:	687b      	ldr	r3, [r7, #4]
 8003b50:	681b      	ldr	r3, [r3, #0]
 8003b52:	f042 0201 	orr.w	r2, r2, #1
 8003b56:	601a      	str	r2, [r3, #0]
 8003b58:	6878      	ldr	r0, [r7, #4]
 8003b5a:	f000 fb0f 	bl	800417c <UART_CheckIdleState>
 8003b5e:	4603      	mov	r3, r0
 8003b60:	4618      	mov	r0, r3
 8003b62:	3708      	adds	r7, #8
 8003b64:	46bd      	mov	sp, r7
 8003b66:	bd80      	pop	{r7, pc}

08003b68 <HAL_UART_Transmit>:
 8003b68:	b580      	push	{r7, lr}
 8003b6a:	b08a      	sub	sp, #40	; 0x28
 8003b6c:	af02      	add	r7, sp, #8
 8003b6e:	60f8      	str	r0, [r7, #12]
 8003b70:	60b9      	str	r1, [r7, #8]
 8003b72:	603b      	str	r3, [r7, #0]
 8003b74:	4613      	mov	r3, r2
 8003b76:	80fb      	strh	r3, [r7, #6]
 8003b78:	68fb      	ldr	r3, [r7, #12]
 8003b7a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8003b7c:	2b20      	cmp	r3, #32
 8003b7e:	f040 8082 	bne.w	8003c86 <HAL_UART_Transmit+0x11e>
 8003b82:	68bb      	ldr	r3, [r7, #8]
 8003b84:	2b00      	cmp	r3, #0
 8003b86:	d002      	beq.n	8003b8e <HAL_UART_Transmit+0x26>
 8003b88:	88fb      	ldrh	r3, [r7, #6]
 8003b8a:	2b00      	cmp	r3, #0
 8003b8c:	d101      	bne.n	8003b92 <HAL_UART_Transmit+0x2a>
 8003b8e:	2301      	movs	r3, #1
 8003b90:	e07a      	b.n	8003c88 <HAL_UART_Transmit+0x120>
 8003b92:	68fb      	ldr	r3, [r7, #12]
 8003b94:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 8003b98:	2b01      	cmp	r3, #1
 8003b9a:	d101      	bne.n	8003ba0 <HAL_UART_Transmit+0x38>
 8003b9c:	2302      	movs	r3, #2
 8003b9e:	e073      	b.n	8003c88 <HAL_UART_Transmit+0x120>
 8003ba0:	68fb      	ldr	r3, [r7, #12]
 8003ba2:	2201      	movs	r2, #1
 8003ba4:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8003ba8:	68fb      	ldr	r3, [r7, #12]
 8003baa:	2200      	movs	r2, #0
 8003bac:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8003bb0:	68fb      	ldr	r3, [r7, #12]
 8003bb2:	2221      	movs	r2, #33	; 0x21
 8003bb4:	679a      	str	r2, [r3, #120]	; 0x78
 8003bb6:	f7fd fe65 	bl	8001884 <HAL_GetTick>
 8003bba:	6178      	str	r0, [r7, #20]
 8003bbc:	68fb      	ldr	r3, [r7, #12]
 8003bbe:	88fa      	ldrh	r2, [r7, #6]
 8003bc0:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 8003bc4:	68fb      	ldr	r3, [r7, #12]
 8003bc6:	88fa      	ldrh	r2, [r7, #6]
 8003bc8:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8003bcc:	68fb      	ldr	r3, [r7, #12]
 8003bce:	689b      	ldr	r3, [r3, #8]
 8003bd0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003bd4:	d108      	bne.n	8003be8 <HAL_UART_Transmit+0x80>
 8003bd6:	68fb      	ldr	r3, [r7, #12]
 8003bd8:	691b      	ldr	r3, [r3, #16]
 8003bda:	2b00      	cmp	r3, #0
 8003bdc:	d104      	bne.n	8003be8 <HAL_UART_Transmit+0x80>
 8003bde:	2300      	movs	r3, #0
 8003be0:	61fb      	str	r3, [r7, #28]
 8003be2:	68bb      	ldr	r3, [r7, #8]
 8003be4:	61bb      	str	r3, [r7, #24]
 8003be6:	e003      	b.n	8003bf0 <HAL_UART_Transmit+0x88>
 8003be8:	68bb      	ldr	r3, [r7, #8]
 8003bea:	61fb      	str	r3, [r7, #28]
 8003bec:	2300      	movs	r3, #0
 8003bee:	61bb      	str	r3, [r7, #24]
 8003bf0:	68fb      	ldr	r3, [r7, #12]
 8003bf2:	2200      	movs	r2, #0
 8003bf4:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8003bf8:	e02d      	b.n	8003c56 <HAL_UART_Transmit+0xee>
 8003bfa:	683b      	ldr	r3, [r7, #0]
 8003bfc:	9300      	str	r3, [sp, #0]
 8003bfe:	697b      	ldr	r3, [r7, #20]
 8003c00:	2200      	movs	r2, #0
 8003c02:	2180      	movs	r1, #128	; 0x80
 8003c04:	68f8      	ldr	r0, [r7, #12]
 8003c06:	f000 fb02 	bl	800420e <UART_WaitOnFlagUntilTimeout>
 8003c0a:	4603      	mov	r3, r0
 8003c0c:	2b00      	cmp	r3, #0
 8003c0e:	d001      	beq.n	8003c14 <HAL_UART_Transmit+0xac>
 8003c10:	2303      	movs	r3, #3
 8003c12:	e039      	b.n	8003c88 <HAL_UART_Transmit+0x120>
 8003c14:	69fb      	ldr	r3, [r7, #28]
 8003c16:	2b00      	cmp	r3, #0
 8003c18:	d10b      	bne.n	8003c32 <HAL_UART_Transmit+0xca>
 8003c1a:	69bb      	ldr	r3, [r7, #24]
 8003c1c:	881a      	ldrh	r2, [r3, #0]
 8003c1e:	68fb      	ldr	r3, [r7, #12]
 8003c20:	681b      	ldr	r3, [r3, #0]
 8003c22:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003c26:	b292      	uxth	r2, r2
 8003c28:	851a      	strh	r2, [r3, #40]	; 0x28
 8003c2a:	69bb      	ldr	r3, [r7, #24]
 8003c2c:	3302      	adds	r3, #2
 8003c2e:	61bb      	str	r3, [r7, #24]
 8003c30:	e008      	b.n	8003c44 <HAL_UART_Transmit+0xdc>
 8003c32:	69fb      	ldr	r3, [r7, #28]
 8003c34:	781a      	ldrb	r2, [r3, #0]
 8003c36:	68fb      	ldr	r3, [r7, #12]
 8003c38:	681b      	ldr	r3, [r3, #0]
 8003c3a:	b292      	uxth	r2, r2
 8003c3c:	851a      	strh	r2, [r3, #40]	; 0x28
 8003c3e:	69fb      	ldr	r3, [r7, #28]
 8003c40:	3301      	adds	r3, #1
 8003c42:	61fb      	str	r3, [r7, #28]
 8003c44:	68fb      	ldr	r3, [r7, #12]
 8003c46:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8003c4a:	b29b      	uxth	r3, r3
 8003c4c:	3b01      	subs	r3, #1
 8003c4e:	b29a      	uxth	r2, r3
 8003c50:	68fb      	ldr	r3, [r7, #12]
 8003c52:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8003c56:	68fb      	ldr	r3, [r7, #12]
 8003c58:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8003c5c:	b29b      	uxth	r3, r3
 8003c5e:	2b00      	cmp	r3, #0
 8003c60:	d1cb      	bne.n	8003bfa <HAL_UART_Transmit+0x92>
 8003c62:	683b      	ldr	r3, [r7, #0]
 8003c64:	9300      	str	r3, [sp, #0]
 8003c66:	697b      	ldr	r3, [r7, #20]
 8003c68:	2200      	movs	r2, #0
 8003c6a:	2140      	movs	r1, #64	; 0x40
 8003c6c:	68f8      	ldr	r0, [r7, #12]
 8003c6e:	f000 face 	bl	800420e <UART_WaitOnFlagUntilTimeout>
 8003c72:	4603      	mov	r3, r0
 8003c74:	2b00      	cmp	r3, #0
 8003c76:	d001      	beq.n	8003c7c <HAL_UART_Transmit+0x114>
 8003c78:	2303      	movs	r3, #3
 8003c7a:	e005      	b.n	8003c88 <HAL_UART_Transmit+0x120>
 8003c7c:	68fb      	ldr	r3, [r7, #12]
 8003c7e:	2220      	movs	r2, #32
 8003c80:	679a      	str	r2, [r3, #120]	; 0x78
 8003c82:	2300      	movs	r3, #0
 8003c84:	e000      	b.n	8003c88 <HAL_UART_Transmit+0x120>
 8003c86:	2302      	movs	r3, #2
 8003c88:	4618      	mov	r0, r3
 8003c8a:	3720      	adds	r7, #32
 8003c8c:	46bd      	mov	sp, r7
 8003c8e:	bd80      	pop	{r7, pc}

08003c90 <UART_SetConfig>:
 8003c90:	b580      	push	{r7, lr}
 8003c92:	b088      	sub	sp, #32
 8003c94:	af00      	add	r7, sp, #0
 8003c96:	6078      	str	r0, [r7, #4]
 8003c98:	2300      	movs	r3, #0
 8003c9a:	77bb      	strb	r3, [r7, #30]
 8003c9c:	687b      	ldr	r3, [r7, #4]
 8003c9e:	689a      	ldr	r2, [r3, #8]
 8003ca0:	687b      	ldr	r3, [r7, #4]
 8003ca2:	691b      	ldr	r3, [r3, #16]
 8003ca4:	431a      	orrs	r2, r3
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	695b      	ldr	r3, [r3, #20]
 8003caa:	431a      	orrs	r2, r3
 8003cac:	687b      	ldr	r3, [r7, #4]
 8003cae:	69db      	ldr	r3, [r3, #28]
 8003cb0:	4313      	orrs	r3, r2
 8003cb2:	617b      	str	r3, [r7, #20]
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	681b      	ldr	r3, [r3, #0]
 8003cb8:	681a      	ldr	r2, [r3, #0]
 8003cba:	4baa      	ldr	r3, [pc, #680]	; (8003f64 <UART_SetConfig+0x2d4>)
 8003cbc:	4013      	ands	r3, r2
 8003cbe:	687a      	ldr	r2, [r7, #4]
 8003cc0:	6812      	ldr	r2, [r2, #0]
 8003cc2:	6979      	ldr	r1, [r7, #20]
 8003cc4:	430b      	orrs	r3, r1
 8003cc6:	6013      	str	r3, [r2, #0]
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	681b      	ldr	r3, [r3, #0]
 8003ccc:	685b      	ldr	r3, [r3, #4]
 8003cce:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8003cd2:	687b      	ldr	r3, [r7, #4]
 8003cd4:	68da      	ldr	r2, [r3, #12]
 8003cd6:	687b      	ldr	r3, [r7, #4]
 8003cd8:	681b      	ldr	r3, [r3, #0]
 8003cda:	430a      	orrs	r2, r1
 8003cdc:	605a      	str	r2, [r3, #4]
 8003cde:	687b      	ldr	r3, [r7, #4]
 8003ce0:	699b      	ldr	r3, [r3, #24]
 8003ce2:	617b      	str	r3, [r7, #20]
 8003ce4:	687b      	ldr	r3, [r7, #4]
 8003ce6:	6a1b      	ldr	r3, [r3, #32]
 8003ce8:	697a      	ldr	r2, [r7, #20]
 8003cea:	4313      	orrs	r3, r2
 8003cec:	617b      	str	r3, [r7, #20]
 8003cee:	687b      	ldr	r3, [r7, #4]
 8003cf0:	681b      	ldr	r3, [r3, #0]
 8003cf2:	689b      	ldr	r3, [r3, #8]
 8003cf4:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 8003cf8:	687b      	ldr	r3, [r7, #4]
 8003cfa:	681b      	ldr	r3, [r3, #0]
 8003cfc:	697a      	ldr	r2, [r7, #20]
 8003cfe:	430a      	orrs	r2, r1
 8003d00:	609a      	str	r2, [r3, #8]
 8003d02:	687b      	ldr	r3, [r7, #4]
 8003d04:	681b      	ldr	r3, [r3, #0]
 8003d06:	4a98      	ldr	r2, [pc, #608]	; (8003f68 <UART_SetConfig+0x2d8>)
 8003d08:	4293      	cmp	r3, r2
 8003d0a:	d121      	bne.n	8003d50 <UART_SetConfig+0xc0>
 8003d0c:	4b97      	ldr	r3, [pc, #604]	; (8003f6c <UART_SetConfig+0x2dc>)
 8003d0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003d10:	f003 0303 	and.w	r3, r3, #3
 8003d14:	2b03      	cmp	r3, #3
 8003d16:	d817      	bhi.n	8003d48 <UART_SetConfig+0xb8>
 8003d18:	a201      	add	r2, pc, #4	; (adr r2, 8003d20 <UART_SetConfig+0x90>)
 8003d1a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003d1e:	bf00      	nop
 8003d20:	08003d31 	.word	0x08003d31
 8003d24:	08003d3d 	.word	0x08003d3d
 8003d28:	08003d43 	.word	0x08003d43
 8003d2c:	08003d37 	.word	0x08003d37
 8003d30:	2301      	movs	r3, #1
 8003d32:	77fb      	strb	r3, [r7, #31]
 8003d34:	e0b2      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003d36:	2302      	movs	r3, #2
 8003d38:	77fb      	strb	r3, [r7, #31]
 8003d3a:	e0af      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003d3c:	2304      	movs	r3, #4
 8003d3e:	77fb      	strb	r3, [r7, #31]
 8003d40:	e0ac      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003d42:	2308      	movs	r3, #8
 8003d44:	77fb      	strb	r3, [r7, #31]
 8003d46:	e0a9      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003d48:	2310      	movs	r3, #16
 8003d4a:	77fb      	strb	r3, [r7, #31]
 8003d4c:	bf00      	nop
 8003d4e:	e0a5      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003d50:	687b      	ldr	r3, [r7, #4]
 8003d52:	681b      	ldr	r3, [r3, #0]
 8003d54:	4a86      	ldr	r2, [pc, #536]	; (8003f70 <UART_SetConfig+0x2e0>)
 8003d56:	4293      	cmp	r3, r2
 8003d58:	d123      	bne.n	8003da2 <UART_SetConfig+0x112>
 8003d5a:	4b84      	ldr	r3, [pc, #528]	; (8003f6c <UART_SetConfig+0x2dc>)
 8003d5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003d5e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003d62:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003d66:	d012      	beq.n	8003d8e <UART_SetConfig+0xfe>
 8003d68:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003d6c:	d802      	bhi.n	8003d74 <UART_SetConfig+0xe4>
 8003d6e:	2b00      	cmp	r3, #0
 8003d70:	d007      	beq.n	8003d82 <UART_SetConfig+0xf2>
 8003d72:	e012      	b.n	8003d9a <UART_SetConfig+0x10a>
 8003d74:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8003d78:	d00c      	beq.n	8003d94 <UART_SetConfig+0x104>
 8003d7a:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8003d7e:	d003      	beq.n	8003d88 <UART_SetConfig+0xf8>
 8003d80:	e00b      	b.n	8003d9a <UART_SetConfig+0x10a>
 8003d82:	2300      	movs	r3, #0
 8003d84:	77fb      	strb	r3, [r7, #31]
 8003d86:	e089      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003d88:	2302      	movs	r3, #2
 8003d8a:	77fb      	strb	r3, [r7, #31]
 8003d8c:	e086      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003d8e:	2304      	movs	r3, #4
 8003d90:	77fb      	strb	r3, [r7, #31]
 8003d92:	e083      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003d94:	2308      	movs	r3, #8
 8003d96:	77fb      	strb	r3, [r7, #31]
 8003d98:	e080      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003d9a:	2310      	movs	r3, #16
 8003d9c:	77fb      	strb	r3, [r7, #31]
 8003d9e:	bf00      	nop
 8003da0:	e07c      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003da2:	687b      	ldr	r3, [r7, #4]
 8003da4:	681b      	ldr	r3, [r3, #0]
 8003da6:	4a73      	ldr	r2, [pc, #460]	; (8003f74 <UART_SetConfig+0x2e4>)
 8003da8:	4293      	cmp	r3, r2
 8003daa:	d123      	bne.n	8003df4 <UART_SetConfig+0x164>
 8003dac:	4b6f      	ldr	r3, [pc, #444]	; (8003f6c <UART_SetConfig+0x2dc>)
 8003dae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003db0:	f403 2340 	and.w	r3, r3, #786432	; 0xc0000
 8003db4:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8003db8:	d012      	beq.n	8003de0 <UART_SetConfig+0x150>
 8003dba:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8003dbe:	d802      	bhi.n	8003dc6 <UART_SetConfig+0x136>
 8003dc0:	2b00      	cmp	r3, #0
 8003dc2:	d007      	beq.n	8003dd4 <UART_SetConfig+0x144>
 8003dc4:	e012      	b.n	8003dec <UART_SetConfig+0x15c>
 8003dc6:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 8003dca:	d00c      	beq.n	8003de6 <UART_SetConfig+0x156>
 8003dcc:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 8003dd0:	d003      	beq.n	8003dda <UART_SetConfig+0x14a>
 8003dd2:	e00b      	b.n	8003dec <UART_SetConfig+0x15c>
 8003dd4:	2300      	movs	r3, #0
 8003dd6:	77fb      	strb	r3, [r7, #31]
 8003dd8:	e060      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003dda:	2302      	movs	r3, #2
 8003ddc:	77fb      	strb	r3, [r7, #31]
 8003dde:	e05d      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003de0:	2304      	movs	r3, #4
 8003de2:	77fb      	strb	r3, [r7, #31]
 8003de4:	e05a      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003de6:	2308      	movs	r3, #8
 8003de8:	77fb      	strb	r3, [r7, #31]
 8003dea:	e057      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003dec:	2310      	movs	r3, #16
 8003dee:	77fb      	strb	r3, [r7, #31]
 8003df0:	bf00      	nop
 8003df2:	e053      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003df4:	687b      	ldr	r3, [r7, #4]
 8003df6:	681b      	ldr	r3, [r3, #0]
 8003df8:	4a5f      	ldr	r2, [pc, #380]	; (8003f78 <UART_SetConfig+0x2e8>)
 8003dfa:	4293      	cmp	r3, r2
 8003dfc:	d123      	bne.n	8003e46 <UART_SetConfig+0x1b6>
 8003dfe:	4b5b      	ldr	r3, [pc, #364]	; (8003f6c <UART_SetConfig+0x2dc>)
 8003e00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003e02:	f403 1340 	and.w	r3, r3, #3145728	; 0x300000
 8003e06:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8003e0a:	d012      	beq.n	8003e32 <UART_SetConfig+0x1a2>
 8003e0c:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8003e10:	d802      	bhi.n	8003e18 <UART_SetConfig+0x188>
 8003e12:	2b00      	cmp	r3, #0
 8003e14:	d007      	beq.n	8003e26 <UART_SetConfig+0x196>
 8003e16:	e012      	b.n	8003e3e <UART_SetConfig+0x1ae>
 8003e18:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8003e1c:	d00c      	beq.n	8003e38 <UART_SetConfig+0x1a8>
 8003e1e:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8003e22:	d003      	beq.n	8003e2c <UART_SetConfig+0x19c>
 8003e24:	e00b      	b.n	8003e3e <UART_SetConfig+0x1ae>
 8003e26:	2300      	movs	r3, #0
 8003e28:	77fb      	strb	r3, [r7, #31]
 8003e2a:	e037      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003e2c:	2302      	movs	r3, #2
 8003e2e:	77fb      	strb	r3, [r7, #31]
 8003e30:	e034      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003e32:	2304      	movs	r3, #4
 8003e34:	77fb      	strb	r3, [r7, #31]
 8003e36:	e031      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003e38:	2308      	movs	r3, #8
 8003e3a:	77fb      	strb	r3, [r7, #31]
 8003e3c:	e02e      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003e3e:	2310      	movs	r3, #16
 8003e40:	77fb      	strb	r3, [r7, #31]
 8003e42:	bf00      	nop
 8003e44:	e02a      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003e46:	687b      	ldr	r3, [r7, #4]
 8003e48:	681b      	ldr	r3, [r3, #0]
 8003e4a:	4a4c      	ldr	r2, [pc, #304]	; (8003f7c <UART_SetConfig+0x2ec>)
 8003e4c:	4293      	cmp	r3, r2
 8003e4e:	d123      	bne.n	8003e98 <UART_SetConfig+0x208>
 8003e50:	4b46      	ldr	r3, [pc, #280]	; (8003f6c <UART_SetConfig+0x2dc>)
 8003e52:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003e54:	f403 0340 	and.w	r3, r3, #12582912	; 0xc00000
 8003e58:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8003e5c:	d012      	beq.n	8003e84 <UART_SetConfig+0x1f4>
 8003e5e:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8003e62:	d802      	bhi.n	8003e6a <UART_SetConfig+0x1da>
 8003e64:	2b00      	cmp	r3, #0
 8003e66:	d007      	beq.n	8003e78 <UART_SetConfig+0x1e8>
 8003e68:	e012      	b.n	8003e90 <UART_SetConfig+0x200>
 8003e6a:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8003e6e:	d00c      	beq.n	8003e8a <UART_SetConfig+0x1fa>
 8003e70:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 8003e74:	d003      	beq.n	8003e7e <UART_SetConfig+0x1ee>
 8003e76:	e00b      	b.n	8003e90 <UART_SetConfig+0x200>
 8003e78:	2300      	movs	r3, #0
 8003e7a:	77fb      	strb	r3, [r7, #31]
 8003e7c:	e00e      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003e7e:	2302      	movs	r3, #2
 8003e80:	77fb      	strb	r3, [r7, #31]
 8003e82:	e00b      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003e84:	2304      	movs	r3, #4
 8003e86:	77fb      	strb	r3, [r7, #31]
 8003e88:	e008      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003e8a:	2308      	movs	r3, #8
 8003e8c:	77fb      	strb	r3, [r7, #31]
 8003e8e:	e005      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003e90:	2310      	movs	r3, #16
 8003e92:	77fb      	strb	r3, [r7, #31]
 8003e94:	bf00      	nop
 8003e96:	e001      	b.n	8003e9c <UART_SetConfig+0x20c>
 8003e98:	2310      	movs	r3, #16
 8003e9a:	77fb      	strb	r3, [r7, #31]
 8003e9c:	687b      	ldr	r3, [r7, #4]
 8003e9e:	69db      	ldr	r3, [r3, #28]
 8003ea0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003ea4:	d16e      	bne.n	8003f84 <UART_SetConfig+0x2f4>
 8003ea6:	7ffb      	ldrb	r3, [r7, #31]
 8003ea8:	2b08      	cmp	r3, #8
 8003eaa:	d828      	bhi.n	8003efe <UART_SetConfig+0x26e>
 8003eac:	a201      	add	r2, pc, #4	; (adr r2, 8003eb4 <UART_SetConfig+0x224>)
 8003eae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003eb2:	bf00      	nop
 8003eb4:	08003ed9 	.word	0x08003ed9
 8003eb8:	08003ee1 	.word	0x08003ee1
 8003ebc:	08003ee9 	.word	0x08003ee9
 8003ec0:	08003eff 	.word	0x08003eff
 8003ec4:	08003eef 	.word	0x08003eef
 8003ec8:	08003eff 	.word	0x08003eff
 8003ecc:	08003eff 	.word	0x08003eff
 8003ed0:	08003eff 	.word	0x08003eff
 8003ed4:	08003ef7 	.word	0x08003ef7
 8003ed8:	f7ff f88e 	bl	8002ff8 <HAL_RCC_GetPCLK1Freq>
 8003edc:	61b8      	str	r0, [r7, #24]
 8003ede:	e013      	b.n	8003f08 <UART_SetConfig+0x278>
 8003ee0:	f7ff f8ac 	bl	800303c <HAL_RCC_GetPCLK2Freq>
 8003ee4:	61b8      	str	r0, [r7, #24]
 8003ee6:	e00f      	b.n	8003f08 <UART_SetConfig+0x278>
 8003ee8:	4b25      	ldr	r3, [pc, #148]	; (8003f80 <UART_SetConfig+0x2f0>)
 8003eea:	61bb      	str	r3, [r7, #24]
 8003eec:	e00c      	b.n	8003f08 <UART_SetConfig+0x278>
 8003eee:	f7ff f80d 	bl	8002f0c <HAL_RCC_GetSysClockFreq>
 8003ef2:	61b8      	str	r0, [r7, #24]
 8003ef4:	e008      	b.n	8003f08 <UART_SetConfig+0x278>
 8003ef6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8003efa:	61bb      	str	r3, [r7, #24]
 8003efc:	e004      	b.n	8003f08 <UART_SetConfig+0x278>
 8003efe:	2300      	movs	r3, #0
 8003f00:	61bb      	str	r3, [r7, #24]
 8003f02:	2301      	movs	r3, #1
 8003f04:	77bb      	strb	r3, [r7, #30]
 8003f06:	bf00      	nop
 8003f08:	69bb      	ldr	r3, [r7, #24]
 8003f0a:	2b00      	cmp	r3, #0
 8003f0c:	f000 8086 	beq.w	800401c <UART_SetConfig+0x38c>
 8003f10:	69bb      	ldr	r3, [r7, #24]
 8003f12:	005a      	lsls	r2, r3, #1
 8003f14:	687b      	ldr	r3, [r7, #4]
 8003f16:	685b      	ldr	r3, [r3, #4]
 8003f18:	085b      	lsrs	r3, r3, #1
 8003f1a:	441a      	add	r2, r3
 8003f1c:	687b      	ldr	r3, [r7, #4]
 8003f1e:	685b      	ldr	r3, [r3, #4]
 8003f20:	fbb2 f3f3 	udiv	r3, r2, r3
 8003f24:	b29b      	uxth	r3, r3
 8003f26:	613b      	str	r3, [r7, #16]
 8003f28:	693b      	ldr	r3, [r7, #16]
 8003f2a:	2b0f      	cmp	r3, #15
 8003f2c:	d916      	bls.n	8003f5c <UART_SetConfig+0x2cc>
 8003f2e:	693b      	ldr	r3, [r7, #16]
 8003f30:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003f34:	d212      	bcs.n	8003f5c <UART_SetConfig+0x2cc>
 8003f36:	693b      	ldr	r3, [r7, #16]
 8003f38:	b29b      	uxth	r3, r3
 8003f3a:	f023 030f 	bic.w	r3, r3, #15
 8003f3e:	81fb      	strh	r3, [r7, #14]
 8003f40:	693b      	ldr	r3, [r7, #16]
 8003f42:	085b      	lsrs	r3, r3, #1
 8003f44:	b29b      	uxth	r3, r3
 8003f46:	f003 0307 	and.w	r3, r3, #7
 8003f4a:	b29a      	uxth	r2, r3
 8003f4c:	89fb      	ldrh	r3, [r7, #14]
 8003f4e:	4313      	orrs	r3, r2
 8003f50:	81fb      	strh	r3, [r7, #14]
 8003f52:	687b      	ldr	r3, [r7, #4]
 8003f54:	681b      	ldr	r3, [r3, #0]
 8003f56:	89fa      	ldrh	r2, [r7, #14]
 8003f58:	60da      	str	r2, [r3, #12]
 8003f5a:	e05f      	b.n	800401c <UART_SetConfig+0x38c>
 8003f5c:	2301      	movs	r3, #1
 8003f5e:	77bb      	strb	r3, [r7, #30]
 8003f60:	e05c      	b.n	800401c <UART_SetConfig+0x38c>
 8003f62:	bf00      	nop
 8003f64:	efff69f3 	.word	0xefff69f3
 8003f68:	40013800 	.word	0x40013800
 8003f6c:	40021000 	.word	0x40021000
 8003f70:	40004400 	.word	0x40004400
 8003f74:	40004800 	.word	0x40004800
 8003f78:	40004c00 	.word	0x40004c00
 8003f7c:	40005000 	.word	0x40005000
 8003f80:	007a1200 	.word	0x007a1200
 8003f84:	7ffb      	ldrb	r3, [r7, #31]
 8003f86:	2b08      	cmp	r3, #8
 8003f88:	d827      	bhi.n	8003fda <UART_SetConfig+0x34a>
 8003f8a:	a201      	add	r2, pc, #4	; (adr r2, 8003f90 <UART_SetConfig+0x300>)
 8003f8c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f90:	08003fb5 	.word	0x08003fb5
 8003f94:	08003fbd 	.word	0x08003fbd
 8003f98:	08003fc5 	.word	0x08003fc5
 8003f9c:	08003fdb 	.word	0x08003fdb
 8003fa0:	08003fcb 	.word	0x08003fcb
 8003fa4:	08003fdb 	.word	0x08003fdb
 8003fa8:	08003fdb 	.word	0x08003fdb
 8003fac:	08003fdb 	.word	0x08003fdb
 8003fb0:	08003fd3 	.word	0x08003fd3
 8003fb4:	f7ff f820 	bl	8002ff8 <HAL_RCC_GetPCLK1Freq>
 8003fb8:	61b8      	str	r0, [r7, #24]
 8003fba:	e013      	b.n	8003fe4 <UART_SetConfig+0x354>
 8003fbc:	f7ff f83e 	bl	800303c <HAL_RCC_GetPCLK2Freq>
 8003fc0:	61b8      	str	r0, [r7, #24]
 8003fc2:	e00f      	b.n	8003fe4 <UART_SetConfig+0x354>
 8003fc4:	4b1b      	ldr	r3, [pc, #108]	; (8004034 <UART_SetConfig+0x3a4>)
 8003fc6:	61bb      	str	r3, [r7, #24]
 8003fc8:	e00c      	b.n	8003fe4 <UART_SetConfig+0x354>
 8003fca:	f7fe ff9f 	bl	8002f0c <HAL_RCC_GetSysClockFreq>
 8003fce:	61b8      	str	r0, [r7, #24]
 8003fd0:	e008      	b.n	8003fe4 <UART_SetConfig+0x354>
 8003fd2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8003fd6:	61bb      	str	r3, [r7, #24]
 8003fd8:	e004      	b.n	8003fe4 <UART_SetConfig+0x354>
 8003fda:	2300      	movs	r3, #0
 8003fdc:	61bb      	str	r3, [r7, #24]
 8003fde:	2301      	movs	r3, #1
 8003fe0:	77bb      	strb	r3, [r7, #30]
 8003fe2:	bf00      	nop
 8003fe4:	69bb      	ldr	r3, [r7, #24]
 8003fe6:	2b00      	cmp	r3, #0
 8003fe8:	d018      	beq.n	800401c <UART_SetConfig+0x38c>
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	685b      	ldr	r3, [r3, #4]
 8003fee:	085a      	lsrs	r2, r3, #1
 8003ff0:	69bb      	ldr	r3, [r7, #24]
 8003ff2:	441a      	add	r2, r3
 8003ff4:	687b      	ldr	r3, [r7, #4]
 8003ff6:	685b      	ldr	r3, [r3, #4]
 8003ff8:	fbb2 f3f3 	udiv	r3, r2, r3
 8003ffc:	b29b      	uxth	r3, r3
 8003ffe:	613b      	str	r3, [r7, #16]
 8004000:	693b      	ldr	r3, [r7, #16]
 8004002:	2b0f      	cmp	r3, #15
 8004004:	d908      	bls.n	8004018 <UART_SetConfig+0x388>
 8004006:	693b      	ldr	r3, [r7, #16]
 8004008:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800400c:	d204      	bcs.n	8004018 <UART_SetConfig+0x388>
 800400e:	687b      	ldr	r3, [r7, #4]
 8004010:	681b      	ldr	r3, [r3, #0]
 8004012:	693a      	ldr	r2, [r7, #16]
 8004014:	60da      	str	r2, [r3, #12]
 8004016:	e001      	b.n	800401c <UART_SetConfig+0x38c>
 8004018:	2301      	movs	r3, #1
 800401a:	77bb      	strb	r3, [r7, #30]
 800401c:	687b      	ldr	r3, [r7, #4]
 800401e:	2200      	movs	r2, #0
 8004020:	665a      	str	r2, [r3, #100]	; 0x64
 8004022:	687b      	ldr	r3, [r7, #4]
 8004024:	2200      	movs	r2, #0
 8004026:	669a      	str	r2, [r3, #104]	; 0x68
 8004028:	7fbb      	ldrb	r3, [r7, #30]
 800402a:	4618      	mov	r0, r3
 800402c:	3720      	adds	r7, #32
 800402e:	46bd      	mov	sp, r7
 8004030:	bd80      	pop	{r7, pc}
 8004032:	bf00      	nop
 8004034:	007a1200 	.word	0x007a1200

08004038 <UART_AdvFeatureConfig>:
 8004038:	b480      	push	{r7}
 800403a:	b083      	sub	sp, #12
 800403c:	af00      	add	r7, sp, #0
 800403e:	6078      	str	r0, [r7, #4]
 8004040:	687b      	ldr	r3, [r7, #4]
 8004042:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004044:	f003 0301 	and.w	r3, r3, #1
 8004048:	2b00      	cmp	r3, #0
 800404a:	d00a      	beq.n	8004062 <UART_AdvFeatureConfig+0x2a>
 800404c:	687b      	ldr	r3, [r7, #4]
 800404e:	681b      	ldr	r3, [r3, #0]
 8004050:	685b      	ldr	r3, [r3, #4]
 8004052:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 8004056:	687b      	ldr	r3, [r7, #4]
 8004058:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800405a:	687b      	ldr	r3, [r7, #4]
 800405c:	681b      	ldr	r3, [r3, #0]
 800405e:	430a      	orrs	r2, r1
 8004060:	605a      	str	r2, [r3, #4]
 8004062:	687b      	ldr	r3, [r7, #4]
 8004064:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004066:	f003 0302 	and.w	r3, r3, #2
 800406a:	2b00      	cmp	r3, #0
 800406c:	d00a      	beq.n	8004084 <UART_AdvFeatureConfig+0x4c>
 800406e:	687b      	ldr	r3, [r7, #4]
 8004070:	681b      	ldr	r3, [r3, #0]
 8004072:	685b      	ldr	r3, [r3, #4]
 8004074:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8004078:	687b      	ldr	r3, [r7, #4]
 800407a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800407c:	687b      	ldr	r3, [r7, #4]
 800407e:	681b      	ldr	r3, [r3, #0]
 8004080:	430a      	orrs	r2, r1
 8004082:	605a      	str	r2, [r3, #4]
 8004084:	687b      	ldr	r3, [r7, #4]
 8004086:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004088:	f003 0304 	and.w	r3, r3, #4
 800408c:	2b00      	cmp	r3, #0
 800408e:	d00a      	beq.n	80040a6 <UART_AdvFeatureConfig+0x6e>
 8004090:	687b      	ldr	r3, [r7, #4]
 8004092:	681b      	ldr	r3, [r3, #0]
 8004094:	685b      	ldr	r3, [r3, #4]
 8004096:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 800409a:	687b      	ldr	r3, [r7, #4]
 800409c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	681b      	ldr	r3, [r3, #0]
 80040a2:	430a      	orrs	r2, r1
 80040a4:	605a      	str	r2, [r3, #4]
 80040a6:	687b      	ldr	r3, [r7, #4]
 80040a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040aa:	f003 0308 	and.w	r3, r3, #8
 80040ae:	2b00      	cmp	r3, #0
 80040b0:	d00a      	beq.n	80040c8 <UART_AdvFeatureConfig+0x90>
 80040b2:	687b      	ldr	r3, [r7, #4]
 80040b4:	681b      	ldr	r3, [r3, #0]
 80040b6:	685b      	ldr	r3, [r3, #4]
 80040b8:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 80040bc:	687b      	ldr	r3, [r7, #4]
 80040be:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80040c0:	687b      	ldr	r3, [r7, #4]
 80040c2:	681b      	ldr	r3, [r3, #0]
 80040c4:	430a      	orrs	r2, r1
 80040c6:	605a      	str	r2, [r3, #4]
 80040c8:	687b      	ldr	r3, [r7, #4]
 80040ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040cc:	f003 0310 	and.w	r3, r3, #16
 80040d0:	2b00      	cmp	r3, #0
 80040d2:	d00a      	beq.n	80040ea <UART_AdvFeatureConfig+0xb2>
 80040d4:	687b      	ldr	r3, [r7, #4]
 80040d6:	681b      	ldr	r3, [r3, #0]
 80040d8:	689b      	ldr	r3, [r3, #8]
 80040da:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 80040de:	687b      	ldr	r3, [r7, #4]
 80040e0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	681b      	ldr	r3, [r3, #0]
 80040e6:	430a      	orrs	r2, r1
 80040e8:	609a      	str	r2, [r3, #8]
 80040ea:	687b      	ldr	r3, [r7, #4]
 80040ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040ee:	f003 0320 	and.w	r3, r3, #32
 80040f2:	2b00      	cmp	r3, #0
 80040f4:	d00a      	beq.n	800410c <UART_AdvFeatureConfig+0xd4>
 80040f6:	687b      	ldr	r3, [r7, #4]
 80040f8:	681b      	ldr	r3, [r3, #0]
 80040fa:	689b      	ldr	r3, [r3, #8]
 80040fc:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 8004100:	687b      	ldr	r3, [r7, #4]
 8004102:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	681b      	ldr	r3, [r3, #0]
 8004108:	430a      	orrs	r2, r1
 800410a:	609a      	str	r2, [r3, #8]
 800410c:	687b      	ldr	r3, [r7, #4]
 800410e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004110:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004114:	2b00      	cmp	r3, #0
 8004116:	d01a      	beq.n	800414e <UART_AdvFeatureConfig+0x116>
 8004118:	687b      	ldr	r3, [r7, #4]
 800411a:	681b      	ldr	r3, [r3, #0]
 800411c:	685b      	ldr	r3, [r3, #4]
 800411e:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 8004122:	687b      	ldr	r3, [r7, #4]
 8004124:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004126:	687b      	ldr	r3, [r7, #4]
 8004128:	681b      	ldr	r3, [r3, #0]
 800412a:	430a      	orrs	r2, r1
 800412c:	605a      	str	r2, [r3, #4]
 800412e:	687b      	ldr	r3, [r7, #4]
 8004130:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004132:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8004136:	d10a      	bne.n	800414e <UART_AdvFeatureConfig+0x116>
 8004138:	687b      	ldr	r3, [r7, #4]
 800413a:	681b      	ldr	r3, [r3, #0]
 800413c:	685b      	ldr	r3, [r3, #4]
 800413e:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 8004142:	687b      	ldr	r3, [r7, #4]
 8004144:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004146:	687b      	ldr	r3, [r7, #4]
 8004148:	681b      	ldr	r3, [r3, #0]
 800414a:	430a      	orrs	r2, r1
 800414c:	605a      	str	r2, [r3, #4]
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004152:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004156:	2b00      	cmp	r3, #0
 8004158:	d00a      	beq.n	8004170 <UART_AdvFeatureConfig+0x138>
 800415a:	687b      	ldr	r3, [r7, #4]
 800415c:	681b      	ldr	r3, [r3, #0]
 800415e:	685b      	ldr	r3, [r3, #4]
 8004160:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8004164:	687b      	ldr	r3, [r7, #4]
 8004166:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8004168:	687b      	ldr	r3, [r7, #4]
 800416a:	681b      	ldr	r3, [r3, #0]
 800416c:	430a      	orrs	r2, r1
 800416e:	605a      	str	r2, [r3, #4]
 8004170:	bf00      	nop
 8004172:	370c      	adds	r7, #12
 8004174:	46bd      	mov	sp, r7
 8004176:	f85d 7b04 	ldr.w	r7, [sp], #4
 800417a:	4770      	bx	lr

0800417c <UART_CheckIdleState>:
 800417c:	b580      	push	{r7, lr}
 800417e:	b086      	sub	sp, #24
 8004180:	af02      	add	r7, sp, #8
 8004182:	6078      	str	r0, [r7, #4]
 8004184:	687b      	ldr	r3, [r7, #4]
 8004186:	2200      	movs	r2, #0
 8004188:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800418c:	f7fd fb7a 	bl	8001884 <HAL_GetTick>
 8004190:	60f8      	str	r0, [r7, #12]
 8004192:	687b      	ldr	r3, [r7, #4]
 8004194:	681b      	ldr	r3, [r3, #0]
 8004196:	681b      	ldr	r3, [r3, #0]
 8004198:	f003 0308 	and.w	r3, r3, #8
 800419c:	2b08      	cmp	r3, #8
 800419e:	d10e      	bne.n	80041be <UART_CheckIdleState+0x42>
 80041a0:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80041a4:	9300      	str	r3, [sp, #0]
 80041a6:	68fb      	ldr	r3, [r7, #12]
 80041a8:	2200      	movs	r2, #0
 80041aa:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 80041ae:	6878      	ldr	r0, [r7, #4]
 80041b0:	f000 f82d 	bl	800420e <UART_WaitOnFlagUntilTimeout>
 80041b4:	4603      	mov	r3, r0
 80041b6:	2b00      	cmp	r3, #0
 80041b8:	d001      	beq.n	80041be <UART_CheckIdleState+0x42>
 80041ba:	2303      	movs	r3, #3
 80041bc:	e023      	b.n	8004206 <UART_CheckIdleState+0x8a>
 80041be:	687b      	ldr	r3, [r7, #4]
 80041c0:	681b      	ldr	r3, [r3, #0]
 80041c2:	681b      	ldr	r3, [r3, #0]
 80041c4:	f003 0304 	and.w	r3, r3, #4
 80041c8:	2b04      	cmp	r3, #4
 80041ca:	d10e      	bne.n	80041ea <UART_CheckIdleState+0x6e>
 80041cc:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80041d0:	9300      	str	r3, [sp, #0]
 80041d2:	68fb      	ldr	r3, [r7, #12]
 80041d4:	2200      	movs	r2, #0
 80041d6:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 80041da:	6878      	ldr	r0, [r7, #4]
 80041dc:	f000 f817 	bl	800420e <UART_WaitOnFlagUntilTimeout>
 80041e0:	4603      	mov	r3, r0
 80041e2:	2b00      	cmp	r3, #0
 80041e4:	d001      	beq.n	80041ea <UART_CheckIdleState+0x6e>
 80041e6:	2303      	movs	r3, #3
 80041e8:	e00d      	b.n	8004206 <UART_CheckIdleState+0x8a>
 80041ea:	687b      	ldr	r3, [r7, #4]
 80041ec:	2220      	movs	r2, #32
 80041ee:	679a      	str	r2, [r3, #120]	; 0x78
 80041f0:	687b      	ldr	r3, [r7, #4]
 80041f2:	2220      	movs	r2, #32
 80041f4:	67da      	str	r2, [r3, #124]	; 0x7c
 80041f6:	687b      	ldr	r3, [r7, #4]
 80041f8:	2200      	movs	r2, #0
 80041fa:	661a      	str	r2, [r3, #96]	; 0x60
 80041fc:	687b      	ldr	r3, [r7, #4]
 80041fe:	2200      	movs	r2, #0
 8004200:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8004204:	2300      	movs	r3, #0
 8004206:	4618      	mov	r0, r3
 8004208:	3710      	adds	r7, #16
 800420a:	46bd      	mov	sp, r7
 800420c:	bd80      	pop	{r7, pc}

0800420e <UART_WaitOnFlagUntilTimeout>:
 800420e:	b580      	push	{r7, lr}
 8004210:	b084      	sub	sp, #16
 8004212:	af00      	add	r7, sp, #0
 8004214:	60f8      	str	r0, [r7, #12]
 8004216:	60b9      	str	r1, [r7, #8]
 8004218:	603b      	str	r3, [r7, #0]
 800421a:	4613      	mov	r3, r2
 800421c:	71fb      	strb	r3, [r7, #7]
 800421e:	e05e      	b.n	80042de <UART_WaitOnFlagUntilTimeout+0xd0>
 8004220:	69bb      	ldr	r3, [r7, #24]
 8004222:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004226:	d05a      	beq.n	80042de <UART_WaitOnFlagUntilTimeout+0xd0>
 8004228:	f7fd fb2c 	bl	8001884 <HAL_GetTick>
 800422c:	4602      	mov	r2, r0
 800422e:	683b      	ldr	r3, [r7, #0]
 8004230:	1ad3      	subs	r3, r2, r3
 8004232:	69ba      	ldr	r2, [r7, #24]
 8004234:	429a      	cmp	r2, r3
 8004236:	d302      	bcc.n	800423e <UART_WaitOnFlagUntilTimeout+0x30>
 8004238:	69bb      	ldr	r3, [r7, #24]
 800423a:	2b00      	cmp	r3, #0
 800423c:	d11b      	bne.n	8004276 <UART_WaitOnFlagUntilTimeout+0x68>
 800423e:	68fb      	ldr	r3, [r7, #12]
 8004240:	681b      	ldr	r3, [r3, #0]
 8004242:	681a      	ldr	r2, [r3, #0]
 8004244:	68fb      	ldr	r3, [r7, #12]
 8004246:	681b      	ldr	r3, [r3, #0]
 8004248:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800424c:	601a      	str	r2, [r3, #0]
 800424e:	68fb      	ldr	r3, [r7, #12]
 8004250:	681b      	ldr	r3, [r3, #0]
 8004252:	689a      	ldr	r2, [r3, #8]
 8004254:	68fb      	ldr	r3, [r7, #12]
 8004256:	681b      	ldr	r3, [r3, #0]
 8004258:	f022 0201 	bic.w	r2, r2, #1
 800425c:	609a      	str	r2, [r3, #8]
 800425e:	68fb      	ldr	r3, [r7, #12]
 8004260:	2220      	movs	r2, #32
 8004262:	679a      	str	r2, [r3, #120]	; 0x78
 8004264:	68fb      	ldr	r3, [r7, #12]
 8004266:	2220      	movs	r2, #32
 8004268:	67da      	str	r2, [r3, #124]	; 0x7c
 800426a:	68fb      	ldr	r3, [r7, #12]
 800426c:	2200      	movs	r2, #0
 800426e:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8004272:	2303      	movs	r3, #3
 8004274:	e043      	b.n	80042fe <UART_WaitOnFlagUntilTimeout+0xf0>
 8004276:	68fb      	ldr	r3, [r7, #12]
 8004278:	681b      	ldr	r3, [r3, #0]
 800427a:	681b      	ldr	r3, [r3, #0]
 800427c:	f003 0304 	and.w	r3, r3, #4
 8004280:	2b00      	cmp	r3, #0
 8004282:	d02c      	beq.n	80042de <UART_WaitOnFlagUntilTimeout+0xd0>
 8004284:	68fb      	ldr	r3, [r7, #12]
 8004286:	681b      	ldr	r3, [r3, #0]
 8004288:	69db      	ldr	r3, [r3, #28]
 800428a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800428e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004292:	d124      	bne.n	80042de <UART_WaitOnFlagUntilTimeout+0xd0>
 8004294:	68fb      	ldr	r3, [r7, #12]
 8004296:	681b      	ldr	r3, [r3, #0]
 8004298:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800429c:	621a      	str	r2, [r3, #32]
 800429e:	68fb      	ldr	r3, [r7, #12]
 80042a0:	681b      	ldr	r3, [r3, #0]
 80042a2:	681a      	ldr	r2, [r3, #0]
 80042a4:	68fb      	ldr	r3, [r7, #12]
 80042a6:	681b      	ldr	r3, [r3, #0]
 80042a8:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80042ac:	601a      	str	r2, [r3, #0]
 80042ae:	68fb      	ldr	r3, [r7, #12]
 80042b0:	681b      	ldr	r3, [r3, #0]
 80042b2:	689a      	ldr	r2, [r3, #8]
 80042b4:	68fb      	ldr	r3, [r7, #12]
 80042b6:	681b      	ldr	r3, [r3, #0]
 80042b8:	f022 0201 	bic.w	r2, r2, #1
 80042bc:	609a      	str	r2, [r3, #8]
 80042be:	68fb      	ldr	r3, [r7, #12]
 80042c0:	2220      	movs	r2, #32
 80042c2:	679a      	str	r2, [r3, #120]	; 0x78
 80042c4:	68fb      	ldr	r3, [r7, #12]
 80042c6:	2220      	movs	r2, #32
 80042c8:	67da      	str	r2, [r3, #124]	; 0x7c
 80042ca:	68fb      	ldr	r3, [r7, #12]
 80042cc:	2220      	movs	r2, #32
 80042ce:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80042d2:	68fb      	ldr	r3, [r7, #12]
 80042d4:	2200      	movs	r2, #0
 80042d6:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 80042da:	2303      	movs	r3, #3
 80042dc:	e00f      	b.n	80042fe <UART_WaitOnFlagUntilTimeout+0xf0>
 80042de:	68fb      	ldr	r3, [r7, #12]
 80042e0:	681b      	ldr	r3, [r3, #0]
 80042e2:	69da      	ldr	r2, [r3, #28]
 80042e4:	68bb      	ldr	r3, [r7, #8]
 80042e6:	4013      	ands	r3, r2
 80042e8:	68ba      	ldr	r2, [r7, #8]
 80042ea:	429a      	cmp	r2, r3
 80042ec:	bf0c      	ite	eq
 80042ee:	2301      	moveq	r3, #1
 80042f0:	2300      	movne	r3, #0
 80042f2:	b2db      	uxtb	r3, r3
 80042f4:	461a      	mov	r2, r3
 80042f6:	79fb      	ldrb	r3, [r7, #7]
 80042f8:	429a      	cmp	r2, r3
 80042fa:	d091      	beq.n	8004220 <UART_WaitOnFlagUntilTimeout+0x12>
 80042fc:	2300      	movs	r3, #0
 80042fe:	4618      	mov	r0, r3
 8004300:	3710      	adds	r7, #16
 8004302:	46bd      	mov	sp, r7
 8004304:	bd80      	pop	{r7, pc}
	...

08004308 <osKernelInitialize>:
 8004308:	b480      	push	{r7}
 800430a:	b085      	sub	sp, #20
 800430c:	af00      	add	r7, sp, #0
 800430e:	f3ef 8305 	mrs	r3, IPSR
 8004312:	60bb      	str	r3, [r7, #8]
 8004314:	68bb      	ldr	r3, [r7, #8]
 8004316:	2b00      	cmp	r3, #0
 8004318:	d10f      	bne.n	800433a <osKernelInitialize+0x32>
 800431a:	f3ef 8310 	mrs	r3, PRIMASK
 800431e:	607b      	str	r3, [r7, #4]
 8004320:	687b      	ldr	r3, [r7, #4]
 8004322:	2b00      	cmp	r3, #0
 8004324:	d109      	bne.n	800433a <osKernelInitialize+0x32>
 8004326:	4b11      	ldr	r3, [pc, #68]	; (800436c <osKernelInitialize+0x64>)
 8004328:	681b      	ldr	r3, [r3, #0]
 800432a:	2b02      	cmp	r3, #2
 800432c:	d109      	bne.n	8004342 <osKernelInitialize+0x3a>
 800432e:	f3ef 8311 	mrs	r3, BASEPRI
 8004332:	603b      	str	r3, [r7, #0]
 8004334:	683b      	ldr	r3, [r7, #0]
 8004336:	2b00      	cmp	r3, #0
 8004338:	d003      	beq.n	8004342 <osKernelInitialize+0x3a>
 800433a:	f06f 0305 	mvn.w	r3, #5
 800433e:	60fb      	str	r3, [r7, #12]
 8004340:	e00c      	b.n	800435c <osKernelInitialize+0x54>
 8004342:	4b0a      	ldr	r3, [pc, #40]	; (800436c <osKernelInitialize+0x64>)
 8004344:	681b      	ldr	r3, [r3, #0]
 8004346:	2b00      	cmp	r3, #0
 8004348:	d105      	bne.n	8004356 <osKernelInitialize+0x4e>
 800434a:	4b08      	ldr	r3, [pc, #32]	; (800436c <osKernelInitialize+0x64>)
 800434c:	2201      	movs	r2, #1
 800434e:	601a      	str	r2, [r3, #0]
 8004350:	2300      	movs	r3, #0
 8004352:	60fb      	str	r3, [r7, #12]
 8004354:	e002      	b.n	800435c <osKernelInitialize+0x54>
 8004356:	f04f 33ff 	mov.w	r3, #4294967295
 800435a:	60fb      	str	r3, [r7, #12]
 800435c:	68fb      	ldr	r3, [r7, #12]
 800435e:	4618      	mov	r0, r3
 8004360:	3714      	adds	r7, #20
 8004362:	46bd      	mov	sp, r7
 8004364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004368:	4770      	bx	lr
 800436a:	bf00      	nop
 800436c:	20000228 	.word	0x20000228

08004370 <osKernelStart>:
 8004370:	b580      	push	{r7, lr}
 8004372:	b084      	sub	sp, #16
 8004374:	af00      	add	r7, sp, #0
 8004376:	f3ef 8305 	mrs	r3, IPSR
 800437a:	60bb      	str	r3, [r7, #8]
 800437c:	68bb      	ldr	r3, [r7, #8]
 800437e:	2b00      	cmp	r3, #0
 8004380:	d10f      	bne.n	80043a2 <osKernelStart+0x32>
 8004382:	f3ef 8310 	mrs	r3, PRIMASK
 8004386:	607b      	str	r3, [r7, #4]
 8004388:	687b      	ldr	r3, [r7, #4]
 800438a:	2b00      	cmp	r3, #0
 800438c:	d109      	bne.n	80043a2 <osKernelStart+0x32>
 800438e:	4b11      	ldr	r3, [pc, #68]	; (80043d4 <osKernelStart+0x64>)
 8004390:	681b      	ldr	r3, [r3, #0]
 8004392:	2b02      	cmp	r3, #2
 8004394:	d109      	bne.n	80043aa <osKernelStart+0x3a>
 8004396:	f3ef 8311 	mrs	r3, BASEPRI
 800439a:	603b      	str	r3, [r7, #0]
 800439c:	683b      	ldr	r3, [r7, #0]
 800439e:	2b00      	cmp	r3, #0
 80043a0:	d003      	beq.n	80043aa <osKernelStart+0x3a>
 80043a2:	f06f 0305 	mvn.w	r3, #5
 80043a6:	60fb      	str	r3, [r7, #12]
 80043a8:	e00e      	b.n	80043c8 <osKernelStart+0x58>
 80043aa:	4b0a      	ldr	r3, [pc, #40]	; (80043d4 <osKernelStart+0x64>)
 80043ac:	681b      	ldr	r3, [r3, #0]
 80043ae:	2b01      	cmp	r3, #1
 80043b0:	d107      	bne.n	80043c2 <osKernelStart+0x52>
 80043b2:	4b08      	ldr	r3, [pc, #32]	; (80043d4 <osKernelStart+0x64>)
 80043b4:	2202      	movs	r2, #2
 80043b6:	601a      	str	r2, [r3, #0]
 80043b8:	f001 f86a 	bl	8005490 <vTaskStartScheduler>
 80043bc:	2300      	movs	r3, #0
 80043be:	60fb      	str	r3, [r7, #12]
 80043c0:	e002      	b.n	80043c8 <osKernelStart+0x58>
 80043c2:	f04f 33ff 	mov.w	r3, #4294967295
 80043c6:	60fb      	str	r3, [r7, #12]
 80043c8:	68fb      	ldr	r3, [r7, #12]
 80043ca:	4618      	mov	r0, r3
 80043cc:	3710      	adds	r7, #16
 80043ce:	46bd      	mov	sp, r7
 80043d0:	bd80      	pop	{r7, pc}
 80043d2:	bf00      	nop
 80043d4:	20000228 	.word	0x20000228

080043d8 <osThreadNew>:
 80043d8:	b580      	push	{r7, lr}
 80043da:	b092      	sub	sp, #72	; 0x48
 80043dc:	af04      	add	r7, sp, #16
 80043de:	60f8      	str	r0, [r7, #12]
 80043e0:	60b9      	str	r1, [r7, #8]
 80043e2:	607a      	str	r2, [r7, #4]
 80043e4:	2300      	movs	r3, #0
 80043e6:	617b      	str	r3, [r7, #20]
 80043e8:	f3ef 8305 	mrs	r3, IPSR
 80043ec:	627b      	str	r3, [r7, #36]	; 0x24
 80043ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80043f0:	2b00      	cmp	r3, #0
 80043f2:	f040 8094 	bne.w	800451e <osThreadNew+0x146>
 80043f6:	f3ef 8310 	mrs	r3, PRIMASK
 80043fa:	623b      	str	r3, [r7, #32]
 80043fc:	6a3b      	ldr	r3, [r7, #32]
 80043fe:	2b00      	cmp	r3, #0
 8004400:	f040 808d 	bne.w	800451e <osThreadNew+0x146>
 8004404:	4b48      	ldr	r3, [pc, #288]	; (8004528 <osThreadNew+0x150>)
 8004406:	681b      	ldr	r3, [r3, #0]
 8004408:	2b02      	cmp	r3, #2
 800440a:	d106      	bne.n	800441a <osThreadNew+0x42>
 800440c:	f3ef 8311 	mrs	r3, BASEPRI
 8004410:	61fb      	str	r3, [r7, #28]
 8004412:	69fb      	ldr	r3, [r7, #28]
 8004414:	2b00      	cmp	r3, #0
 8004416:	f040 8082 	bne.w	800451e <osThreadNew+0x146>
 800441a:	68fb      	ldr	r3, [r7, #12]
 800441c:	2b00      	cmp	r3, #0
 800441e:	d07e      	beq.n	800451e <osThreadNew+0x146>
 8004420:	2380      	movs	r3, #128	; 0x80
 8004422:	633b      	str	r3, [r7, #48]	; 0x30
 8004424:	2318      	movs	r3, #24
 8004426:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004428:	2300      	movs	r3, #0
 800442a:	76fb      	strb	r3, [r7, #27]
 800442c:	f107 031b 	add.w	r3, r7, #27
 8004430:	637b      	str	r3, [r7, #52]	; 0x34
 8004432:	f04f 33ff 	mov.w	r3, #4294967295
 8004436:	62bb      	str	r3, [r7, #40]	; 0x28
 8004438:	687b      	ldr	r3, [r7, #4]
 800443a:	2b00      	cmp	r3, #0
 800443c:	d045      	beq.n	80044ca <osThreadNew+0xf2>
 800443e:	687b      	ldr	r3, [r7, #4]
 8004440:	681b      	ldr	r3, [r3, #0]
 8004442:	2b00      	cmp	r3, #0
 8004444:	d002      	beq.n	800444c <osThreadNew+0x74>
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	681b      	ldr	r3, [r3, #0]
 800444a:	637b      	str	r3, [r7, #52]	; 0x34
 800444c:	687b      	ldr	r3, [r7, #4]
 800444e:	699b      	ldr	r3, [r3, #24]
 8004450:	2b00      	cmp	r3, #0
 8004452:	d002      	beq.n	800445a <osThreadNew+0x82>
 8004454:	687b      	ldr	r3, [r7, #4]
 8004456:	699b      	ldr	r3, [r3, #24]
 8004458:	62fb      	str	r3, [r7, #44]	; 0x2c
 800445a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800445c:	2b00      	cmp	r3, #0
 800445e:	d008      	beq.n	8004472 <osThreadNew+0x9a>
 8004460:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004462:	2b38      	cmp	r3, #56	; 0x38
 8004464:	d805      	bhi.n	8004472 <osThreadNew+0x9a>
 8004466:	687b      	ldr	r3, [r7, #4]
 8004468:	685b      	ldr	r3, [r3, #4]
 800446a:	f003 0301 	and.w	r3, r3, #1
 800446e:	2b00      	cmp	r3, #0
 8004470:	d001      	beq.n	8004476 <osThreadNew+0x9e>
 8004472:	2300      	movs	r3, #0
 8004474:	e054      	b.n	8004520 <osThreadNew+0x148>
 8004476:	687b      	ldr	r3, [r7, #4]
 8004478:	695b      	ldr	r3, [r3, #20]
 800447a:	2b00      	cmp	r3, #0
 800447c:	d003      	beq.n	8004486 <osThreadNew+0xae>
 800447e:	687b      	ldr	r3, [r7, #4]
 8004480:	695b      	ldr	r3, [r3, #20]
 8004482:	089b      	lsrs	r3, r3, #2
 8004484:	633b      	str	r3, [r7, #48]	; 0x30
 8004486:	687b      	ldr	r3, [r7, #4]
 8004488:	689b      	ldr	r3, [r3, #8]
 800448a:	2b00      	cmp	r3, #0
 800448c:	d00e      	beq.n	80044ac <osThreadNew+0xd4>
 800448e:	687b      	ldr	r3, [r7, #4]
 8004490:	68db      	ldr	r3, [r3, #12]
 8004492:	2b5b      	cmp	r3, #91	; 0x5b
 8004494:	d90a      	bls.n	80044ac <osThreadNew+0xd4>
 8004496:	687b      	ldr	r3, [r7, #4]
 8004498:	691b      	ldr	r3, [r3, #16]
 800449a:	2b00      	cmp	r3, #0
 800449c:	d006      	beq.n	80044ac <osThreadNew+0xd4>
 800449e:	687b      	ldr	r3, [r7, #4]
 80044a0:	695b      	ldr	r3, [r3, #20]
 80044a2:	2b00      	cmp	r3, #0
 80044a4:	d002      	beq.n	80044ac <osThreadNew+0xd4>
 80044a6:	2301      	movs	r3, #1
 80044a8:	62bb      	str	r3, [r7, #40]	; 0x28
 80044aa:	e010      	b.n	80044ce <osThreadNew+0xf6>
 80044ac:	687b      	ldr	r3, [r7, #4]
 80044ae:	689b      	ldr	r3, [r3, #8]
 80044b0:	2b00      	cmp	r3, #0
 80044b2:	d10c      	bne.n	80044ce <osThreadNew+0xf6>
 80044b4:	687b      	ldr	r3, [r7, #4]
 80044b6:	68db      	ldr	r3, [r3, #12]
 80044b8:	2b00      	cmp	r3, #0
 80044ba:	d108      	bne.n	80044ce <osThreadNew+0xf6>
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	691b      	ldr	r3, [r3, #16]
 80044c0:	2b00      	cmp	r3, #0
 80044c2:	d104      	bne.n	80044ce <osThreadNew+0xf6>
 80044c4:	2300      	movs	r3, #0
 80044c6:	62bb      	str	r3, [r7, #40]	; 0x28
 80044c8:	e001      	b.n	80044ce <osThreadNew+0xf6>
 80044ca:	2300      	movs	r3, #0
 80044cc:	62bb      	str	r3, [r7, #40]	; 0x28
 80044ce:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80044d0:	2b01      	cmp	r3, #1
 80044d2:	d110      	bne.n	80044f6 <osThreadNew+0x11e>
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	691b      	ldr	r3, [r3, #16]
 80044d8:	687a      	ldr	r2, [r7, #4]
 80044da:	6892      	ldr	r2, [r2, #8]
 80044dc:	9202      	str	r2, [sp, #8]
 80044de:	9301      	str	r3, [sp, #4]
 80044e0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80044e2:	9300      	str	r3, [sp, #0]
 80044e4:	68bb      	ldr	r3, [r7, #8]
 80044e6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80044e8:	6b79      	ldr	r1, [r7, #52]	; 0x34
 80044ea:	68f8      	ldr	r0, [r7, #12]
 80044ec:	f000 fe08 	bl	8005100 <xTaskCreateStatic>
 80044f0:	4603      	mov	r3, r0
 80044f2:	617b      	str	r3, [r7, #20]
 80044f4:	e013      	b.n	800451e <osThreadNew+0x146>
 80044f6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80044f8:	2b00      	cmp	r3, #0
 80044fa:	d110      	bne.n	800451e <osThreadNew+0x146>
 80044fc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80044fe:	b29a      	uxth	r2, r3
 8004500:	f107 0314 	add.w	r3, r7, #20
 8004504:	9301      	str	r3, [sp, #4]
 8004506:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004508:	9300      	str	r3, [sp, #0]
 800450a:	68bb      	ldr	r3, [r7, #8]
 800450c:	6b79      	ldr	r1, [r7, #52]	; 0x34
 800450e:	68f8      	ldr	r0, [r7, #12]
 8004510:	f000 fe4f 	bl	80051b2 <xTaskCreate>
 8004514:	4603      	mov	r3, r0
 8004516:	2b01      	cmp	r3, #1
 8004518:	d001      	beq.n	800451e <osThreadNew+0x146>
 800451a:	2300      	movs	r3, #0
 800451c:	617b      	str	r3, [r7, #20]
 800451e:	697b      	ldr	r3, [r7, #20]
 8004520:	4618      	mov	r0, r3
 8004522:	3738      	adds	r7, #56	; 0x38
 8004524:	46bd      	mov	sp, r7
 8004526:	bd80      	pop	{r7, pc}
 8004528:	20000228 	.word	0x20000228

0800452c <osDelay>:
 800452c:	b580      	push	{r7, lr}
 800452e:	b086      	sub	sp, #24
 8004530:	af00      	add	r7, sp, #0
 8004532:	6078      	str	r0, [r7, #4]
 8004534:	f3ef 8305 	mrs	r3, IPSR
 8004538:	613b      	str	r3, [r7, #16]
 800453a:	693b      	ldr	r3, [r7, #16]
 800453c:	2b00      	cmp	r3, #0
 800453e:	d10f      	bne.n	8004560 <osDelay+0x34>
 8004540:	f3ef 8310 	mrs	r3, PRIMASK
 8004544:	60fb      	str	r3, [r7, #12]
 8004546:	68fb      	ldr	r3, [r7, #12]
 8004548:	2b00      	cmp	r3, #0
 800454a:	d109      	bne.n	8004560 <osDelay+0x34>
 800454c:	4b0d      	ldr	r3, [pc, #52]	; (8004584 <osDelay+0x58>)
 800454e:	681b      	ldr	r3, [r3, #0]
 8004550:	2b02      	cmp	r3, #2
 8004552:	d109      	bne.n	8004568 <osDelay+0x3c>
 8004554:	f3ef 8311 	mrs	r3, BASEPRI
 8004558:	60bb      	str	r3, [r7, #8]
 800455a:	68bb      	ldr	r3, [r7, #8]
 800455c:	2b00      	cmp	r3, #0
 800455e:	d003      	beq.n	8004568 <osDelay+0x3c>
 8004560:	f06f 0305 	mvn.w	r3, #5
 8004564:	617b      	str	r3, [r7, #20]
 8004566:	e007      	b.n	8004578 <osDelay+0x4c>
 8004568:	2300      	movs	r3, #0
 800456a:	617b      	str	r3, [r7, #20]
 800456c:	687b      	ldr	r3, [r7, #4]
 800456e:	2b00      	cmp	r3, #0
 8004570:	d002      	beq.n	8004578 <osDelay+0x4c>
 8004572:	6878      	ldr	r0, [r7, #4]
 8004574:	f000 ff58 	bl	8005428 <vTaskDelay>
 8004578:	697b      	ldr	r3, [r7, #20]
 800457a:	4618      	mov	r0, r3
 800457c:	3718      	adds	r7, #24
 800457e:	46bd      	mov	sp, r7
 8004580:	bd80      	pop	{r7, pc}
 8004582:	bf00      	nop
 8004584:	20000228 	.word	0x20000228

08004588 <vApplicationGetIdleTaskMemory>:
 8004588:	b480      	push	{r7}
 800458a:	b085      	sub	sp, #20
 800458c:	af00      	add	r7, sp, #0
 800458e:	60f8      	str	r0, [r7, #12]
 8004590:	60b9      	str	r1, [r7, #8]
 8004592:	607a      	str	r2, [r7, #4]
 8004594:	68fb      	ldr	r3, [r7, #12]
 8004596:	4a07      	ldr	r2, [pc, #28]	; (80045b4 <vApplicationGetIdleTaskMemory+0x2c>)
 8004598:	601a      	str	r2, [r3, #0]
 800459a:	68bb      	ldr	r3, [r7, #8]
 800459c:	4a06      	ldr	r2, [pc, #24]	; (80045b8 <vApplicationGetIdleTaskMemory+0x30>)
 800459e:	601a      	str	r2, [r3, #0]
 80045a0:	687b      	ldr	r3, [r7, #4]
 80045a2:	2280      	movs	r2, #128	; 0x80
 80045a4:	601a      	str	r2, [r3, #0]
 80045a6:	bf00      	nop
 80045a8:	3714      	adds	r7, #20
 80045aa:	46bd      	mov	sp, r7
 80045ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045b0:	4770      	bx	lr
 80045b2:	bf00      	nop
 80045b4:	2000022c 	.word	0x2000022c
 80045b8:	20000288 	.word	0x20000288

080045bc <vApplicationGetTimerTaskMemory>:
 80045bc:	b480      	push	{r7}
 80045be:	b085      	sub	sp, #20
 80045c0:	af00      	add	r7, sp, #0
 80045c2:	60f8      	str	r0, [r7, #12]
 80045c4:	60b9      	str	r1, [r7, #8]
 80045c6:	607a      	str	r2, [r7, #4]
 80045c8:	68fb      	ldr	r3, [r7, #12]
 80045ca:	4a07      	ldr	r2, [pc, #28]	; (80045e8 <vApplicationGetTimerTaskMemory+0x2c>)
 80045cc:	601a      	str	r2, [r3, #0]
 80045ce:	68bb      	ldr	r3, [r7, #8]
 80045d0:	4a06      	ldr	r2, [pc, #24]	; (80045ec <vApplicationGetTimerTaskMemory+0x30>)
 80045d2:	601a      	str	r2, [r3, #0]
 80045d4:	687b      	ldr	r3, [r7, #4]
 80045d6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80045da:	601a      	str	r2, [r3, #0]
 80045dc:	bf00      	nop
 80045de:	3714      	adds	r7, #20
 80045e0:	46bd      	mov	sp, r7
 80045e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045e6:	4770      	bx	lr
 80045e8:	20000488 	.word	0x20000488
 80045ec:	200004e4 	.word	0x200004e4

080045f0 <vListInitialise>:
 80045f0:	b480      	push	{r7}
 80045f2:	b083      	sub	sp, #12
 80045f4:	af00      	add	r7, sp, #0
 80045f6:	6078      	str	r0, [r7, #4]
 80045f8:	687b      	ldr	r3, [r7, #4]
 80045fa:	f103 0208 	add.w	r2, r3, #8
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	605a      	str	r2, [r3, #4]
 8004602:	687b      	ldr	r3, [r7, #4]
 8004604:	f04f 32ff 	mov.w	r2, #4294967295
 8004608:	609a      	str	r2, [r3, #8]
 800460a:	687b      	ldr	r3, [r7, #4]
 800460c:	f103 0208 	add.w	r2, r3, #8
 8004610:	687b      	ldr	r3, [r7, #4]
 8004612:	60da      	str	r2, [r3, #12]
 8004614:	687b      	ldr	r3, [r7, #4]
 8004616:	f103 0208 	add.w	r2, r3, #8
 800461a:	687b      	ldr	r3, [r7, #4]
 800461c:	611a      	str	r2, [r3, #16]
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	2200      	movs	r2, #0
 8004622:	601a      	str	r2, [r3, #0]
 8004624:	bf00      	nop
 8004626:	370c      	adds	r7, #12
 8004628:	46bd      	mov	sp, r7
 800462a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800462e:	4770      	bx	lr

08004630 <vListInitialiseItem>:
 8004630:	b480      	push	{r7}
 8004632:	b083      	sub	sp, #12
 8004634:	af00      	add	r7, sp, #0
 8004636:	6078      	str	r0, [r7, #4]
 8004638:	687b      	ldr	r3, [r7, #4]
 800463a:	2200      	movs	r2, #0
 800463c:	611a      	str	r2, [r3, #16]
 800463e:	bf00      	nop
 8004640:	370c      	adds	r7, #12
 8004642:	46bd      	mov	sp, r7
 8004644:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004648:	4770      	bx	lr

0800464a <vListInsertEnd>:
 800464a:	b480      	push	{r7}
 800464c:	b085      	sub	sp, #20
 800464e:	af00      	add	r7, sp, #0
 8004650:	6078      	str	r0, [r7, #4]
 8004652:	6039      	str	r1, [r7, #0]
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	685b      	ldr	r3, [r3, #4]
 8004658:	60fb      	str	r3, [r7, #12]
 800465a:	683b      	ldr	r3, [r7, #0]
 800465c:	68fa      	ldr	r2, [r7, #12]
 800465e:	605a      	str	r2, [r3, #4]
 8004660:	68fb      	ldr	r3, [r7, #12]
 8004662:	689a      	ldr	r2, [r3, #8]
 8004664:	683b      	ldr	r3, [r7, #0]
 8004666:	609a      	str	r2, [r3, #8]
 8004668:	68fb      	ldr	r3, [r7, #12]
 800466a:	689b      	ldr	r3, [r3, #8]
 800466c:	683a      	ldr	r2, [r7, #0]
 800466e:	605a      	str	r2, [r3, #4]
 8004670:	68fb      	ldr	r3, [r7, #12]
 8004672:	683a      	ldr	r2, [r7, #0]
 8004674:	609a      	str	r2, [r3, #8]
 8004676:	683b      	ldr	r3, [r7, #0]
 8004678:	687a      	ldr	r2, [r7, #4]
 800467a:	611a      	str	r2, [r3, #16]
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	681b      	ldr	r3, [r3, #0]
 8004680:	1c5a      	adds	r2, r3, #1
 8004682:	687b      	ldr	r3, [r7, #4]
 8004684:	601a      	str	r2, [r3, #0]
 8004686:	bf00      	nop
 8004688:	3714      	adds	r7, #20
 800468a:	46bd      	mov	sp, r7
 800468c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004690:	4770      	bx	lr

08004692 <vListInsert>:
 8004692:	b480      	push	{r7}
 8004694:	b085      	sub	sp, #20
 8004696:	af00      	add	r7, sp, #0
 8004698:	6078      	str	r0, [r7, #4]
 800469a:	6039      	str	r1, [r7, #0]
 800469c:	683b      	ldr	r3, [r7, #0]
 800469e:	681b      	ldr	r3, [r3, #0]
 80046a0:	60bb      	str	r3, [r7, #8]
 80046a2:	68bb      	ldr	r3, [r7, #8]
 80046a4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80046a8:	d103      	bne.n	80046b2 <vListInsert+0x20>
 80046aa:	687b      	ldr	r3, [r7, #4]
 80046ac:	691b      	ldr	r3, [r3, #16]
 80046ae:	60fb      	str	r3, [r7, #12]
 80046b0:	e00c      	b.n	80046cc <vListInsert+0x3a>
 80046b2:	687b      	ldr	r3, [r7, #4]
 80046b4:	3308      	adds	r3, #8
 80046b6:	60fb      	str	r3, [r7, #12]
 80046b8:	e002      	b.n	80046c0 <vListInsert+0x2e>
 80046ba:	68fb      	ldr	r3, [r7, #12]
 80046bc:	685b      	ldr	r3, [r3, #4]
 80046be:	60fb      	str	r3, [r7, #12]
 80046c0:	68fb      	ldr	r3, [r7, #12]
 80046c2:	685b      	ldr	r3, [r3, #4]
 80046c4:	681b      	ldr	r3, [r3, #0]
 80046c6:	68ba      	ldr	r2, [r7, #8]
 80046c8:	429a      	cmp	r2, r3
 80046ca:	d2f6      	bcs.n	80046ba <vListInsert+0x28>
 80046cc:	68fb      	ldr	r3, [r7, #12]
 80046ce:	685a      	ldr	r2, [r3, #4]
 80046d0:	683b      	ldr	r3, [r7, #0]
 80046d2:	605a      	str	r2, [r3, #4]
 80046d4:	683b      	ldr	r3, [r7, #0]
 80046d6:	685b      	ldr	r3, [r3, #4]
 80046d8:	683a      	ldr	r2, [r7, #0]
 80046da:	609a      	str	r2, [r3, #8]
 80046dc:	683b      	ldr	r3, [r7, #0]
 80046de:	68fa      	ldr	r2, [r7, #12]
 80046e0:	609a      	str	r2, [r3, #8]
 80046e2:	68fb      	ldr	r3, [r7, #12]
 80046e4:	683a      	ldr	r2, [r7, #0]
 80046e6:	605a      	str	r2, [r3, #4]
 80046e8:	683b      	ldr	r3, [r7, #0]
 80046ea:	687a      	ldr	r2, [r7, #4]
 80046ec:	611a      	str	r2, [r3, #16]
 80046ee:	687b      	ldr	r3, [r7, #4]
 80046f0:	681b      	ldr	r3, [r3, #0]
 80046f2:	1c5a      	adds	r2, r3, #1
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	601a      	str	r2, [r3, #0]
 80046f8:	bf00      	nop
 80046fa:	3714      	adds	r7, #20
 80046fc:	46bd      	mov	sp, r7
 80046fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004702:	4770      	bx	lr

08004704 <uxListRemove>:
 8004704:	b480      	push	{r7}
 8004706:	b085      	sub	sp, #20
 8004708:	af00      	add	r7, sp, #0
 800470a:	6078      	str	r0, [r7, #4]
 800470c:	687b      	ldr	r3, [r7, #4]
 800470e:	691b      	ldr	r3, [r3, #16]
 8004710:	60fb      	str	r3, [r7, #12]
 8004712:	687b      	ldr	r3, [r7, #4]
 8004714:	685b      	ldr	r3, [r3, #4]
 8004716:	687a      	ldr	r2, [r7, #4]
 8004718:	6892      	ldr	r2, [r2, #8]
 800471a:	609a      	str	r2, [r3, #8]
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	689b      	ldr	r3, [r3, #8]
 8004720:	687a      	ldr	r2, [r7, #4]
 8004722:	6852      	ldr	r2, [r2, #4]
 8004724:	605a      	str	r2, [r3, #4]
 8004726:	68fb      	ldr	r3, [r7, #12]
 8004728:	685b      	ldr	r3, [r3, #4]
 800472a:	687a      	ldr	r2, [r7, #4]
 800472c:	429a      	cmp	r2, r3
 800472e:	d103      	bne.n	8004738 <uxListRemove+0x34>
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	689a      	ldr	r2, [r3, #8]
 8004734:	68fb      	ldr	r3, [r7, #12]
 8004736:	605a      	str	r2, [r3, #4]
 8004738:	687b      	ldr	r3, [r7, #4]
 800473a:	2200      	movs	r2, #0
 800473c:	611a      	str	r2, [r3, #16]
 800473e:	68fb      	ldr	r3, [r7, #12]
 8004740:	681b      	ldr	r3, [r3, #0]
 8004742:	1e5a      	subs	r2, r3, #1
 8004744:	68fb      	ldr	r3, [r7, #12]
 8004746:	601a      	str	r2, [r3, #0]
 8004748:	68fb      	ldr	r3, [r7, #12]
 800474a:	681b      	ldr	r3, [r3, #0]
 800474c:	4618      	mov	r0, r3
 800474e:	3714      	adds	r7, #20
 8004750:	46bd      	mov	sp, r7
 8004752:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004756:	4770      	bx	lr

08004758 <xQueueGenericReset>:
 8004758:	b580      	push	{r7, lr}
 800475a:	b084      	sub	sp, #16
 800475c:	af00      	add	r7, sp, #0
 800475e:	6078      	str	r0, [r7, #4]
 8004760:	6039      	str	r1, [r7, #0]
 8004762:	687b      	ldr	r3, [r7, #4]
 8004764:	60fb      	str	r3, [r7, #12]
 8004766:	68fb      	ldr	r3, [r7, #12]
 8004768:	2b00      	cmp	r3, #0
 800476a:	d109      	bne.n	8004780 <xQueueGenericReset+0x28>
 800476c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004770:	f383 8811 	msr	BASEPRI, r3
 8004774:	f3bf 8f6f 	isb	sy
 8004778:	f3bf 8f4f 	dsb	sy
 800477c:	60bb      	str	r3, [r7, #8]
 800477e:	e7fe      	b.n	800477e <xQueueGenericReset+0x26>
 8004780:	f001 ffd4 	bl	800672c <vPortEnterCritical>
 8004784:	68fb      	ldr	r3, [r7, #12]
 8004786:	681a      	ldr	r2, [r3, #0]
 8004788:	68fb      	ldr	r3, [r7, #12]
 800478a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800478c:	68f9      	ldr	r1, [r7, #12]
 800478e:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8004790:	fb01 f303 	mul.w	r3, r1, r3
 8004794:	441a      	add	r2, r3
 8004796:	68fb      	ldr	r3, [r7, #12]
 8004798:	605a      	str	r2, [r3, #4]
 800479a:	68fb      	ldr	r3, [r7, #12]
 800479c:	2200      	movs	r2, #0
 800479e:	639a      	str	r2, [r3, #56]	; 0x38
 80047a0:	68fb      	ldr	r3, [r7, #12]
 80047a2:	681a      	ldr	r2, [r3, #0]
 80047a4:	68fb      	ldr	r3, [r7, #12]
 80047a6:	609a      	str	r2, [r3, #8]
 80047a8:	68fb      	ldr	r3, [r7, #12]
 80047aa:	681a      	ldr	r2, [r3, #0]
 80047ac:	68fb      	ldr	r3, [r7, #12]
 80047ae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80047b0:	3b01      	subs	r3, #1
 80047b2:	68f9      	ldr	r1, [r7, #12]
 80047b4:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80047b6:	fb01 f303 	mul.w	r3, r1, r3
 80047ba:	441a      	add	r2, r3
 80047bc:	68fb      	ldr	r3, [r7, #12]
 80047be:	60da      	str	r2, [r3, #12]
 80047c0:	68fb      	ldr	r3, [r7, #12]
 80047c2:	22ff      	movs	r2, #255	; 0xff
 80047c4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80047c8:	68fb      	ldr	r3, [r7, #12]
 80047ca:	22ff      	movs	r2, #255	; 0xff
 80047cc:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80047d0:	683b      	ldr	r3, [r7, #0]
 80047d2:	2b00      	cmp	r3, #0
 80047d4:	d114      	bne.n	8004800 <xQueueGenericReset+0xa8>
 80047d6:	68fb      	ldr	r3, [r7, #12]
 80047d8:	691b      	ldr	r3, [r3, #16]
 80047da:	2b00      	cmp	r3, #0
 80047dc:	d01a      	beq.n	8004814 <xQueueGenericReset+0xbc>
 80047de:	68fb      	ldr	r3, [r7, #12]
 80047e0:	3310      	adds	r3, #16
 80047e2:	4618      	mov	r0, r3
 80047e4:	f001 f8da 	bl	800599c <xTaskRemoveFromEventList>
 80047e8:	4603      	mov	r3, r0
 80047ea:	2b00      	cmp	r3, #0
 80047ec:	d012      	beq.n	8004814 <xQueueGenericReset+0xbc>
 80047ee:	4b0d      	ldr	r3, [pc, #52]	; (8004824 <xQueueGenericReset+0xcc>)
 80047f0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80047f4:	601a      	str	r2, [r3, #0]
 80047f6:	f3bf 8f4f 	dsb	sy
 80047fa:	f3bf 8f6f 	isb	sy
 80047fe:	e009      	b.n	8004814 <xQueueGenericReset+0xbc>
 8004800:	68fb      	ldr	r3, [r7, #12]
 8004802:	3310      	adds	r3, #16
 8004804:	4618      	mov	r0, r3
 8004806:	f7ff fef3 	bl	80045f0 <vListInitialise>
 800480a:	68fb      	ldr	r3, [r7, #12]
 800480c:	3324      	adds	r3, #36	; 0x24
 800480e:	4618      	mov	r0, r3
 8004810:	f7ff feee 	bl	80045f0 <vListInitialise>
 8004814:	f001 ffb8 	bl	8006788 <vPortExitCritical>
 8004818:	2301      	movs	r3, #1
 800481a:	4618      	mov	r0, r3
 800481c:	3710      	adds	r7, #16
 800481e:	46bd      	mov	sp, r7
 8004820:	bd80      	pop	{r7, pc}
 8004822:	bf00      	nop
 8004824:	e000ed04 	.word	0xe000ed04

08004828 <xQueueGenericCreateStatic>:
 8004828:	b580      	push	{r7, lr}
 800482a:	b08e      	sub	sp, #56	; 0x38
 800482c:	af02      	add	r7, sp, #8
 800482e:	60f8      	str	r0, [r7, #12]
 8004830:	60b9      	str	r1, [r7, #8]
 8004832:	607a      	str	r2, [r7, #4]
 8004834:	603b      	str	r3, [r7, #0]
 8004836:	68fb      	ldr	r3, [r7, #12]
 8004838:	2b00      	cmp	r3, #0
 800483a:	d109      	bne.n	8004850 <xQueueGenericCreateStatic+0x28>
 800483c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004840:	f383 8811 	msr	BASEPRI, r3
 8004844:	f3bf 8f6f 	isb	sy
 8004848:	f3bf 8f4f 	dsb	sy
 800484c:	62bb      	str	r3, [r7, #40]	; 0x28
 800484e:	e7fe      	b.n	800484e <xQueueGenericCreateStatic+0x26>
 8004850:	683b      	ldr	r3, [r7, #0]
 8004852:	2b00      	cmp	r3, #0
 8004854:	d109      	bne.n	800486a <xQueueGenericCreateStatic+0x42>
 8004856:	f04f 0350 	mov.w	r3, #80	; 0x50
 800485a:	f383 8811 	msr	BASEPRI, r3
 800485e:	f3bf 8f6f 	isb	sy
 8004862:	f3bf 8f4f 	dsb	sy
 8004866:	627b      	str	r3, [r7, #36]	; 0x24
 8004868:	e7fe      	b.n	8004868 <xQueueGenericCreateStatic+0x40>
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	2b00      	cmp	r3, #0
 800486e:	d002      	beq.n	8004876 <xQueueGenericCreateStatic+0x4e>
 8004870:	68bb      	ldr	r3, [r7, #8]
 8004872:	2b00      	cmp	r3, #0
 8004874:	d001      	beq.n	800487a <xQueueGenericCreateStatic+0x52>
 8004876:	2301      	movs	r3, #1
 8004878:	e000      	b.n	800487c <xQueueGenericCreateStatic+0x54>
 800487a:	2300      	movs	r3, #0
 800487c:	2b00      	cmp	r3, #0
 800487e:	d109      	bne.n	8004894 <xQueueGenericCreateStatic+0x6c>
 8004880:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004884:	f383 8811 	msr	BASEPRI, r3
 8004888:	f3bf 8f6f 	isb	sy
 800488c:	f3bf 8f4f 	dsb	sy
 8004890:	623b      	str	r3, [r7, #32]
 8004892:	e7fe      	b.n	8004892 <xQueueGenericCreateStatic+0x6a>
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	2b00      	cmp	r3, #0
 8004898:	d102      	bne.n	80048a0 <xQueueGenericCreateStatic+0x78>
 800489a:	68bb      	ldr	r3, [r7, #8]
 800489c:	2b00      	cmp	r3, #0
 800489e:	d101      	bne.n	80048a4 <xQueueGenericCreateStatic+0x7c>
 80048a0:	2301      	movs	r3, #1
 80048a2:	e000      	b.n	80048a6 <xQueueGenericCreateStatic+0x7e>
 80048a4:	2300      	movs	r3, #0
 80048a6:	2b00      	cmp	r3, #0
 80048a8:	d109      	bne.n	80048be <xQueueGenericCreateStatic+0x96>
 80048aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80048ae:	f383 8811 	msr	BASEPRI, r3
 80048b2:	f3bf 8f6f 	isb	sy
 80048b6:	f3bf 8f4f 	dsb	sy
 80048ba:	61fb      	str	r3, [r7, #28]
 80048bc:	e7fe      	b.n	80048bc <xQueueGenericCreateStatic+0x94>
 80048be:	2350      	movs	r3, #80	; 0x50
 80048c0:	617b      	str	r3, [r7, #20]
 80048c2:	697b      	ldr	r3, [r7, #20]
 80048c4:	2b50      	cmp	r3, #80	; 0x50
 80048c6:	d009      	beq.n	80048dc <xQueueGenericCreateStatic+0xb4>
 80048c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80048cc:	f383 8811 	msr	BASEPRI, r3
 80048d0:	f3bf 8f6f 	isb	sy
 80048d4:	f3bf 8f4f 	dsb	sy
 80048d8:	61bb      	str	r3, [r7, #24]
 80048da:	e7fe      	b.n	80048da <xQueueGenericCreateStatic+0xb2>
 80048dc:	683b      	ldr	r3, [r7, #0]
 80048de:	62fb      	str	r3, [r7, #44]	; 0x2c
 80048e0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80048e2:	2b00      	cmp	r3, #0
 80048e4:	d00d      	beq.n	8004902 <xQueueGenericCreateStatic+0xda>
 80048e6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80048e8:	2201      	movs	r2, #1
 80048ea:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80048ee:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 80048f2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80048f4:	9300      	str	r3, [sp, #0]
 80048f6:	4613      	mov	r3, r2
 80048f8:	687a      	ldr	r2, [r7, #4]
 80048fa:	68b9      	ldr	r1, [r7, #8]
 80048fc:	68f8      	ldr	r0, [r7, #12]
 80048fe:	f000 f805 	bl	800490c <prvInitialiseNewQueue>
 8004902:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004904:	4618      	mov	r0, r3
 8004906:	3730      	adds	r7, #48	; 0x30
 8004908:	46bd      	mov	sp, r7
 800490a:	bd80      	pop	{r7, pc}

0800490c <prvInitialiseNewQueue>:
 800490c:	b580      	push	{r7, lr}
 800490e:	b084      	sub	sp, #16
 8004910:	af00      	add	r7, sp, #0
 8004912:	60f8      	str	r0, [r7, #12]
 8004914:	60b9      	str	r1, [r7, #8]
 8004916:	607a      	str	r2, [r7, #4]
 8004918:	70fb      	strb	r3, [r7, #3]
 800491a:	68bb      	ldr	r3, [r7, #8]
 800491c:	2b00      	cmp	r3, #0
 800491e:	d103      	bne.n	8004928 <prvInitialiseNewQueue+0x1c>
 8004920:	69bb      	ldr	r3, [r7, #24]
 8004922:	69ba      	ldr	r2, [r7, #24]
 8004924:	601a      	str	r2, [r3, #0]
 8004926:	e002      	b.n	800492e <prvInitialiseNewQueue+0x22>
 8004928:	69bb      	ldr	r3, [r7, #24]
 800492a:	687a      	ldr	r2, [r7, #4]
 800492c:	601a      	str	r2, [r3, #0]
 800492e:	69bb      	ldr	r3, [r7, #24]
 8004930:	68fa      	ldr	r2, [r7, #12]
 8004932:	63da      	str	r2, [r3, #60]	; 0x3c
 8004934:	69bb      	ldr	r3, [r7, #24]
 8004936:	68ba      	ldr	r2, [r7, #8]
 8004938:	641a      	str	r2, [r3, #64]	; 0x40
 800493a:	2101      	movs	r1, #1
 800493c:	69b8      	ldr	r0, [r7, #24]
 800493e:	f7ff ff0b 	bl	8004758 <xQueueGenericReset>
 8004942:	69bb      	ldr	r3, [r7, #24]
 8004944:	78fa      	ldrb	r2, [r7, #3]
 8004946:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 800494a:	bf00      	nop
 800494c:	3710      	adds	r7, #16
 800494e:	46bd      	mov	sp, r7
 8004950:	bd80      	pop	{r7, pc}
	...

08004954 <xQueueGenericSend>:
 8004954:	b580      	push	{r7, lr}
 8004956:	b08e      	sub	sp, #56	; 0x38
 8004958:	af00      	add	r7, sp, #0
 800495a:	60f8      	str	r0, [r7, #12]
 800495c:	60b9      	str	r1, [r7, #8]
 800495e:	607a      	str	r2, [r7, #4]
 8004960:	603b      	str	r3, [r7, #0]
 8004962:	2300      	movs	r3, #0
 8004964:	637b      	str	r3, [r7, #52]	; 0x34
 8004966:	68fb      	ldr	r3, [r7, #12]
 8004968:	633b      	str	r3, [r7, #48]	; 0x30
 800496a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800496c:	2b00      	cmp	r3, #0
 800496e:	d109      	bne.n	8004984 <xQueueGenericSend+0x30>
 8004970:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004974:	f383 8811 	msr	BASEPRI, r3
 8004978:	f3bf 8f6f 	isb	sy
 800497c:	f3bf 8f4f 	dsb	sy
 8004980:	62bb      	str	r3, [r7, #40]	; 0x28
 8004982:	e7fe      	b.n	8004982 <xQueueGenericSend+0x2e>
 8004984:	68bb      	ldr	r3, [r7, #8]
 8004986:	2b00      	cmp	r3, #0
 8004988:	d103      	bne.n	8004992 <xQueueGenericSend+0x3e>
 800498a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800498c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800498e:	2b00      	cmp	r3, #0
 8004990:	d101      	bne.n	8004996 <xQueueGenericSend+0x42>
 8004992:	2301      	movs	r3, #1
 8004994:	e000      	b.n	8004998 <xQueueGenericSend+0x44>
 8004996:	2300      	movs	r3, #0
 8004998:	2b00      	cmp	r3, #0
 800499a:	d109      	bne.n	80049b0 <xQueueGenericSend+0x5c>
 800499c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80049a0:	f383 8811 	msr	BASEPRI, r3
 80049a4:	f3bf 8f6f 	isb	sy
 80049a8:	f3bf 8f4f 	dsb	sy
 80049ac:	627b      	str	r3, [r7, #36]	; 0x24
 80049ae:	e7fe      	b.n	80049ae <xQueueGenericSend+0x5a>
 80049b0:	683b      	ldr	r3, [r7, #0]
 80049b2:	2b02      	cmp	r3, #2
 80049b4:	d103      	bne.n	80049be <xQueueGenericSend+0x6a>
 80049b6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80049b8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80049ba:	2b01      	cmp	r3, #1
 80049bc:	d101      	bne.n	80049c2 <xQueueGenericSend+0x6e>
 80049be:	2301      	movs	r3, #1
 80049c0:	e000      	b.n	80049c4 <xQueueGenericSend+0x70>
 80049c2:	2300      	movs	r3, #0
 80049c4:	2b00      	cmp	r3, #0
 80049c6:	d109      	bne.n	80049dc <xQueueGenericSend+0x88>
 80049c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80049cc:	f383 8811 	msr	BASEPRI, r3
 80049d0:	f3bf 8f6f 	isb	sy
 80049d4:	f3bf 8f4f 	dsb	sy
 80049d8:	623b      	str	r3, [r7, #32]
 80049da:	e7fe      	b.n	80049da <xQueueGenericSend+0x86>
 80049dc:	f001 f99a 	bl	8005d14 <xTaskGetSchedulerState>
 80049e0:	4603      	mov	r3, r0
 80049e2:	2b00      	cmp	r3, #0
 80049e4:	d102      	bne.n	80049ec <xQueueGenericSend+0x98>
 80049e6:	687b      	ldr	r3, [r7, #4]
 80049e8:	2b00      	cmp	r3, #0
 80049ea:	d101      	bne.n	80049f0 <xQueueGenericSend+0x9c>
 80049ec:	2301      	movs	r3, #1
 80049ee:	e000      	b.n	80049f2 <xQueueGenericSend+0x9e>
 80049f0:	2300      	movs	r3, #0
 80049f2:	2b00      	cmp	r3, #0
 80049f4:	d109      	bne.n	8004a0a <xQueueGenericSend+0xb6>
 80049f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80049fa:	f383 8811 	msr	BASEPRI, r3
 80049fe:	f3bf 8f6f 	isb	sy
 8004a02:	f3bf 8f4f 	dsb	sy
 8004a06:	61fb      	str	r3, [r7, #28]
 8004a08:	e7fe      	b.n	8004a08 <xQueueGenericSend+0xb4>
 8004a0a:	f001 fe8f 	bl	800672c <vPortEnterCritical>
 8004a0e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004a10:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004a12:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004a14:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004a16:	429a      	cmp	r2, r3
 8004a18:	d302      	bcc.n	8004a20 <xQueueGenericSend+0xcc>
 8004a1a:	683b      	ldr	r3, [r7, #0]
 8004a1c:	2b02      	cmp	r3, #2
 8004a1e:	d129      	bne.n	8004a74 <xQueueGenericSend+0x120>
 8004a20:	683a      	ldr	r2, [r7, #0]
 8004a22:	68b9      	ldr	r1, [r7, #8]
 8004a24:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004a26:	f000 f9ff 	bl	8004e28 <prvCopyDataToQueue>
 8004a2a:	62f8      	str	r0, [r7, #44]	; 0x2c
 8004a2c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004a2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a30:	2b00      	cmp	r3, #0
 8004a32:	d010      	beq.n	8004a56 <xQueueGenericSend+0x102>
 8004a34:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004a36:	3324      	adds	r3, #36	; 0x24
 8004a38:	4618      	mov	r0, r3
 8004a3a:	f000 ffaf 	bl	800599c <xTaskRemoveFromEventList>
 8004a3e:	4603      	mov	r3, r0
 8004a40:	2b00      	cmp	r3, #0
 8004a42:	d013      	beq.n	8004a6c <xQueueGenericSend+0x118>
 8004a44:	4b3f      	ldr	r3, [pc, #252]	; (8004b44 <xQueueGenericSend+0x1f0>)
 8004a46:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004a4a:	601a      	str	r2, [r3, #0]
 8004a4c:	f3bf 8f4f 	dsb	sy
 8004a50:	f3bf 8f6f 	isb	sy
 8004a54:	e00a      	b.n	8004a6c <xQueueGenericSend+0x118>
 8004a56:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004a58:	2b00      	cmp	r3, #0
 8004a5a:	d007      	beq.n	8004a6c <xQueueGenericSend+0x118>
 8004a5c:	4b39      	ldr	r3, [pc, #228]	; (8004b44 <xQueueGenericSend+0x1f0>)
 8004a5e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004a62:	601a      	str	r2, [r3, #0]
 8004a64:	f3bf 8f4f 	dsb	sy
 8004a68:	f3bf 8f6f 	isb	sy
 8004a6c:	f001 fe8c 	bl	8006788 <vPortExitCritical>
 8004a70:	2301      	movs	r3, #1
 8004a72:	e063      	b.n	8004b3c <xQueueGenericSend+0x1e8>
 8004a74:	687b      	ldr	r3, [r7, #4]
 8004a76:	2b00      	cmp	r3, #0
 8004a78:	d103      	bne.n	8004a82 <xQueueGenericSend+0x12e>
 8004a7a:	f001 fe85 	bl	8006788 <vPortExitCritical>
 8004a7e:	2300      	movs	r3, #0
 8004a80:	e05c      	b.n	8004b3c <xQueueGenericSend+0x1e8>
 8004a82:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004a84:	2b00      	cmp	r3, #0
 8004a86:	d106      	bne.n	8004a96 <xQueueGenericSend+0x142>
 8004a88:	f107 0314 	add.w	r3, r7, #20
 8004a8c:	4618      	mov	r0, r3
 8004a8e:	f000 ffe7 	bl	8005a60 <vTaskInternalSetTimeOutState>
 8004a92:	2301      	movs	r3, #1
 8004a94:	637b      	str	r3, [r7, #52]	; 0x34
 8004a96:	f001 fe77 	bl	8006788 <vPortExitCritical>
 8004a9a:	f000 fd5d 	bl	8005558 <vTaskSuspendAll>
 8004a9e:	f001 fe45 	bl	800672c <vPortEnterCritical>
 8004aa2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004aa4:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8004aa8:	b25b      	sxtb	r3, r3
 8004aaa:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004aae:	d103      	bne.n	8004ab8 <xQueueGenericSend+0x164>
 8004ab0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004ab2:	2200      	movs	r2, #0
 8004ab4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004ab8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004aba:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004abe:	b25b      	sxtb	r3, r3
 8004ac0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004ac4:	d103      	bne.n	8004ace <xQueueGenericSend+0x17a>
 8004ac6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004ac8:	2200      	movs	r2, #0
 8004aca:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004ace:	f001 fe5b 	bl	8006788 <vPortExitCritical>
 8004ad2:	1d3a      	adds	r2, r7, #4
 8004ad4:	f107 0314 	add.w	r3, r7, #20
 8004ad8:	4611      	mov	r1, r2
 8004ada:	4618      	mov	r0, r3
 8004adc:	f000 ffd6 	bl	8005a8c <xTaskCheckForTimeOut>
 8004ae0:	4603      	mov	r3, r0
 8004ae2:	2b00      	cmp	r3, #0
 8004ae4:	d124      	bne.n	8004b30 <xQueueGenericSend+0x1dc>
 8004ae6:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004ae8:	f000 fa96 	bl	8005018 <prvIsQueueFull>
 8004aec:	4603      	mov	r3, r0
 8004aee:	2b00      	cmp	r3, #0
 8004af0:	d018      	beq.n	8004b24 <xQueueGenericSend+0x1d0>
 8004af2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004af4:	3310      	adds	r3, #16
 8004af6:	687a      	ldr	r2, [r7, #4]
 8004af8:	4611      	mov	r1, r2
 8004afa:	4618      	mov	r0, r3
 8004afc:	f000 ff00 	bl	8005900 <vTaskPlaceOnEventList>
 8004b00:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004b02:	f000 fa21 	bl	8004f48 <prvUnlockQueue>
 8004b06:	f000 fd35 	bl	8005574 <xTaskResumeAll>
 8004b0a:	4603      	mov	r3, r0
 8004b0c:	2b00      	cmp	r3, #0
 8004b0e:	f47f af7c 	bne.w	8004a0a <xQueueGenericSend+0xb6>
 8004b12:	4b0c      	ldr	r3, [pc, #48]	; (8004b44 <xQueueGenericSend+0x1f0>)
 8004b14:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004b18:	601a      	str	r2, [r3, #0]
 8004b1a:	f3bf 8f4f 	dsb	sy
 8004b1e:	f3bf 8f6f 	isb	sy
 8004b22:	e772      	b.n	8004a0a <xQueueGenericSend+0xb6>
 8004b24:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004b26:	f000 fa0f 	bl	8004f48 <prvUnlockQueue>
 8004b2a:	f000 fd23 	bl	8005574 <xTaskResumeAll>
 8004b2e:	e76c      	b.n	8004a0a <xQueueGenericSend+0xb6>
 8004b30:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004b32:	f000 fa09 	bl	8004f48 <prvUnlockQueue>
 8004b36:	f000 fd1d 	bl	8005574 <xTaskResumeAll>
 8004b3a:	2300      	movs	r3, #0
 8004b3c:	4618      	mov	r0, r3
 8004b3e:	3738      	adds	r7, #56	; 0x38
 8004b40:	46bd      	mov	sp, r7
 8004b42:	bd80      	pop	{r7, pc}
 8004b44:	e000ed04 	.word	0xe000ed04

08004b48 <xQueueGenericSendFromISR>:
 8004b48:	b580      	push	{r7, lr}
 8004b4a:	b08e      	sub	sp, #56	; 0x38
 8004b4c:	af00      	add	r7, sp, #0
 8004b4e:	60f8      	str	r0, [r7, #12]
 8004b50:	60b9      	str	r1, [r7, #8]
 8004b52:	607a      	str	r2, [r7, #4]
 8004b54:	603b      	str	r3, [r7, #0]
 8004b56:	68fb      	ldr	r3, [r7, #12]
 8004b58:	633b      	str	r3, [r7, #48]	; 0x30
 8004b5a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004b5c:	2b00      	cmp	r3, #0
 8004b5e:	d109      	bne.n	8004b74 <xQueueGenericSendFromISR+0x2c>
 8004b60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004b64:	f383 8811 	msr	BASEPRI, r3
 8004b68:	f3bf 8f6f 	isb	sy
 8004b6c:	f3bf 8f4f 	dsb	sy
 8004b70:	627b      	str	r3, [r7, #36]	; 0x24
 8004b72:	e7fe      	b.n	8004b72 <xQueueGenericSendFromISR+0x2a>
 8004b74:	68bb      	ldr	r3, [r7, #8]
 8004b76:	2b00      	cmp	r3, #0
 8004b78:	d103      	bne.n	8004b82 <xQueueGenericSendFromISR+0x3a>
 8004b7a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004b7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b7e:	2b00      	cmp	r3, #0
 8004b80:	d101      	bne.n	8004b86 <xQueueGenericSendFromISR+0x3e>
 8004b82:	2301      	movs	r3, #1
 8004b84:	e000      	b.n	8004b88 <xQueueGenericSendFromISR+0x40>
 8004b86:	2300      	movs	r3, #0
 8004b88:	2b00      	cmp	r3, #0
 8004b8a:	d109      	bne.n	8004ba0 <xQueueGenericSendFromISR+0x58>
 8004b8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004b90:	f383 8811 	msr	BASEPRI, r3
 8004b94:	f3bf 8f6f 	isb	sy
 8004b98:	f3bf 8f4f 	dsb	sy
 8004b9c:	623b      	str	r3, [r7, #32]
 8004b9e:	e7fe      	b.n	8004b9e <xQueueGenericSendFromISR+0x56>
 8004ba0:	683b      	ldr	r3, [r7, #0]
 8004ba2:	2b02      	cmp	r3, #2
 8004ba4:	d103      	bne.n	8004bae <xQueueGenericSendFromISR+0x66>
 8004ba6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004ba8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004baa:	2b01      	cmp	r3, #1
 8004bac:	d101      	bne.n	8004bb2 <xQueueGenericSendFromISR+0x6a>
 8004bae:	2301      	movs	r3, #1
 8004bb0:	e000      	b.n	8004bb4 <xQueueGenericSendFromISR+0x6c>
 8004bb2:	2300      	movs	r3, #0
 8004bb4:	2b00      	cmp	r3, #0
 8004bb6:	d109      	bne.n	8004bcc <xQueueGenericSendFromISR+0x84>
 8004bb8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004bbc:	f383 8811 	msr	BASEPRI, r3
 8004bc0:	f3bf 8f6f 	isb	sy
 8004bc4:	f3bf 8f4f 	dsb	sy
 8004bc8:	61fb      	str	r3, [r7, #28]
 8004bca:	e7fe      	b.n	8004bca <xQueueGenericSendFromISR+0x82>
 8004bcc:	f001 fe8a 	bl	80068e4 <vPortValidateInterruptPriority>
 8004bd0:	f3ef 8211 	mrs	r2, BASEPRI
 8004bd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004bd8:	f383 8811 	msr	BASEPRI, r3
 8004bdc:	f3bf 8f6f 	isb	sy
 8004be0:	f3bf 8f4f 	dsb	sy
 8004be4:	61ba      	str	r2, [r7, #24]
 8004be6:	617b      	str	r3, [r7, #20]
 8004be8:	69bb      	ldr	r3, [r7, #24]
 8004bea:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004bec:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004bee:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004bf0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004bf2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004bf4:	429a      	cmp	r2, r3
 8004bf6:	d302      	bcc.n	8004bfe <xQueueGenericSendFromISR+0xb6>
 8004bf8:	683b      	ldr	r3, [r7, #0]
 8004bfa:	2b02      	cmp	r3, #2
 8004bfc:	d12c      	bne.n	8004c58 <xQueueGenericSendFromISR+0x110>
 8004bfe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c00:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004c04:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8004c08:	683a      	ldr	r2, [r7, #0]
 8004c0a:	68b9      	ldr	r1, [r7, #8]
 8004c0c:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004c0e:	f000 f90b 	bl	8004e28 <prvCopyDataToQueue>
 8004c12:	f997 302b 	ldrsb.w	r3, [r7, #43]	; 0x2b
 8004c16:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004c1a:	d112      	bne.n	8004c42 <xQueueGenericSendFromISR+0xfa>
 8004c1c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c20:	2b00      	cmp	r3, #0
 8004c22:	d016      	beq.n	8004c52 <xQueueGenericSendFromISR+0x10a>
 8004c24:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c26:	3324      	adds	r3, #36	; 0x24
 8004c28:	4618      	mov	r0, r3
 8004c2a:	f000 feb7 	bl	800599c <xTaskRemoveFromEventList>
 8004c2e:	4603      	mov	r3, r0
 8004c30:	2b00      	cmp	r3, #0
 8004c32:	d00e      	beq.n	8004c52 <xQueueGenericSendFromISR+0x10a>
 8004c34:	687b      	ldr	r3, [r7, #4]
 8004c36:	2b00      	cmp	r3, #0
 8004c38:	d00b      	beq.n	8004c52 <xQueueGenericSendFromISR+0x10a>
 8004c3a:	687b      	ldr	r3, [r7, #4]
 8004c3c:	2201      	movs	r2, #1
 8004c3e:	601a      	str	r2, [r3, #0]
 8004c40:	e007      	b.n	8004c52 <xQueueGenericSendFromISR+0x10a>
 8004c42:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8004c46:	3301      	adds	r3, #1
 8004c48:	b2db      	uxtb	r3, r3
 8004c4a:	b25a      	sxtb	r2, r3
 8004c4c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c4e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004c52:	2301      	movs	r3, #1
 8004c54:	637b      	str	r3, [r7, #52]	; 0x34
 8004c56:	e001      	b.n	8004c5c <xQueueGenericSendFromISR+0x114>
 8004c58:	2300      	movs	r3, #0
 8004c5a:	637b      	str	r3, [r7, #52]	; 0x34
 8004c5c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004c5e:	613b      	str	r3, [r7, #16]
 8004c60:	693b      	ldr	r3, [r7, #16]
 8004c62:	f383 8811 	msr	BASEPRI, r3
 8004c66:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004c68:	4618      	mov	r0, r3
 8004c6a:	3738      	adds	r7, #56	; 0x38
 8004c6c:	46bd      	mov	sp, r7
 8004c6e:	bd80      	pop	{r7, pc}

08004c70 <xQueueReceive>:
 8004c70:	b580      	push	{r7, lr}
 8004c72:	b08c      	sub	sp, #48	; 0x30
 8004c74:	af00      	add	r7, sp, #0
 8004c76:	60f8      	str	r0, [r7, #12]
 8004c78:	60b9      	str	r1, [r7, #8]
 8004c7a:	607a      	str	r2, [r7, #4]
 8004c7c:	2300      	movs	r3, #0
 8004c7e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004c80:	68fb      	ldr	r3, [r7, #12]
 8004c82:	62bb      	str	r3, [r7, #40]	; 0x28
 8004c84:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004c86:	2b00      	cmp	r3, #0
 8004c88:	d109      	bne.n	8004c9e <xQueueReceive+0x2e>
 8004c8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004c8e:	f383 8811 	msr	BASEPRI, r3
 8004c92:	f3bf 8f6f 	isb	sy
 8004c96:	f3bf 8f4f 	dsb	sy
 8004c9a:	623b      	str	r3, [r7, #32]
 8004c9c:	e7fe      	b.n	8004c9c <xQueueReceive+0x2c>
 8004c9e:	68bb      	ldr	r3, [r7, #8]
 8004ca0:	2b00      	cmp	r3, #0
 8004ca2:	d103      	bne.n	8004cac <xQueueReceive+0x3c>
 8004ca4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004ca6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ca8:	2b00      	cmp	r3, #0
 8004caa:	d101      	bne.n	8004cb0 <xQueueReceive+0x40>
 8004cac:	2301      	movs	r3, #1
 8004cae:	e000      	b.n	8004cb2 <xQueueReceive+0x42>
 8004cb0:	2300      	movs	r3, #0
 8004cb2:	2b00      	cmp	r3, #0
 8004cb4:	d109      	bne.n	8004cca <xQueueReceive+0x5a>
 8004cb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004cba:	f383 8811 	msr	BASEPRI, r3
 8004cbe:	f3bf 8f6f 	isb	sy
 8004cc2:	f3bf 8f4f 	dsb	sy
 8004cc6:	61fb      	str	r3, [r7, #28]
 8004cc8:	e7fe      	b.n	8004cc8 <xQueueReceive+0x58>
 8004cca:	f001 f823 	bl	8005d14 <xTaskGetSchedulerState>
 8004cce:	4603      	mov	r3, r0
 8004cd0:	2b00      	cmp	r3, #0
 8004cd2:	d102      	bne.n	8004cda <xQueueReceive+0x6a>
 8004cd4:	687b      	ldr	r3, [r7, #4]
 8004cd6:	2b00      	cmp	r3, #0
 8004cd8:	d101      	bne.n	8004cde <xQueueReceive+0x6e>
 8004cda:	2301      	movs	r3, #1
 8004cdc:	e000      	b.n	8004ce0 <xQueueReceive+0x70>
 8004cde:	2300      	movs	r3, #0
 8004ce0:	2b00      	cmp	r3, #0
 8004ce2:	d109      	bne.n	8004cf8 <xQueueReceive+0x88>
 8004ce4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004ce8:	f383 8811 	msr	BASEPRI, r3
 8004cec:	f3bf 8f6f 	isb	sy
 8004cf0:	f3bf 8f4f 	dsb	sy
 8004cf4:	61bb      	str	r3, [r7, #24]
 8004cf6:	e7fe      	b.n	8004cf6 <xQueueReceive+0x86>
 8004cf8:	f001 fd18 	bl	800672c <vPortEnterCritical>
 8004cfc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004cfe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004d00:	627b      	str	r3, [r7, #36]	; 0x24
 8004d02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004d04:	2b00      	cmp	r3, #0
 8004d06:	d01f      	beq.n	8004d48 <xQueueReceive+0xd8>
 8004d08:	68b9      	ldr	r1, [r7, #8]
 8004d0a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004d0c:	f000 f8f6 	bl	8004efc <prvCopyDataFromQueue>
 8004d10:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004d12:	1e5a      	subs	r2, r3, #1
 8004d14:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004d16:	639a      	str	r2, [r3, #56]	; 0x38
 8004d18:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004d1a:	691b      	ldr	r3, [r3, #16]
 8004d1c:	2b00      	cmp	r3, #0
 8004d1e:	d00f      	beq.n	8004d40 <xQueueReceive+0xd0>
 8004d20:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004d22:	3310      	adds	r3, #16
 8004d24:	4618      	mov	r0, r3
 8004d26:	f000 fe39 	bl	800599c <xTaskRemoveFromEventList>
 8004d2a:	4603      	mov	r3, r0
 8004d2c:	2b00      	cmp	r3, #0
 8004d2e:	d007      	beq.n	8004d40 <xQueueReceive+0xd0>
 8004d30:	4b3c      	ldr	r3, [pc, #240]	; (8004e24 <xQueueReceive+0x1b4>)
 8004d32:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004d36:	601a      	str	r2, [r3, #0]
 8004d38:	f3bf 8f4f 	dsb	sy
 8004d3c:	f3bf 8f6f 	isb	sy
 8004d40:	f001 fd22 	bl	8006788 <vPortExitCritical>
 8004d44:	2301      	movs	r3, #1
 8004d46:	e069      	b.n	8004e1c <xQueueReceive+0x1ac>
 8004d48:	687b      	ldr	r3, [r7, #4]
 8004d4a:	2b00      	cmp	r3, #0
 8004d4c:	d103      	bne.n	8004d56 <xQueueReceive+0xe6>
 8004d4e:	f001 fd1b 	bl	8006788 <vPortExitCritical>
 8004d52:	2300      	movs	r3, #0
 8004d54:	e062      	b.n	8004e1c <xQueueReceive+0x1ac>
 8004d56:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004d58:	2b00      	cmp	r3, #0
 8004d5a:	d106      	bne.n	8004d6a <xQueueReceive+0xfa>
 8004d5c:	f107 0310 	add.w	r3, r7, #16
 8004d60:	4618      	mov	r0, r3
 8004d62:	f000 fe7d 	bl	8005a60 <vTaskInternalSetTimeOutState>
 8004d66:	2301      	movs	r3, #1
 8004d68:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004d6a:	f001 fd0d 	bl	8006788 <vPortExitCritical>
 8004d6e:	f000 fbf3 	bl	8005558 <vTaskSuspendAll>
 8004d72:	f001 fcdb 	bl	800672c <vPortEnterCritical>
 8004d76:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004d78:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8004d7c:	b25b      	sxtb	r3, r3
 8004d7e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004d82:	d103      	bne.n	8004d8c <xQueueReceive+0x11c>
 8004d84:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004d86:	2200      	movs	r2, #0
 8004d88:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004d8c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004d8e:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004d92:	b25b      	sxtb	r3, r3
 8004d94:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004d98:	d103      	bne.n	8004da2 <xQueueReceive+0x132>
 8004d9a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004d9c:	2200      	movs	r2, #0
 8004d9e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004da2:	f001 fcf1 	bl	8006788 <vPortExitCritical>
 8004da6:	1d3a      	adds	r2, r7, #4
 8004da8:	f107 0310 	add.w	r3, r7, #16
 8004dac:	4611      	mov	r1, r2
 8004dae:	4618      	mov	r0, r3
 8004db0:	f000 fe6c 	bl	8005a8c <xTaskCheckForTimeOut>
 8004db4:	4603      	mov	r3, r0
 8004db6:	2b00      	cmp	r3, #0
 8004db8:	d123      	bne.n	8004e02 <xQueueReceive+0x192>
 8004dba:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004dbc:	f000 f916 	bl	8004fec <prvIsQueueEmpty>
 8004dc0:	4603      	mov	r3, r0
 8004dc2:	2b00      	cmp	r3, #0
 8004dc4:	d017      	beq.n	8004df6 <xQueueReceive+0x186>
 8004dc6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004dc8:	3324      	adds	r3, #36	; 0x24
 8004dca:	687a      	ldr	r2, [r7, #4]
 8004dcc:	4611      	mov	r1, r2
 8004dce:	4618      	mov	r0, r3
 8004dd0:	f000 fd96 	bl	8005900 <vTaskPlaceOnEventList>
 8004dd4:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004dd6:	f000 f8b7 	bl	8004f48 <prvUnlockQueue>
 8004dda:	f000 fbcb 	bl	8005574 <xTaskResumeAll>
 8004dde:	4603      	mov	r3, r0
 8004de0:	2b00      	cmp	r3, #0
 8004de2:	d189      	bne.n	8004cf8 <xQueueReceive+0x88>
 8004de4:	4b0f      	ldr	r3, [pc, #60]	; (8004e24 <xQueueReceive+0x1b4>)
 8004de6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004dea:	601a      	str	r2, [r3, #0]
 8004dec:	f3bf 8f4f 	dsb	sy
 8004df0:	f3bf 8f6f 	isb	sy
 8004df4:	e780      	b.n	8004cf8 <xQueueReceive+0x88>
 8004df6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004df8:	f000 f8a6 	bl	8004f48 <prvUnlockQueue>
 8004dfc:	f000 fbba 	bl	8005574 <xTaskResumeAll>
 8004e00:	e77a      	b.n	8004cf8 <xQueueReceive+0x88>
 8004e02:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004e04:	f000 f8a0 	bl	8004f48 <prvUnlockQueue>
 8004e08:	f000 fbb4 	bl	8005574 <xTaskResumeAll>
 8004e0c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004e0e:	f000 f8ed 	bl	8004fec <prvIsQueueEmpty>
 8004e12:	4603      	mov	r3, r0
 8004e14:	2b00      	cmp	r3, #0
 8004e16:	f43f af6f 	beq.w	8004cf8 <xQueueReceive+0x88>
 8004e1a:	2300      	movs	r3, #0
 8004e1c:	4618      	mov	r0, r3
 8004e1e:	3730      	adds	r7, #48	; 0x30
 8004e20:	46bd      	mov	sp, r7
 8004e22:	bd80      	pop	{r7, pc}
 8004e24:	e000ed04 	.word	0xe000ed04

08004e28 <prvCopyDataToQueue>:
 8004e28:	b580      	push	{r7, lr}
 8004e2a:	b086      	sub	sp, #24
 8004e2c:	af00      	add	r7, sp, #0
 8004e2e:	60f8      	str	r0, [r7, #12]
 8004e30:	60b9      	str	r1, [r7, #8]
 8004e32:	607a      	str	r2, [r7, #4]
 8004e34:	2300      	movs	r3, #0
 8004e36:	617b      	str	r3, [r7, #20]
 8004e38:	68fb      	ldr	r3, [r7, #12]
 8004e3a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004e3c:	613b      	str	r3, [r7, #16]
 8004e3e:	68fb      	ldr	r3, [r7, #12]
 8004e40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e42:	2b00      	cmp	r3, #0
 8004e44:	d10d      	bne.n	8004e62 <prvCopyDataToQueue+0x3a>
 8004e46:	68fb      	ldr	r3, [r7, #12]
 8004e48:	681b      	ldr	r3, [r3, #0]
 8004e4a:	2b00      	cmp	r3, #0
 8004e4c:	d14d      	bne.n	8004eea <prvCopyDataToQueue+0xc2>
 8004e4e:	68fb      	ldr	r3, [r7, #12]
 8004e50:	685b      	ldr	r3, [r3, #4]
 8004e52:	4618      	mov	r0, r3
 8004e54:	f000 ff7c 	bl	8005d50 <xTaskPriorityDisinherit>
 8004e58:	6178      	str	r0, [r7, #20]
 8004e5a:	68fb      	ldr	r3, [r7, #12]
 8004e5c:	2200      	movs	r2, #0
 8004e5e:	605a      	str	r2, [r3, #4]
 8004e60:	e043      	b.n	8004eea <prvCopyDataToQueue+0xc2>
 8004e62:	687b      	ldr	r3, [r7, #4]
 8004e64:	2b00      	cmp	r3, #0
 8004e66:	d119      	bne.n	8004e9c <prvCopyDataToQueue+0x74>
 8004e68:	68fb      	ldr	r3, [r7, #12]
 8004e6a:	6898      	ldr	r0, [r3, #8]
 8004e6c:	68fb      	ldr	r3, [r7, #12]
 8004e6e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e70:	461a      	mov	r2, r3
 8004e72:	68b9      	ldr	r1, [r7, #8]
 8004e74:	f001 ff74 	bl	8006d60 <memcpy>
 8004e78:	68fb      	ldr	r3, [r7, #12]
 8004e7a:	689a      	ldr	r2, [r3, #8]
 8004e7c:	68fb      	ldr	r3, [r7, #12]
 8004e7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e80:	441a      	add	r2, r3
 8004e82:	68fb      	ldr	r3, [r7, #12]
 8004e84:	609a      	str	r2, [r3, #8]
 8004e86:	68fb      	ldr	r3, [r7, #12]
 8004e88:	689a      	ldr	r2, [r3, #8]
 8004e8a:	68fb      	ldr	r3, [r7, #12]
 8004e8c:	685b      	ldr	r3, [r3, #4]
 8004e8e:	429a      	cmp	r2, r3
 8004e90:	d32b      	bcc.n	8004eea <prvCopyDataToQueue+0xc2>
 8004e92:	68fb      	ldr	r3, [r7, #12]
 8004e94:	681a      	ldr	r2, [r3, #0]
 8004e96:	68fb      	ldr	r3, [r7, #12]
 8004e98:	609a      	str	r2, [r3, #8]
 8004e9a:	e026      	b.n	8004eea <prvCopyDataToQueue+0xc2>
 8004e9c:	68fb      	ldr	r3, [r7, #12]
 8004e9e:	68d8      	ldr	r0, [r3, #12]
 8004ea0:	68fb      	ldr	r3, [r7, #12]
 8004ea2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ea4:	461a      	mov	r2, r3
 8004ea6:	68b9      	ldr	r1, [r7, #8]
 8004ea8:	f001 ff5a 	bl	8006d60 <memcpy>
 8004eac:	68fb      	ldr	r3, [r7, #12]
 8004eae:	68da      	ldr	r2, [r3, #12]
 8004eb0:	68fb      	ldr	r3, [r7, #12]
 8004eb2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004eb4:	425b      	negs	r3, r3
 8004eb6:	441a      	add	r2, r3
 8004eb8:	68fb      	ldr	r3, [r7, #12]
 8004eba:	60da      	str	r2, [r3, #12]
 8004ebc:	68fb      	ldr	r3, [r7, #12]
 8004ebe:	68da      	ldr	r2, [r3, #12]
 8004ec0:	68fb      	ldr	r3, [r7, #12]
 8004ec2:	681b      	ldr	r3, [r3, #0]
 8004ec4:	429a      	cmp	r2, r3
 8004ec6:	d207      	bcs.n	8004ed8 <prvCopyDataToQueue+0xb0>
 8004ec8:	68fb      	ldr	r3, [r7, #12]
 8004eca:	685a      	ldr	r2, [r3, #4]
 8004ecc:	68fb      	ldr	r3, [r7, #12]
 8004ece:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ed0:	425b      	negs	r3, r3
 8004ed2:	441a      	add	r2, r3
 8004ed4:	68fb      	ldr	r3, [r7, #12]
 8004ed6:	60da      	str	r2, [r3, #12]
 8004ed8:	687b      	ldr	r3, [r7, #4]
 8004eda:	2b02      	cmp	r3, #2
 8004edc:	d105      	bne.n	8004eea <prvCopyDataToQueue+0xc2>
 8004ede:	693b      	ldr	r3, [r7, #16]
 8004ee0:	2b00      	cmp	r3, #0
 8004ee2:	d002      	beq.n	8004eea <prvCopyDataToQueue+0xc2>
 8004ee4:	693b      	ldr	r3, [r7, #16]
 8004ee6:	3b01      	subs	r3, #1
 8004ee8:	613b      	str	r3, [r7, #16]
 8004eea:	693b      	ldr	r3, [r7, #16]
 8004eec:	1c5a      	adds	r2, r3, #1
 8004eee:	68fb      	ldr	r3, [r7, #12]
 8004ef0:	639a      	str	r2, [r3, #56]	; 0x38
 8004ef2:	697b      	ldr	r3, [r7, #20]
 8004ef4:	4618      	mov	r0, r3
 8004ef6:	3718      	adds	r7, #24
 8004ef8:	46bd      	mov	sp, r7
 8004efa:	bd80      	pop	{r7, pc}

08004efc <prvCopyDataFromQueue>:
 8004efc:	b580      	push	{r7, lr}
 8004efe:	b082      	sub	sp, #8
 8004f00:	af00      	add	r7, sp, #0
 8004f02:	6078      	str	r0, [r7, #4]
 8004f04:	6039      	str	r1, [r7, #0]
 8004f06:	687b      	ldr	r3, [r7, #4]
 8004f08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f0a:	2b00      	cmp	r3, #0
 8004f0c:	d018      	beq.n	8004f40 <prvCopyDataFromQueue+0x44>
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	68da      	ldr	r2, [r3, #12]
 8004f12:	687b      	ldr	r3, [r7, #4]
 8004f14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f16:	441a      	add	r2, r3
 8004f18:	687b      	ldr	r3, [r7, #4]
 8004f1a:	60da      	str	r2, [r3, #12]
 8004f1c:	687b      	ldr	r3, [r7, #4]
 8004f1e:	68da      	ldr	r2, [r3, #12]
 8004f20:	687b      	ldr	r3, [r7, #4]
 8004f22:	685b      	ldr	r3, [r3, #4]
 8004f24:	429a      	cmp	r2, r3
 8004f26:	d303      	bcc.n	8004f30 <prvCopyDataFromQueue+0x34>
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	681a      	ldr	r2, [r3, #0]
 8004f2c:	687b      	ldr	r3, [r7, #4]
 8004f2e:	60da      	str	r2, [r3, #12]
 8004f30:	687b      	ldr	r3, [r7, #4]
 8004f32:	68d9      	ldr	r1, [r3, #12]
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f38:	461a      	mov	r2, r3
 8004f3a:	6838      	ldr	r0, [r7, #0]
 8004f3c:	f001 ff10 	bl	8006d60 <memcpy>
 8004f40:	bf00      	nop
 8004f42:	3708      	adds	r7, #8
 8004f44:	46bd      	mov	sp, r7
 8004f46:	bd80      	pop	{r7, pc}

08004f48 <prvUnlockQueue>:
 8004f48:	b580      	push	{r7, lr}
 8004f4a:	b084      	sub	sp, #16
 8004f4c:	af00      	add	r7, sp, #0
 8004f4e:	6078      	str	r0, [r7, #4]
 8004f50:	f001 fbec 	bl	800672c <vPortEnterCritical>
 8004f54:	687b      	ldr	r3, [r7, #4]
 8004f56:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004f5a:	73fb      	strb	r3, [r7, #15]
 8004f5c:	e011      	b.n	8004f82 <prvUnlockQueue+0x3a>
 8004f5e:	687b      	ldr	r3, [r7, #4]
 8004f60:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f62:	2b00      	cmp	r3, #0
 8004f64:	d012      	beq.n	8004f8c <prvUnlockQueue+0x44>
 8004f66:	687b      	ldr	r3, [r7, #4]
 8004f68:	3324      	adds	r3, #36	; 0x24
 8004f6a:	4618      	mov	r0, r3
 8004f6c:	f000 fd16 	bl	800599c <xTaskRemoveFromEventList>
 8004f70:	4603      	mov	r3, r0
 8004f72:	2b00      	cmp	r3, #0
 8004f74:	d001      	beq.n	8004f7a <prvUnlockQueue+0x32>
 8004f76:	f000 fde9 	bl	8005b4c <vTaskMissedYield>
 8004f7a:	7bfb      	ldrb	r3, [r7, #15]
 8004f7c:	3b01      	subs	r3, #1
 8004f7e:	b2db      	uxtb	r3, r3
 8004f80:	73fb      	strb	r3, [r7, #15]
 8004f82:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004f86:	2b00      	cmp	r3, #0
 8004f88:	dce9      	bgt.n	8004f5e <prvUnlockQueue+0x16>
 8004f8a:	e000      	b.n	8004f8e <prvUnlockQueue+0x46>
 8004f8c:	bf00      	nop
 8004f8e:	687b      	ldr	r3, [r7, #4]
 8004f90:	22ff      	movs	r2, #255	; 0xff
 8004f92:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004f96:	f001 fbf7 	bl	8006788 <vPortExitCritical>
 8004f9a:	f001 fbc7 	bl	800672c <vPortEnterCritical>
 8004f9e:	687b      	ldr	r3, [r7, #4]
 8004fa0:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8004fa4:	73bb      	strb	r3, [r7, #14]
 8004fa6:	e011      	b.n	8004fcc <prvUnlockQueue+0x84>
 8004fa8:	687b      	ldr	r3, [r7, #4]
 8004faa:	691b      	ldr	r3, [r3, #16]
 8004fac:	2b00      	cmp	r3, #0
 8004fae:	d012      	beq.n	8004fd6 <prvUnlockQueue+0x8e>
 8004fb0:	687b      	ldr	r3, [r7, #4]
 8004fb2:	3310      	adds	r3, #16
 8004fb4:	4618      	mov	r0, r3
 8004fb6:	f000 fcf1 	bl	800599c <xTaskRemoveFromEventList>
 8004fba:	4603      	mov	r3, r0
 8004fbc:	2b00      	cmp	r3, #0
 8004fbe:	d001      	beq.n	8004fc4 <prvUnlockQueue+0x7c>
 8004fc0:	f000 fdc4 	bl	8005b4c <vTaskMissedYield>
 8004fc4:	7bbb      	ldrb	r3, [r7, #14]
 8004fc6:	3b01      	subs	r3, #1
 8004fc8:	b2db      	uxtb	r3, r3
 8004fca:	73bb      	strb	r3, [r7, #14]
 8004fcc:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8004fd0:	2b00      	cmp	r3, #0
 8004fd2:	dce9      	bgt.n	8004fa8 <prvUnlockQueue+0x60>
 8004fd4:	e000      	b.n	8004fd8 <prvUnlockQueue+0x90>
 8004fd6:	bf00      	nop
 8004fd8:	687b      	ldr	r3, [r7, #4]
 8004fda:	22ff      	movs	r2, #255	; 0xff
 8004fdc:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004fe0:	f001 fbd2 	bl	8006788 <vPortExitCritical>
 8004fe4:	bf00      	nop
 8004fe6:	3710      	adds	r7, #16
 8004fe8:	46bd      	mov	sp, r7
 8004fea:	bd80      	pop	{r7, pc}

08004fec <prvIsQueueEmpty>:
 8004fec:	b580      	push	{r7, lr}
 8004fee:	b084      	sub	sp, #16
 8004ff0:	af00      	add	r7, sp, #0
 8004ff2:	6078      	str	r0, [r7, #4]
 8004ff4:	f001 fb9a 	bl	800672c <vPortEnterCritical>
 8004ff8:	687b      	ldr	r3, [r7, #4]
 8004ffa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004ffc:	2b00      	cmp	r3, #0
 8004ffe:	d102      	bne.n	8005006 <prvIsQueueEmpty+0x1a>
 8005000:	2301      	movs	r3, #1
 8005002:	60fb      	str	r3, [r7, #12]
 8005004:	e001      	b.n	800500a <prvIsQueueEmpty+0x1e>
 8005006:	2300      	movs	r3, #0
 8005008:	60fb      	str	r3, [r7, #12]
 800500a:	f001 fbbd 	bl	8006788 <vPortExitCritical>
 800500e:	68fb      	ldr	r3, [r7, #12]
 8005010:	4618      	mov	r0, r3
 8005012:	3710      	adds	r7, #16
 8005014:	46bd      	mov	sp, r7
 8005016:	bd80      	pop	{r7, pc}

08005018 <prvIsQueueFull>:
 8005018:	b580      	push	{r7, lr}
 800501a:	b084      	sub	sp, #16
 800501c:	af00      	add	r7, sp, #0
 800501e:	6078      	str	r0, [r7, #4]
 8005020:	f001 fb84 	bl	800672c <vPortEnterCritical>
 8005024:	687b      	ldr	r3, [r7, #4]
 8005026:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8005028:	687b      	ldr	r3, [r7, #4]
 800502a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800502c:	429a      	cmp	r2, r3
 800502e:	d102      	bne.n	8005036 <prvIsQueueFull+0x1e>
 8005030:	2301      	movs	r3, #1
 8005032:	60fb      	str	r3, [r7, #12]
 8005034:	e001      	b.n	800503a <prvIsQueueFull+0x22>
 8005036:	2300      	movs	r3, #0
 8005038:	60fb      	str	r3, [r7, #12]
 800503a:	f001 fba5 	bl	8006788 <vPortExitCritical>
 800503e:	68fb      	ldr	r3, [r7, #12]
 8005040:	4618      	mov	r0, r3
 8005042:	3710      	adds	r7, #16
 8005044:	46bd      	mov	sp, r7
 8005046:	bd80      	pop	{r7, pc}

08005048 <vQueueAddToRegistry>:
 8005048:	b480      	push	{r7}
 800504a:	b085      	sub	sp, #20
 800504c:	af00      	add	r7, sp, #0
 800504e:	6078      	str	r0, [r7, #4]
 8005050:	6039      	str	r1, [r7, #0]
 8005052:	2300      	movs	r3, #0
 8005054:	60fb      	str	r3, [r7, #12]
 8005056:	e014      	b.n	8005082 <vQueueAddToRegistry+0x3a>
 8005058:	4a0e      	ldr	r2, [pc, #56]	; (8005094 <vQueueAddToRegistry+0x4c>)
 800505a:	68fb      	ldr	r3, [r7, #12]
 800505c:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8005060:	2b00      	cmp	r3, #0
 8005062:	d10b      	bne.n	800507c <vQueueAddToRegistry+0x34>
 8005064:	490b      	ldr	r1, [pc, #44]	; (8005094 <vQueueAddToRegistry+0x4c>)
 8005066:	68fb      	ldr	r3, [r7, #12]
 8005068:	683a      	ldr	r2, [r7, #0]
 800506a:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 800506e:	4a09      	ldr	r2, [pc, #36]	; (8005094 <vQueueAddToRegistry+0x4c>)
 8005070:	68fb      	ldr	r3, [r7, #12]
 8005072:	00db      	lsls	r3, r3, #3
 8005074:	4413      	add	r3, r2
 8005076:	687a      	ldr	r2, [r7, #4]
 8005078:	605a      	str	r2, [r3, #4]
 800507a:	e005      	b.n	8005088 <vQueueAddToRegistry+0x40>
 800507c:	68fb      	ldr	r3, [r7, #12]
 800507e:	3301      	adds	r3, #1
 8005080:	60fb      	str	r3, [r7, #12]
 8005082:	68fb      	ldr	r3, [r7, #12]
 8005084:	2b07      	cmp	r3, #7
 8005086:	d9e7      	bls.n	8005058 <vQueueAddToRegistry+0x10>
 8005088:	bf00      	nop
 800508a:	3714      	adds	r7, #20
 800508c:	46bd      	mov	sp, r7
 800508e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005092:	4770      	bx	lr
 8005094:	20001d78 	.word	0x20001d78

08005098 <vQueueWaitForMessageRestricted>:
 8005098:	b580      	push	{r7, lr}
 800509a:	b086      	sub	sp, #24
 800509c:	af00      	add	r7, sp, #0
 800509e:	60f8      	str	r0, [r7, #12]
 80050a0:	60b9      	str	r1, [r7, #8]
 80050a2:	607a      	str	r2, [r7, #4]
 80050a4:	68fb      	ldr	r3, [r7, #12]
 80050a6:	617b      	str	r3, [r7, #20]
 80050a8:	f001 fb40 	bl	800672c <vPortEnterCritical>
 80050ac:	697b      	ldr	r3, [r7, #20]
 80050ae:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 80050b2:	b25b      	sxtb	r3, r3
 80050b4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80050b8:	d103      	bne.n	80050c2 <vQueueWaitForMessageRestricted+0x2a>
 80050ba:	697b      	ldr	r3, [r7, #20]
 80050bc:	2200      	movs	r2, #0
 80050be:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80050c2:	697b      	ldr	r3, [r7, #20]
 80050c4:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80050c8:	b25b      	sxtb	r3, r3
 80050ca:	f1b3 3fff 	cmp.w	r3, #4294967295
 80050ce:	d103      	bne.n	80050d8 <vQueueWaitForMessageRestricted+0x40>
 80050d0:	697b      	ldr	r3, [r7, #20]
 80050d2:	2200      	movs	r2, #0
 80050d4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80050d8:	f001 fb56 	bl	8006788 <vPortExitCritical>
 80050dc:	697b      	ldr	r3, [r7, #20]
 80050de:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050e0:	2b00      	cmp	r3, #0
 80050e2:	d106      	bne.n	80050f2 <vQueueWaitForMessageRestricted+0x5a>
 80050e4:	697b      	ldr	r3, [r7, #20]
 80050e6:	3324      	adds	r3, #36	; 0x24
 80050e8:	687a      	ldr	r2, [r7, #4]
 80050ea:	68b9      	ldr	r1, [r7, #8]
 80050ec:	4618      	mov	r0, r3
 80050ee:	f000 fc2b 	bl	8005948 <vTaskPlaceOnEventListRestricted>
 80050f2:	6978      	ldr	r0, [r7, #20]
 80050f4:	f7ff ff28 	bl	8004f48 <prvUnlockQueue>
 80050f8:	bf00      	nop
 80050fa:	3718      	adds	r7, #24
 80050fc:	46bd      	mov	sp, r7
 80050fe:	bd80      	pop	{r7, pc}

08005100 <xTaskCreateStatic>:
 8005100:	b580      	push	{r7, lr}
 8005102:	b08e      	sub	sp, #56	; 0x38
 8005104:	af04      	add	r7, sp, #16
 8005106:	60f8      	str	r0, [r7, #12]
 8005108:	60b9      	str	r1, [r7, #8]
 800510a:	607a      	str	r2, [r7, #4]
 800510c:	603b      	str	r3, [r7, #0]
 800510e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005110:	2b00      	cmp	r3, #0
 8005112:	d109      	bne.n	8005128 <xTaskCreateStatic+0x28>
 8005114:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005118:	f383 8811 	msr	BASEPRI, r3
 800511c:	f3bf 8f6f 	isb	sy
 8005120:	f3bf 8f4f 	dsb	sy
 8005124:	623b      	str	r3, [r7, #32]
 8005126:	e7fe      	b.n	8005126 <xTaskCreateStatic+0x26>
 8005128:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800512a:	2b00      	cmp	r3, #0
 800512c:	d109      	bne.n	8005142 <xTaskCreateStatic+0x42>
 800512e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005132:	f383 8811 	msr	BASEPRI, r3
 8005136:	f3bf 8f6f 	isb	sy
 800513a:	f3bf 8f4f 	dsb	sy
 800513e:	61fb      	str	r3, [r7, #28]
 8005140:	e7fe      	b.n	8005140 <xTaskCreateStatic+0x40>
 8005142:	235c      	movs	r3, #92	; 0x5c
 8005144:	613b      	str	r3, [r7, #16]
 8005146:	693b      	ldr	r3, [r7, #16]
 8005148:	2b5c      	cmp	r3, #92	; 0x5c
 800514a:	d009      	beq.n	8005160 <xTaskCreateStatic+0x60>
 800514c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005150:	f383 8811 	msr	BASEPRI, r3
 8005154:	f3bf 8f6f 	isb	sy
 8005158:	f3bf 8f4f 	dsb	sy
 800515c:	61bb      	str	r3, [r7, #24]
 800515e:	e7fe      	b.n	800515e <xTaskCreateStatic+0x5e>
 8005160:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005162:	2b00      	cmp	r3, #0
 8005164:	d01e      	beq.n	80051a4 <xTaskCreateStatic+0xa4>
 8005166:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005168:	2b00      	cmp	r3, #0
 800516a:	d01b      	beq.n	80051a4 <xTaskCreateStatic+0xa4>
 800516c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800516e:	627b      	str	r3, [r7, #36]	; 0x24
 8005170:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005172:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8005174:	631a      	str	r2, [r3, #48]	; 0x30
 8005176:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005178:	2202      	movs	r2, #2
 800517a:	f883 2059 	strb.w	r2, [r3, #89]	; 0x59
 800517e:	2300      	movs	r3, #0
 8005180:	9303      	str	r3, [sp, #12]
 8005182:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005184:	9302      	str	r3, [sp, #8]
 8005186:	f107 0314 	add.w	r3, r7, #20
 800518a:	9301      	str	r3, [sp, #4]
 800518c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800518e:	9300      	str	r3, [sp, #0]
 8005190:	683b      	ldr	r3, [r7, #0]
 8005192:	687a      	ldr	r2, [r7, #4]
 8005194:	68b9      	ldr	r1, [r7, #8]
 8005196:	68f8      	ldr	r0, [r7, #12]
 8005198:	f000 f850 	bl	800523c <prvInitialiseNewTask>
 800519c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800519e:	f000 f8d3 	bl	8005348 <prvAddNewTaskToReadyList>
 80051a2:	e001      	b.n	80051a8 <xTaskCreateStatic+0xa8>
 80051a4:	2300      	movs	r3, #0
 80051a6:	617b      	str	r3, [r7, #20]
 80051a8:	697b      	ldr	r3, [r7, #20]
 80051aa:	4618      	mov	r0, r3
 80051ac:	3728      	adds	r7, #40	; 0x28
 80051ae:	46bd      	mov	sp, r7
 80051b0:	bd80      	pop	{r7, pc}

080051b2 <xTaskCreate>:
 80051b2:	b580      	push	{r7, lr}
 80051b4:	b08c      	sub	sp, #48	; 0x30
 80051b6:	af04      	add	r7, sp, #16
 80051b8:	60f8      	str	r0, [r7, #12]
 80051ba:	60b9      	str	r1, [r7, #8]
 80051bc:	603b      	str	r3, [r7, #0]
 80051be:	4613      	mov	r3, r2
 80051c0:	80fb      	strh	r3, [r7, #6]
 80051c2:	88fb      	ldrh	r3, [r7, #6]
 80051c4:	009b      	lsls	r3, r3, #2
 80051c6:	4618      	mov	r0, r3
 80051c8:	f001 fbca 	bl	8006960 <pvPortMalloc>
 80051cc:	6178      	str	r0, [r7, #20]
 80051ce:	697b      	ldr	r3, [r7, #20]
 80051d0:	2b00      	cmp	r3, #0
 80051d2:	d00e      	beq.n	80051f2 <xTaskCreate+0x40>
 80051d4:	205c      	movs	r0, #92	; 0x5c
 80051d6:	f001 fbc3 	bl	8006960 <pvPortMalloc>
 80051da:	61f8      	str	r0, [r7, #28]
 80051dc:	69fb      	ldr	r3, [r7, #28]
 80051de:	2b00      	cmp	r3, #0
 80051e0:	d003      	beq.n	80051ea <xTaskCreate+0x38>
 80051e2:	69fb      	ldr	r3, [r7, #28]
 80051e4:	697a      	ldr	r2, [r7, #20]
 80051e6:	631a      	str	r2, [r3, #48]	; 0x30
 80051e8:	e005      	b.n	80051f6 <xTaskCreate+0x44>
 80051ea:	6978      	ldr	r0, [r7, #20]
 80051ec:	f001 fc7a 	bl	8006ae4 <vPortFree>
 80051f0:	e001      	b.n	80051f6 <xTaskCreate+0x44>
 80051f2:	2300      	movs	r3, #0
 80051f4:	61fb      	str	r3, [r7, #28]
 80051f6:	69fb      	ldr	r3, [r7, #28]
 80051f8:	2b00      	cmp	r3, #0
 80051fa:	d017      	beq.n	800522c <xTaskCreate+0x7a>
 80051fc:	69fb      	ldr	r3, [r7, #28]
 80051fe:	2200      	movs	r2, #0
 8005200:	f883 2059 	strb.w	r2, [r3, #89]	; 0x59
 8005204:	88fa      	ldrh	r2, [r7, #6]
 8005206:	2300      	movs	r3, #0
 8005208:	9303      	str	r3, [sp, #12]
 800520a:	69fb      	ldr	r3, [r7, #28]
 800520c:	9302      	str	r3, [sp, #8]
 800520e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005210:	9301      	str	r3, [sp, #4]
 8005212:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005214:	9300      	str	r3, [sp, #0]
 8005216:	683b      	ldr	r3, [r7, #0]
 8005218:	68b9      	ldr	r1, [r7, #8]
 800521a:	68f8      	ldr	r0, [r7, #12]
 800521c:	f000 f80e 	bl	800523c <prvInitialiseNewTask>
 8005220:	69f8      	ldr	r0, [r7, #28]
 8005222:	f000 f891 	bl	8005348 <prvAddNewTaskToReadyList>
 8005226:	2301      	movs	r3, #1
 8005228:	61bb      	str	r3, [r7, #24]
 800522a:	e002      	b.n	8005232 <xTaskCreate+0x80>
 800522c:	f04f 33ff 	mov.w	r3, #4294967295
 8005230:	61bb      	str	r3, [r7, #24]
 8005232:	69bb      	ldr	r3, [r7, #24]
 8005234:	4618      	mov	r0, r3
 8005236:	3720      	adds	r7, #32
 8005238:	46bd      	mov	sp, r7
 800523a:	bd80      	pop	{r7, pc}

0800523c <prvInitialiseNewTask>:
 800523c:	b580      	push	{r7, lr}
 800523e:	b088      	sub	sp, #32
 8005240:	af00      	add	r7, sp, #0
 8005242:	60f8      	str	r0, [r7, #12]
 8005244:	60b9      	str	r1, [r7, #8]
 8005246:	607a      	str	r2, [r7, #4]
 8005248:	603b      	str	r3, [r7, #0]
 800524a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800524c:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800524e:	687b      	ldr	r3, [r7, #4]
 8005250:	009b      	lsls	r3, r3, #2
 8005252:	461a      	mov	r2, r3
 8005254:	21a5      	movs	r1, #165	; 0xa5
 8005256:	f001 fd8e 	bl	8006d76 <memset>
 800525a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800525c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800525e:	687b      	ldr	r3, [r7, #4]
 8005260:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8005264:	3b01      	subs	r3, #1
 8005266:	009b      	lsls	r3, r3, #2
 8005268:	4413      	add	r3, r2
 800526a:	61bb      	str	r3, [r7, #24]
 800526c:	69bb      	ldr	r3, [r7, #24]
 800526e:	f023 0307 	bic.w	r3, r3, #7
 8005272:	61bb      	str	r3, [r7, #24]
 8005274:	69bb      	ldr	r3, [r7, #24]
 8005276:	f003 0307 	and.w	r3, r3, #7
 800527a:	2b00      	cmp	r3, #0
 800527c:	d009      	beq.n	8005292 <prvInitialiseNewTask+0x56>
 800527e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005282:	f383 8811 	msr	BASEPRI, r3
 8005286:	f3bf 8f6f 	isb	sy
 800528a:	f3bf 8f4f 	dsb	sy
 800528e:	617b      	str	r3, [r7, #20]
 8005290:	e7fe      	b.n	8005290 <prvInitialiseNewTask+0x54>
 8005292:	2300      	movs	r3, #0
 8005294:	61fb      	str	r3, [r7, #28]
 8005296:	e012      	b.n	80052be <prvInitialiseNewTask+0x82>
 8005298:	68ba      	ldr	r2, [r7, #8]
 800529a:	69fb      	ldr	r3, [r7, #28]
 800529c:	4413      	add	r3, r2
 800529e:	7819      	ldrb	r1, [r3, #0]
 80052a0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80052a2:	69fb      	ldr	r3, [r7, #28]
 80052a4:	4413      	add	r3, r2
 80052a6:	3334      	adds	r3, #52	; 0x34
 80052a8:	460a      	mov	r2, r1
 80052aa:	701a      	strb	r2, [r3, #0]
 80052ac:	68ba      	ldr	r2, [r7, #8]
 80052ae:	69fb      	ldr	r3, [r7, #28]
 80052b0:	4413      	add	r3, r2
 80052b2:	781b      	ldrb	r3, [r3, #0]
 80052b4:	2b00      	cmp	r3, #0
 80052b6:	d006      	beq.n	80052c6 <prvInitialiseNewTask+0x8a>
 80052b8:	69fb      	ldr	r3, [r7, #28]
 80052ba:	3301      	adds	r3, #1
 80052bc:	61fb      	str	r3, [r7, #28]
 80052be:	69fb      	ldr	r3, [r7, #28]
 80052c0:	2b0f      	cmp	r3, #15
 80052c2:	d9e9      	bls.n	8005298 <prvInitialiseNewTask+0x5c>
 80052c4:	e000      	b.n	80052c8 <prvInitialiseNewTask+0x8c>
 80052c6:	bf00      	nop
 80052c8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80052ca:	2200      	movs	r2, #0
 80052cc:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80052d0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80052d2:	2b37      	cmp	r3, #55	; 0x37
 80052d4:	d901      	bls.n	80052da <prvInitialiseNewTask+0x9e>
 80052d6:	2337      	movs	r3, #55	; 0x37
 80052d8:	62bb      	str	r3, [r7, #40]	; 0x28
 80052da:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80052dc:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80052de:	62da      	str	r2, [r3, #44]	; 0x2c
 80052e0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80052e2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80052e4:	64da      	str	r2, [r3, #76]	; 0x4c
 80052e6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80052e8:	2200      	movs	r2, #0
 80052ea:	651a      	str	r2, [r3, #80]	; 0x50
 80052ec:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80052ee:	3304      	adds	r3, #4
 80052f0:	4618      	mov	r0, r3
 80052f2:	f7ff f99d 	bl	8004630 <vListInitialiseItem>
 80052f6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80052f8:	3318      	adds	r3, #24
 80052fa:	4618      	mov	r0, r3
 80052fc:	f7ff f998 	bl	8004630 <vListInitialiseItem>
 8005300:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005302:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005304:	611a      	str	r2, [r3, #16]
 8005306:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005308:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800530c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800530e:	619a      	str	r2, [r3, #24]
 8005310:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005312:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005314:	625a      	str	r2, [r3, #36]	; 0x24
 8005316:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005318:	2200      	movs	r2, #0
 800531a:	655a      	str	r2, [r3, #84]	; 0x54
 800531c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800531e:	2200      	movs	r2, #0
 8005320:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
 8005324:	683a      	ldr	r2, [r7, #0]
 8005326:	68f9      	ldr	r1, [r7, #12]
 8005328:	69b8      	ldr	r0, [r7, #24]
 800532a:	f001 f8db 	bl	80064e4 <pxPortInitialiseStack>
 800532e:	4602      	mov	r2, r0
 8005330:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005332:	601a      	str	r2, [r3, #0]
 8005334:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005336:	2b00      	cmp	r3, #0
 8005338:	d002      	beq.n	8005340 <prvInitialiseNewTask+0x104>
 800533a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800533c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800533e:	601a      	str	r2, [r3, #0]
 8005340:	bf00      	nop
 8005342:	3720      	adds	r7, #32
 8005344:	46bd      	mov	sp, r7
 8005346:	bd80      	pop	{r7, pc}

08005348 <prvAddNewTaskToReadyList>:
 8005348:	b580      	push	{r7, lr}
 800534a:	b082      	sub	sp, #8
 800534c:	af00      	add	r7, sp, #0
 800534e:	6078      	str	r0, [r7, #4]
 8005350:	f001 f9ec 	bl	800672c <vPortEnterCritical>
 8005354:	4b2d      	ldr	r3, [pc, #180]	; (800540c <prvAddNewTaskToReadyList+0xc4>)
 8005356:	681b      	ldr	r3, [r3, #0]
 8005358:	3301      	adds	r3, #1
 800535a:	4a2c      	ldr	r2, [pc, #176]	; (800540c <prvAddNewTaskToReadyList+0xc4>)
 800535c:	6013      	str	r3, [r2, #0]
 800535e:	4b2c      	ldr	r3, [pc, #176]	; (8005410 <prvAddNewTaskToReadyList+0xc8>)
 8005360:	681b      	ldr	r3, [r3, #0]
 8005362:	2b00      	cmp	r3, #0
 8005364:	d109      	bne.n	800537a <prvAddNewTaskToReadyList+0x32>
 8005366:	4a2a      	ldr	r2, [pc, #168]	; (8005410 <prvAddNewTaskToReadyList+0xc8>)
 8005368:	687b      	ldr	r3, [r7, #4]
 800536a:	6013      	str	r3, [r2, #0]
 800536c:	4b27      	ldr	r3, [pc, #156]	; (800540c <prvAddNewTaskToReadyList+0xc4>)
 800536e:	681b      	ldr	r3, [r3, #0]
 8005370:	2b01      	cmp	r3, #1
 8005372:	d110      	bne.n	8005396 <prvAddNewTaskToReadyList+0x4e>
 8005374:	f000 fc0e 	bl	8005b94 <prvInitialiseTaskLists>
 8005378:	e00d      	b.n	8005396 <prvAddNewTaskToReadyList+0x4e>
 800537a:	4b26      	ldr	r3, [pc, #152]	; (8005414 <prvAddNewTaskToReadyList+0xcc>)
 800537c:	681b      	ldr	r3, [r3, #0]
 800537e:	2b00      	cmp	r3, #0
 8005380:	d109      	bne.n	8005396 <prvAddNewTaskToReadyList+0x4e>
 8005382:	4b23      	ldr	r3, [pc, #140]	; (8005410 <prvAddNewTaskToReadyList+0xc8>)
 8005384:	681b      	ldr	r3, [r3, #0]
 8005386:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005388:	687b      	ldr	r3, [r7, #4]
 800538a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800538c:	429a      	cmp	r2, r3
 800538e:	d802      	bhi.n	8005396 <prvAddNewTaskToReadyList+0x4e>
 8005390:	4a1f      	ldr	r2, [pc, #124]	; (8005410 <prvAddNewTaskToReadyList+0xc8>)
 8005392:	687b      	ldr	r3, [r7, #4]
 8005394:	6013      	str	r3, [r2, #0]
 8005396:	4b20      	ldr	r3, [pc, #128]	; (8005418 <prvAddNewTaskToReadyList+0xd0>)
 8005398:	681b      	ldr	r3, [r3, #0]
 800539a:	3301      	adds	r3, #1
 800539c:	4a1e      	ldr	r2, [pc, #120]	; (8005418 <prvAddNewTaskToReadyList+0xd0>)
 800539e:	6013      	str	r3, [r2, #0]
 80053a0:	4b1d      	ldr	r3, [pc, #116]	; (8005418 <prvAddNewTaskToReadyList+0xd0>)
 80053a2:	681a      	ldr	r2, [r3, #0]
 80053a4:	687b      	ldr	r3, [r7, #4]
 80053a6:	645a      	str	r2, [r3, #68]	; 0x44
 80053a8:	687b      	ldr	r3, [r7, #4]
 80053aa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80053ac:	4b1b      	ldr	r3, [pc, #108]	; (800541c <prvAddNewTaskToReadyList+0xd4>)
 80053ae:	681b      	ldr	r3, [r3, #0]
 80053b0:	429a      	cmp	r2, r3
 80053b2:	d903      	bls.n	80053bc <prvAddNewTaskToReadyList+0x74>
 80053b4:	687b      	ldr	r3, [r7, #4]
 80053b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80053b8:	4a18      	ldr	r2, [pc, #96]	; (800541c <prvAddNewTaskToReadyList+0xd4>)
 80053ba:	6013      	str	r3, [r2, #0]
 80053bc:	687b      	ldr	r3, [r7, #4]
 80053be:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80053c0:	4613      	mov	r3, r2
 80053c2:	009b      	lsls	r3, r3, #2
 80053c4:	4413      	add	r3, r2
 80053c6:	009b      	lsls	r3, r3, #2
 80053c8:	4a15      	ldr	r2, [pc, #84]	; (8005420 <prvAddNewTaskToReadyList+0xd8>)
 80053ca:	441a      	add	r2, r3
 80053cc:	687b      	ldr	r3, [r7, #4]
 80053ce:	3304      	adds	r3, #4
 80053d0:	4619      	mov	r1, r3
 80053d2:	4610      	mov	r0, r2
 80053d4:	f7ff f939 	bl	800464a <vListInsertEnd>
 80053d8:	f001 f9d6 	bl	8006788 <vPortExitCritical>
 80053dc:	4b0d      	ldr	r3, [pc, #52]	; (8005414 <prvAddNewTaskToReadyList+0xcc>)
 80053de:	681b      	ldr	r3, [r3, #0]
 80053e0:	2b00      	cmp	r3, #0
 80053e2:	d00e      	beq.n	8005402 <prvAddNewTaskToReadyList+0xba>
 80053e4:	4b0a      	ldr	r3, [pc, #40]	; (8005410 <prvAddNewTaskToReadyList+0xc8>)
 80053e6:	681b      	ldr	r3, [r3, #0]
 80053e8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80053ea:	687b      	ldr	r3, [r7, #4]
 80053ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80053ee:	429a      	cmp	r2, r3
 80053f0:	d207      	bcs.n	8005402 <prvAddNewTaskToReadyList+0xba>
 80053f2:	4b0c      	ldr	r3, [pc, #48]	; (8005424 <prvAddNewTaskToReadyList+0xdc>)
 80053f4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80053f8:	601a      	str	r2, [r3, #0]
 80053fa:	f3bf 8f4f 	dsb	sy
 80053fe:	f3bf 8f6f 	isb	sy
 8005402:	bf00      	nop
 8005404:	3708      	adds	r7, #8
 8005406:	46bd      	mov	sp, r7
 8005408:	bd80      	pop	{r7, pc}
 800540a:	bf00      	nop
 800540c:	20000db8 	.word	0x20000db8
 8005410:	200008e4 	.word	0x200008e4
 8005414:	20000dc4 	.word	0x20000dc4
 8005418:	20000dd4 	.word	0x20000dd4
 800541c:	20000dc0 	.word	0x20000dc0
 8005420:	200008e8 	.word	0x200008e8
 8005424:	e000ed04 	.word	0xe000ed04

08005428 <vTaskDelay>:
 8005428:	b580      	push	{r7, lr}
 800542a:	b084      	sub	sp, #16
 800542c:	af00      	add	r7, sp, #0
 800542e:	6078      	str	r0, [r7, #4]
 8005430:	2300      	movs	r3, #0
 8005432:	60fb      	str	r3, [r7, #12]
 8005434:	687b      	ldr	r3, [r7, #4]
 8005436:	2b00      	cmp	r3, #0
 8005438:	d016      	beq.n	8005468 <vTaskDelay+0x40>
 800543a:	4b13      	ldr	r3, [pc, #76]	; (8005488 <vTaskDelay+0x60>)
 800543c:	681b      	ldr	r3, [r3, #0]
 800543e:	2b00      	cmp	r3, #0
 8005440:	d009      	beq.n	8005456 <vTaskDelay+0x2e>
 8005442:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005446:	f383 8811 	msr	BASEPRI, r3
 800544a:	f3bf 8f6f 	isb	sy
 800544e:	f3bf 8f4f 	dsb	sy
 8005452:	60bb      	str	r3, [r7, #8]
 8005454:	e7fe      	b.n	8005454 <vTaskDelay+0x2c>
 8005456:	f000 f87f 	bl	8005558 <vTaskSuspendAll>
 800545a:	2100      	movs	r1, #0
 800545c:	6878      	ldr	r0, [r7, #4]
 800545e:	f000 fce3 	bl	8005e28 <prvAddCurrentTaskToDelayedList>
 8005462:	f000 f887 	bl	8005574 <xTaskResumeAll>
 8005466:	60f8      	str	r0, [r7, #12]
 8005468:	68fb      	ldr	r3, [r7, #12]
 800546a:	2b00      	cmp	r3, #0
 800546c:	d107      	bne.n	800547e <vTaskDelay+0x56>
 800546e:	4b07      	ldr	r3, [pc, #28]	; (800548c <vTaskDelay+0x64>)
 8005470:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005474:	601a      	str	r2, [r3, #0]
 8005476:	f3bf 8f4f 	dsb	sy
 800547a:	f3bf 8f6f 	isb	sy
 800547e:	bf00      	nop
 8005480:	3710      	adds	r7, #16
 8005482:	46bd      	mov	sp, r7
 8005484:	bd80      	pop	{r7, pc}
 8005486:	bf00      	nop
 8005488:	20000de0 	.word	0x20000de0
 800548c:	e000ed04 	.word	0xe000ed04

08005490 <vTaskStartScheduler>:
 8005490:	b580      	push	{r7, lr}
 8005492:	b08a      	sub	sp, #40	; 0x28
 8005494:	af04      	add	r7, sp, #16
 8005496:	2300      	movs	r3, #0
 8005498:	60bb      	str	r3, [r7, #8]
 800549a:	2300      	movs	r3, #0
 800549c:	607b      	str	r3, [r7, #4]
 800549e:	463a      	mov	r2, r7
 80054a0:	1d39      	adds	r1, r7, #4
 80054a2:	f107 0308 	add.w	r3, r7, #8
 80054a6:	4618      	mov	r0, r3
 80054a8:	f7ff f86e 	bl	8004588 <vApplicationGetIdleTaskMemory>
 80054ac:	6839      	ldr	r1, [r7, #0]
 80054ae:	687b      	ldr	r3, [r7, #4]
 80054b0:	68ba      	ldr	r2, [r7, #8]
 80054b2:	9202      	str	r2, [sp, #8]
 80054b4:	9301      	str	r3, [sp, #4]
 80054b6:	2300      	movs	r3, #0
 80054b8:	9300      	str	r3, [sp, #0]
 80054ba:	2300      	movs	r3, #0
 80054bc:	460a      	mov	r2, r1
 80054be:	4920      	ldr	r1, [pc, #128]	; (8005540 <vTaskStartScheduler+0xb0>)
 80054c0:	4820      	ldr	r0, [pc, #128]	; (8005544 <vTaskStartScheduler+0xb4>)
 80054c2:	f7ff fe1d 	bl	8005100 <xTaskCreateStatic>
 80054c6:	4602      	mov	r2, r0
 80054c8:	4b1f      	ldr	r3, [pc, #124]	; (8005548 <vTaskStartScheduler+0xb8>)
 80054ca:	601a      	str	r2, [r3, #0]
 80054cc:	4b1e      	ldr	r3, [pc, #120]	; (8005548 <vTaskStartScheduler+0xb8>)
 80054ce:	681b      	ldr	r3, [r3, #0]
 80054d0:	2b00      	cmp	r3, #0
 80054d2:	d002      	beq.n	80054da <vTaskStartScheduler+0x4a>
 80054d4:	2301      	movs	r3, #1
 80054d6:	617b      	str	r3, [r7, #20]
 80054d8:	e001      	b.n	80054de <vTaskStartScheduler+0x4e>
 80054da:	2300      	movs	r3, #0
 80054dc:	617b      	str	r3, [r7, #20]
 80054de:	697b      	ldr	r3, [r7, #20]
 80054e0:	2b01      	cmp	r3, #1
 80054e2:	d102      	bne.n	80054ea <vTaskStartScheduler+0x5a>
 80054e4:	f000 fcf4 	bl	8005ed0 <xTimerCreateTimerTask>
 80054e8:	6178      	str	r0, [r7, #20]
 80054ea:	697b      	ldr	r3, [r7, #20]
 80054ec:	2b01      	cmp	r3, #1
 80054ee:	d115      	bne.n	800551c <vTaskStartScheduler+0x8c>
 80054f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80054f4:	f383 8811 	msr	BASEPRI, r3
 80054f8:	f3bf 8f6f 	isb	sy
 80054fc:	f3bf 8f4f 	dsb	sy
 8005500:	613b      	str	r3, [r7, #16]
 8005502:	4b12      	ldr	r3, [pc, #72]	; (800554c <vTaskStartScheduler+0xbc>)
 8005504:	f04f 32ff 	mov.w	r2, #4294967295
 8005508:	601a      	str	r2, [r3, #0]
 800550a:	4b11      	ldr	r3, [pc, #68]	; (8005550 <vTaskStartScheduler+0xc0>)
 800550c:	2201      	movs	r2, #1
 800550e:	601a      	str	r2, [r3, #0]
 8005510:	4b10      	ldr	r3, [pc, #64]	; (8005554 <vTaskStartScheduler+0xc4>)
 8005512:	2200      	movs	r2, #0
 8005514:	601a      	str	r2, [r3, #0]
 8005516:	f001 f86b 	bl	80065f0 <xPortStartScheduler>
 800551a:	e00d      	b.n	8005538 <vTaskStartScheduler+0xa8>
 800551c:	697b      	ldr	r3, [r7, #20]
 800551e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005522:	d109      	bne.n	8005538 <vTaskStartScheduler+0xa8>
 8005524:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005528:	f383 8811 	msr	BASEPRI, r3
 800552c:	f3bf 8f6f 	isb	sy
 8005530:	f3bf 8f4f 	dsb	sy
 8005534:	60fb      	str	r3, [r7, #12]
 8005536:	e7fe      	b.n	8005536 <vTaskStartScheduler+0xa6>
 8005538:	bf00      	nop
 800553a:	3718      	adds	r7, #24
 800553c:	46bd      	mov	sp, r7
 800553e:	bd80      	pop	{r7, pc}
 8005540:	08008ee4 	.word	0x08008ee4
 8005544:	08005b65 	.word	0x08005b65
 8005548:	20000ddc 	.word	0x20000ddc
 800554c:	20000dd8 	.word	0x20000dd8
 8005550:	20000dc4 	.word	0x20000dc4
 8005554:	20000dbc 	.word	0x20000dbc

08005558 <vTaskSuspendAll>:
 8005558:	b480      	push	{r7}
 800555a:	af00      	add	r7, sp, #0
 800555c:	4b04      	ldr	r3, [pc, #16]	; (8005570 <vTaskSuspendAll+0x18>)
 800555e:	681b      	ldr	r3, [r3, #0]
 8005560:	3301      	adds	r3, #1
 8005562:	4a03      	ldr	r2, [pc, #12]	; (8005570 <vTaskSuspendAll+0x18>)
 8005564:	6013      	str	r3, [r2, #0]
 8005566:	bf00      	nop
 8005568:	46bd      	mov	sp, r7
 800556a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800556e:	4770      	bx	lr
 8005570:	20000de0 	.word	0x20000de0

08005574 <xTaskResumeAll>:
 8005574:	b580      	push	{r7, lr}
 8005576:	b084      	sub	sp, #16
 8005578:	af00      	add	r7, sp, #0
 800557a:	2300      	movs	r3, #0
 800557c:	60fb      	str	r3, [r7, #12]
 800557e:	2300      	movs	r3, #0
 8005580:	60bb      	str	r3, [r7, #8]
 8005582:	4b41      	ldr	r3, [pc, #260]	; (8005688 <xTaskResumeAll+0x114>)
 8005584:	681b      	ldr	r3, [r3, #0]
 8005586:	2b00      	cmp	r3, #0
 8005588:	d109      	bne.n	800559e <xTaskResumeAll+0x2a>
 800558a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800558e:	f383 8811 	msr	BASEPRI, r3
 8005592:	f3bf 8f6f 	isb	sy
 8005596:	f3bf 8f4f 	dsb	sy
 800559a:	603b      	str	r3, [r7, #0]
 800559c:	e7fe      	b.n	800559c <xTaskResumeAll+0x28>
 800559e:	f001 f8c5 	bl	800672c <vPortEnterCritical>
 80055a2:	4b39      	ldr	r3, [pc, #228]	; (8005688 <xTaskResumeAll+0x114>)
 80055a4:	681b      	ldr	r3, [r3, #0]
 80055a6:	3b01      	subs	r3, #1
 80055a8:	4a37      	ldr	r2, [pc, #220]	; (8005688 <xTaskResumeAll+0x114>)
 80055aa:	6013      	str	r3, [r2, #0]
 80055ac:	4b36      	ldr	r3, [pc, #216]	; (8005688 <xTaskResumeAll+0x114>)
 80055ae:	681b      	ldr	r3, [r3, #0]
 80055b0:	2b00      	cmp	r3, #0
 80055b2:	d162      	bne.n	800567a <xTaskResumeAll+0x106>
 80055b4:	4b35      	ldr	r3, [pc, #212]	; (800568c <xTaskResumeAll+0x118>)
 80055b6:	681b      	ldr	r3, [r3, #0]
 80055b8:	2b00      	cmp	r3, #0
 80055ba:	d05e      	beq.n	800567a <xTaskResumeAll+0x106>
 80055bc:	e02f      	b.n	800561e <xTaskResumeAll+0xaa>
 80055be:	4b34      	ldr	r3, [pc, #208]	; (8005690 <xTaskResumeAll+0x11c>)
 80055c0:	68db      	ldr	r3, [r3, #12]
 80055c2:	68db      	ldr	r3, [r3, #12]
 80055c4:	60fb      	str	r3, [r7, #12]
 80055c6:	68fb      	ldr	r3, [r7, #12]
 80055c8:	3318      	adds	r3, #24
 80055ca:	4618      	mov	r0, r3
 80055cc:	f7ff f89a 	bl	8004704 <uxListRemove>
 80055d0:	68fb      	ldr	r3, [r7, #12]
 80055d2:	3304      	adds	r3, #4
 80055d4:	4618      	mov	r0, r3
 80055d6:	f7ff f895 	bl	8004704 <uxListRemove>
 80055da:	68fb      	ldr	r3, [r7, #12]
 80055dc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80055de:	4b2d      	ldr	r3, [pc, #180]	; (8005694 <xTaskResumeAll+0x120>)
 80055e0:	681b      	ldr	r3, [r3, #0]
 80055e2:	429a      	cmp	r2, r3
 80055e4:	d903      	bls.n	80055ee <xTaskResumeAll+0x7a>
 80055e6:	68fb      	ldr	r3, [r7, #12]
 80055e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80055ea:	4a2a      	ldr	r2, [pc, #168]	; (8005694 <xTaskResumeAll+0x120>)
 80055ec:	6013      	str	r3, [r2, #0]
 80055ee:	68fb      	ldr	r3, [r7, #12]
 80055f0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80055f2:	4613      	mov	r3, r2
 80055f4:	009b      	lsls	r3, r3, #2
 80055f6:	4413      	add	r3, r2
 80055f8:	009b      	lsls	r3, r3, #2
 80055fa:	4a27      	ldr	r2, [pc, #156]	; (8005698 <xTaskResumeAll+0x124>)
 80055fc:	441a      	add	r2, r3
 80055fe:	68fb      	ldr	r3, [r7, #12]
 8005600:	3304      	adds	r3, #4
 8005602:	4619      	mov	r1, r3
 8005604:	4610      	mov	r0, r2
 8005606:	f7ff f820 	bl	800464a <vListInsertEnd>
 800560a:	68fb      	ldr	r3, [r7, #12]
 800560c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800560e:	4b23      	ldr	r3, [pc, #140]	; (800569c <xTaskResumeAll+0x128>)
 8005610:	681b      	ldr	r3, [r3, #0]
 8005612:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005614:	429a      	cmp	r2, r3
 8005616:	d302      	bcc.n	800561e <xTaskResumeAll+0xaa>
 8005618:	4b21      	ldr	r3, [pc, #132]	; (80056a0 <xTaskResumeAll+0x12c>)
 800561a:	2201      	movs	r2, #1
 800561c:	601a      	str	r2, [r3, #0]
 800561e:	4b1c      	ldr	r3, [pc, #112]	; (8005690 <xTaskResumeAll+0x11c>)
 8005620:	681b      	ldr	r3, [r3, #0]
 8005622:	2b00      	cmp	r3, #0
 8005624:	d1cb      	bne.n	80055be <xTaskResumeAll+0x4a>
 8005626:	68fb      	ldr	r3, [r7, #12]
 8005628:	2b00      	cmp	r3, #0
 800562a:	d001      	beq.n	8005630 <xTaskResumeAll+0xbc>
 800562c:	f000 fb4c 	bl	8005cc8 <prvResetNextTaskUnblockTime>
 8005630:	4b1c      	ldr	r3, [pc, #112]	; (80056a4 <xTaskResumeAll+0x130>)
 8005632:	681b      	ldr	r3, [r3, #0]
 8005634:	607b      	str	r3, [r7, #4]
 8005636:	687b      	ldr	r3, [r7, #4]
 8005638:	2b00      	cmp	r3, #0
 800563a:	d010      	beq.n	800565e <xTaskResumeAll+0xea>
 800563c:	f000 f846 	bl	80056cc <xTaskIncrementTick>
 8005640:	4603      	mov	r3, r0
 8005642:	2b00      	cmp	r3, #0
 8005644:	d002      	beq.n	800564c <xTaskResumeAll+0xd8>
 8005646:	4b16      	ldr	r3, [pc, #88]	; (80056a0 <xTaskResumeAll+0x12c>)
 8005648:	2201      	movs	r2, #1
 800564a:	601a      	str	r2, [r3, #0]
 800564c:	687b      	ldr	r3, [r7, #4]
 800564e:	3b01      	subs	r3, #1
 8005650:	607b      	str	r3, [r7, #4]
 8005652:	687b      	ldr	r3, [r7, #4]
 8005654:	2b00      	cmp	r3, #0
 8005656:	d1f1      	bne.n	800563c <xTaskResumeAll+0xc8>
 8005658:	4b12      	ldr	r3, [pc, #72]	; (80056a4 <xTaskResumeAll+0x130>)
 800565a:	2200      	movs	r2, #0
 800565c:	601a      	str	r2, [r3, #0]
 800565e:	4b10      	ldr	r3, [pc, #64]	; (80056a0 <xTaskResumeAll+0x12c>)
 8005660:	681b      	ldr	r3, [r3, #0]
 8005662:	2b00      	cmp	r3, #0
 8005664:	d009      	beq.n	800567a <xTaskResumeAll+0x106>
 8005666:	2301      	movs	r3, #1
 8005668:	60bb      	str	r3, [r7, #8]
 800566a:	4b0f      	ldr	r3, [pc, #60]	; (80056a8 <xTaskResumeAll+0x134>)
 800566c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005670:	601a      	str	r2, [r3, #0]
 8005672:	f3bf 8f4f 	dsb	sy
 8005676:	f3bf 8f6f 	isb	sy
 800567a:	f001 f885 	bl	8006788 <vPortExitCritical>
 800567e:	68bb      	ldr	r3, [r7, #8]
 8005680:	4618      	mov	r0, r3
 8005682:	3710      	adds	r7, #16
 8005684:	46bd      	mov	sp, r7
 8005686:	bd80      	pop	{r7, pc}
 8005688:	20000de0 	.word	0x20000de0
 800568c:	20000db8 	.word	0x20000db8
 8005690:	20000d78 	.word	0x20000d78
 8005694:	20000dc0 	.word	0x20000dc0
 8005698:	200008e8 	.word	0x200008e8
 800569c:	200008e4 	.word	0x200008e4
 80056a0:	20000dcc 	.word	0x20000dcc
 80056a4:	20000dc8 	.word	0x20000dc8
 80056a8:	e000ed04 	.word	0xe000ed04

080056ac <xTaskGetTickCount>:
 80056ac:	b480      	push	{r7}
 80056ae:	b083      	sub	sp, #12
 80056b0:	af00      	add	r7, sp, #0
 80056b2:	4b05      	ldr	r3, [pc, #20]	; (80056c8 <xTaskGetTickCount+0x1c>)
 80056b4:	681b      	ldr	r3, [r3, #0]
 80056b6:	607b      	str	r3, [r7, #4]
 80056b8:	687b      	ldr	r3, [r7, #4]
 80056ba:	4618      	mov	r0, r3
 80056bc:	370c      	adds	r7, #12
 80056be:	46bd      	mov	sp, r7
 80056c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056c4:	4770      	bx	lr
 80056c6:	bf00      	nop
 80056c8:	20000dbc 	.word	0x20000dbc

080056cc <xTaskIncrementTick>:
 80056cc:	b580      	push	{r7, lr}
 80056ce:	b086      	sub	sp, #24
 80056d0:	af00      	add	r7, sp, #0
 80056d2:	2300      	movs	r3, #0
 80056d4:	617b      	str	r3, [r7, #20]
 80056d6:	4b51      	ldr	r3, [pc, #324]	; (800581c <xTaskIncrementTick+0x150>)
 80056d8:	681b      	ldr	r3, [r3, #0]
 80056da:	2b00      	cmp	r3, #0
 80056dc:	f040 808d 	bne.w	80057fa <xTaskIncrementTick+0x12e>
 80056e0:	4b4f      	ldr	r3, [pc, #316]	; (8005820 <xTaskIncrementTick+0x154>)
 80056e2:	681b      	ldr	r3, [r3, #0]
 80056e4:	3301      	adds	r3, #1
 80056e6:	613b      	str	r3, [r7, #16]
 80056e8:	4a4d      	ldr	r2, [pc, #308]	; (8005820 <xTaskIncrementTick+0x154>)
 80056ea:	693b      	ldr	r3, [r7, #16]
 80056ec:	6013      	str	r3, [r2, #0]
 80056ee:	693b      	ldr	r3, [r7, #16]
 80056f0:	2b00      	cmp	r3, #0
 80056f2:	d11f      	bne.n	8005734 <xTaskIncrementTick+0x68>
 80056f4:	4b4b      	ldr	r3, [pc, #300]	; (8005824 <xTaskIncrementTick+0x158>)
 80056f6:	681b      	ldr	r3, [r3, #0]
 80056f8:	681b      	ldr	r3, [r3, #0]
 80056fa:	2b00      	cmp	r3, #0
 80056fc:	d009      	beq.n	8005712 <xTaskIncrementTick+0x46>
 80056fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005702:	f383 8811 	msr	BASEPRI, r3
 8005706:	f3bf 8f6f 	isb	sy
 800570a:	f3bf 8f4f 	dsb	sy
 800570e:	603b      	str	r3, [r7, #0]
 8005710:	e7fe      	b.n	8005710 <xTaskIncrementTick+0x44>
 8005712:	4b44      	ldr	r3, [pc, #272]	; (8005824 <xTaskIncrementTick+0x158>)
 8005714:	681b      	ldr	r3, [r3, #0]
 8005716:	60fb      	str	r3, [r7, #12]
 8005718:	4b43      	ldr	r3, [pc, #268]	; (8005828 <xTaskIncrementTick+0x15c>)
 800571a:	681b      	ldr	r3, [r3, #0]
 800571c:	4a41      	ldr	r2, [pc, #260]	; (8005824 <xTaskIncrementTick+0x158>)
 800571e:	6013      	str	r3, [r2, #0]
 8005720:	4a41      	ldr	r2, [pc, #260]	; (8005828 <xTaskIncrementTick+0x15c>)
 8005722:	68fb      	ldr	r3, [r7, #12]
 8005724:	6013      	str	r3, [r2, #0]
 8005726:	4b41      	ldr	r3, [pc, #260]	; (800582c <xTaskIncrementTick+0x160>)
 8005728:	681b      	ldr	r3, [r3, #0]
 800572a:	3301      	adds	r3, #1
 800572c:	4a3f      	ldr	r2, [pc, #252]	; (800582c <xTaskIncrementTick+0x160>)
 800572e:	6013      	str	r3, [r2, #0]
 8005730:	f000 faca 	bl	8005cc8 <prvResetNextTaskUnblockTime>
 8005734:	4b3e      	ldr	r3, [pc, #248]	; (8005830 <xTaskIncrementTick+0x164>)
 8005736:	681b      	ldr	r3, [r3, #0]
 8005738:	693a      	ldr	r2, [r7, #16]
 800573a:	429a      	cmp	r2, r3
 800573c:	d34e      	bcc.n	80057dc <xTaskIncrementTick+0x110>
 800573e:	4b39      	ldr	r3, [pc, #228]	; (8005824 <xTaskIncrementTick+0x158>)
 8005740:	681b      	ldr	r3, [r3, #0]
 8005742:	681b      	ldr	r3, [r3, #0]
 8005744:	2b00      	cmp	r3, #0
 8005746:	d101      	bne.n	800574c <xTaskIncrementTick+0x80>
 8005748:	2301      	movs	r3, #1
 800574a:	e000      	b.n	800574e <xTaskIncrementTick+0x82>
 800574c:	2300      	movs	r3, #0
 800574e:	2b00      	cmp	r3, #0
 8005750:	d004      	beq.n	800575c <xTaskIncrementTick+0x90>
 8005752:	4b37      	ldr	r3, [pc, #220]	; (8005830 <xTaskIncrementTick+0x164>)
 8005754:	f04f 32ff 	mov.w	r2, #4294967295
 8005758:	601a      	str	r2, [r3, #0]
 800575a:	e03f      	b.n	80057dc <xTaskIncrementTick+0x110>
 800575c:	4b31      	ldr	r3, [pc, #196]	; (8005824 <xTaskIncrementTick+0x158>)
 800575e:	681b      	ldr	r3, [r3, #0]
 8005760:	68db      	ldr	r3, [r3, #12]
 8005762:	68db      	ldr	r3, [r3, #12]
 8005764:	60bb      	str	r3, [r7, #8]
 8005766:	68bb      	ldr	r3, [r7, #8]
 8005768:	685b      	ldr	r3, [r3, #4]
 800576a:	607b      	str	r3, [r7, #4]
 800576c:	693a      	ldr	r2, [r7, #16]
 800576e:	687b      	ldr	r3, [r7, #4]
 8005770:	429a      	cmp	r2, r3
 8005772:	d203      	bcs.n	800577c <xTaskIncrementTick+0xb0>
 8005774:	4a2e      	ldr	r2, [pc, #184]	; (8005830 <xTaskIncrementTick+0x164>)
 8005776:	687b      	ldr	r3, [r7, #4]
 8005778:	6013      	str	r3, [r2, #0]
 800577a:	e02f      	b.n	80057dc <xTaskIncrementTick+0x110>
 800577c:	68bb      	ldr	r3, [r7, #8]
 800577e:	3304      	adds	r3, #4
 8005780:	4618      	mov	r0, r3
 8005782:	f7fe ffbf 	bl	8004704 <uxListRemove>
 8005786:	68bb      	ldr	r3, [r7, #8]
 8005788:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800578a:	2b00      	cmp	r3, #0
 800578c:	d004      	beq.n	8005798 <xTaskIncrementTick+0xcc>
 800578e:	68bb      	ldr	r3, [r7, #8]
 8005790:	3318      	adds	r3, #24
 8005792:	4618      	mov	r0, r3
 8005794:	f7fe ffb6 	bl	8004704 <uxListRemove>
 8005798:	68bb      	ldr	r3, [r7, #8]
 800579a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800579c:	4b25      	ldr	r3, [pc, #148]	; (8005834 <xTaskIncrementTick+0x168>)
 800579e:	681b      	ldr	r3, [r3, #0]
 80057a0:	429a      	cmp	r2, r3
 80057a2:	d903      	bls.n	80057ac <xTaskIncrementTick+0xe0>
 80057a4:	68bb      	ldr	r3, [r7, #8]
 80057a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80057a8:	4a22      	ldr	r2, [pc, #136]	; (8005834 <xTaskIncrementTick+0x168>)
 80057aa:	6013      	str	r3, [r2, #0]
 80057ac:	68bb      	ldr	r3, [r7, #8]
 80057ae:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80057b0:	4613      	mov	r3, r2
 80057b2:	009b      	lsls	r3, r3, #2
 80057b4:	4413      	add	r3, r2
 80057b6:	009b      	lsls	r3, r3, #2
 80057b8:	4a1f      	ldr	r2, [pc, #124]	; (8005838 <xTaskIncrementTick+0x16c>)
 80057ba:	441a      	add	r2, r3
 80057bc:	68bb      	ldr	r3, [r7, #8]
 80057be:	3304      	adds	r3, #4
 80057c0:	4619      	mov	r1, r3
 80057c2:	4610      	mov	r0, r2
 80057c4:	f7fe ff41 	bl	800464a <vListInsertEnd>
 80057c8:	68bb      	ldr	r3, [r7, #8]
 80057ca:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80057cc:	4b1b      	ldr	r3, [pc, #108]	; (800583c <xTaskIncrementTick+0x170>)
 80057ce:	681b      	ldr	r3, [r3, #0]
 80057d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80057d2:	429a      	cmp	r2, r3
 80057d4:	d3b3      	bcc.n	800573e <xTaskIncrementTick+0x72>
 80057d6:	2301      	movs	r3, #1
 80057d8:	617b      	str	r3, [r7, #20]
 80057da:	e7b0      	b.n	800573e <xTaskIncrementTick+0x72>
 80057dc:	4b17      	ldr	r3, [pc, #92]	; (800583c <xTaskIncrementTick+0x170>)
 80057de:	681b      	ldr	r3, [r3, #0]
 80057e0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80057e2:	4915      	ldr	r1, [pc, #84]	; (8005838 <xTaskIncrementTick+0x16c>)
 80057e4:	4613      	mov	r3, r2
 80057e6:	009b      	lsls	r3, r3, #2
 80057e8:	4413      	add	r3, r2
 80057ea:	009b      	lsls	r3, r3, #2
 80057ec:	440b      	add	r3, r1
 80057ee:	681b      	ldr	r3, [r3, #0]
 80057f0:	2b01      	cmp	r3, #1
 80057f2:	d907      	bls.n	8005804 <xTaskIncrementTick+0x138>
 80057f4:	2301      	movs	r3, #1
 80057f6:	617b      	str	r3, [r7, #20]
 80057f8:	e004      	b.n	8005804 <xTaskIncrementTick+0x138>
 80057fa:	4b11      	ldr	r3, [pc, #68]	; (8005840 <xTaskIncrementTick+0x174>)
 80057fc:	681b      	ldr	r3, [r3, #0]
 80057fe:	3301      	adds	r3, #1
 8005800:	4a0f      	ldr	r2, [pc, #60]	; (8005840 <xTaskIncrementTick+0x174>)
 8005802:	6013      	str	r3, [r2, #0]
 8005804:	4b0f      	ldr	r3, [pc, #60]	; (8005844 <xTaskIncrementTick+0x178>)
 8005806:	681b      	ldr	r3, [r3, #0]
 8005808:	2b00      	cmp	r3, #0
 800580a:	d001      	beq.n	8005810 <xTaskIncrementTick+0x144>
 800580c:	2301      	movs	r3, #1
 800580e:	617b      	str	r3, [r7, #20]
 8005810:	697b      	ldr	r3, [r7, #20]
 8005812:	4618      	mov	r0, r3
 8005814:	3718      	adds	r7, #24
 8005816:	46bd      	mov	sp, r7
 8005818:	bd80      	pop	{r7, pc}
 800581a:	bf00      	nop
 800581c:	20000de0 	.word	0x20000de0
 8005820:	20000dbc 	.word	0x20000dbc
 8005824:	20000d70 	.word	0x20000d70
 8005828:	20000d74 	.word	0x20000d74
 800582c:	20000dd0 	.word	0x20000dd0
 8005830:	20000dd8 	.word	0x20000dd8
 8005834:	20000dc0 	.word	0x20000dc0
 8005838:	200008e8 	.word	0x200008e8
 800583c:	200008e4 	.word	0x200008e4
 8005840:	20000dc8 	.word	0x20000dc8
 8005844:	20000dcc 	.word	0x20000dcc

08005848 <vTaskSwitchContext>:
 8005848:	b480      	push	{r7}
 800584a:	b085      	sub	sp, #20
 800584c:	af00      	add	r7, sp, #0
 800584e:	4b27      	ldr	r3, [pc, #156]	; (80058ec <vTaskSwitchContext+0xa4>)
 8005850:	681b      	ldr	r3, [r3, #0]
 8005852:	2b00      	cmp	r3, #0
 8005854:	d003      	beq.n	800585e <vTaskSwitchContext+0x16>
 8005856:	4b26      	ldr	r3, [pc, #152]	; (80058f0 <vTaskSwitchContext+0xa8>)
 8005858:	2201      	movs	r2, #1
 800585a:	601a      	str	r2, [r3, #0]
 800585c:	e040      	b.n	80058e0 <vTaskSwitchContext+0x98>
 800585e:	4b24      	ldr	r3, [pc, #144]	; (80058f0 <vTaskSwitchContext+0xa8>)
 8005860:	2200      	movs	r2, #0
 8005862:	601a      	str	r2, [r3, #0]
 8005864:	4b23      	ldr	r3, [pc, #140]	; (80058f4 <vTaskSwitchContext+0xac>)
 8005866:	681b      	ldr	r3, [r3, #0]
 8005868:	60fb      	str	r3, [r7, #12]
 800586a:	e00f      	b.n	800588c <vTaskSwitchContext+0x44>
 800586c:	68fb      	ldr	r3, [r7, #12]
 800586e:	2b00      	cmp	r3, #0
 8005870:	d109      	bne.n	8005886 <vTaskSwitchContext+0x3e>
 8005872:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005876:	f383 8811 	msr	BASEPRI, r3
 800587a:	f3bf 8f6f 	isb	sy
 800587e:	f3bf 8f4f 	dsb	sy
 8005882:	607b      	str	r3, [r7, #4]
 8005884:	e7fe      	b.n	8005884 <vTaskSwitchContext+0x3c>
 8005886:	68fb      	ldr	r3, [r7, #12]
 8005888:	3b01      	subs	r3, #1
 800588a:	60fb      	str	r3, [r7, #12]
 800588c:	491a      	ldr	r1, [pc, #104]	; (80058f8 <vTaskSwitchContext+0xb0>)
 800588e:	68fa      	ldr	r2, [r7, #12]
 8005890:	4613      	mov	r3, r2
 8005892:	009b      	lsls	r3, r3, #2
 8005894:	4413      	add	r3, r2
 8005896:	009b      	lsls	r3, r3, #2
 8005898:	440b      	add	r3, r1
 800589a:	681b      	ldr	r3, [r3, #0]
 800589c:	2b00      	cmp	r3, #0
 800589e:	d0e5      	beq.n	800586c <vTaskSwitchContext+0x24>
 80058a0:	68fa      	ldr	r2, [r7, #12]
 80058a2:	4613      	mov	r3, r2
 80058a4:	009b      	lsls	r3, r3, #2
 80058a6:	4413      	add	r3, r2
 80058a8:	009b      	lsls	r3, r3, #2
 80058aa:	4a13      	ldr	r2, [pc, #76]	; (80058f8 <vTaskSwitchContext+0xb0>)
 80058ac:	4413      	add	r3, r2
 80058ae:	60bb      	str	r3, [r7, #8]
 80058b0:	68bb      	ldr	r3, [r7, #8]
 80058b2:	685b      	ldr	r3, [r3, #4]
 80058b4:	685a      	ldr	r2, [r3, #4]
 80058b6:	68bb      	ldr	r3, [r7, #8]
 80058b8:	605a      	str	r2, [r3, #4]
 80058ba:	68bb      	ldr	r3, [r7, #8]
 80058bc:	685a      	ldr	r2, [r3, #4]
 80058be:	68bb      	ldr	r3, [r7, #8]
 80058c0:	3308      	adds	r3, #8
 80058c2:	429a      	cmp	r2, r3
 80058c4:	d104      	bne.n	80058d0 <vTaskSwitchContext+0x88>
 80058c6:	68bb      	ldr	r3, [r7, #8]
 80058c8:	685b      	ldr	r3, [r3, #4]
 80058ca:	685a      	ldr	r2, [r3, #4]
 80058cc:	68bb      	ldr	r3, [r7, #8]
 80058ce:	605a      	str	r2, [r3, #4]
 80058d0:	68bb      	ldr	r3, [r7, #8]
 80058d2:	685b      	ldr	r3, [r3, #4]
 80058d4:	68db      	ldr	r3, [r3, #12]
 80058d6:	4a09      	ldr	r2, [pc, #36]	; (80058fc <vTaskSwitchContext+0xb4>)
 80058d8:	6013      	str	r3, [r2, #0]
 80058da:	4a06      	ldr	r2, [pc, #24]	; (80058f4 <vTaskSwitchContext+0xac>)
 80058dc:	68fb      	ldr	r3, [r7, #12]
 80058de:	6013      	str	r3, [r2, #0]
 80058e0:	bf00      	nop
 80058e2:	3714      	adds	r7, #20
 80058e4:	46bd      	mov	sp, r7
 80058e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058ea:	4770      	bx	lr
 80058ec:	20000de0 	.word	0x20000de0
 80058f0:	20000dcc 	.word	0x20000dcc
 80058f4:	20000dc0 	.word	0x20000dc0
 80058f8:	200008e8 	.word	0x200008e8
 80058fc:	200008e4 	.word	0x200008e4

08005900 <vTaskPlaceOnEventList>:
 8005900:	b580      	push	{r7, lr}
 8005902:	b084      	sub	sp, #16
 8005904:	af00      	add	r7, sp, #0
 8005906:	6078      	str	r0, [r7, #4]
 8005908:	6039      	str	r1, [r7, #0]
 800590a:	687b      	ldr	r3, [r7, #4]
 800590c:	2b00      	cmp	r3, #0
 800590e:	d109      	bne.n	8005924 <vTaskPlaceOnEventList+0x24>
 8005910:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005914:	f383 8811 	msr	BASEPRI, r3
 8005918:	f3bf 8f6f 	isb	sy
 800591c:	f3bf 8f4f 	dsb	sy
 8005920:	60fb      	str	r3, [r7, #12]
 8005922:	e7fe      	b.n	8005922 <vTaskPlaceOnEventList+0x22>
 8005924:	4b07      	ldr	r3, [pc, #28]	; (8005944 <vTaskPlaceOnEventList+0x44>)
 8005926:	681b      	ldr	r3, [r3, #0]
 8005928:	3318      	adds	r3, #24
 800592a:	4619      	mov	r1, r3
 800592c:	6878      	ldr	r0, [r7, #4]
 800592e:	f7fe feb0 	bl	8004692 <vListInsert>
 8005932:	2101      	movs	r1, #1
 8005934:	6838      	ldr	r0, [r7, #0]
 8005936:	f000 fa77 	bl	8005e28 <prvAddCurrentTaskToDelayedList>
 800593a:	bf00      	nop
 800593c:	3710      	adds	r7, #16
 800593e:	46bd      	mov	sp, r7
 8005940:	bd80      	pop	{r7, pc}
 8005942:	bf00      	nop
 8005944:	200008e4 	.word	0x200008e4

08005948 <vTaskPlaceOnEventListRestricted>:
 8005948:	b580      	push	{r7, lr}
 800594a:	b086      	sub	sp, #24
 800594c:	af00      	add	r7, sp, #0
 800594e:	60f8      	str	r0, [r7, #12]
 8005950:	60b9      	str	r1, [r7, #8]
 8005952:	607a      	str	r2, [r7, #4]
 8005954:	68fb      	ldr	r3, [r7, #12]
 8005956:	2b00      	cmp	r3, #0
 8005958:	d109      	bne.n	800596e <vTaskPlaceOnEventListRestricted+0x26>
 800595a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800595e:	f383 8811 	msr	BASEPRI, r3
 8005962:	f3bf 8f6f 	isb	sy
 8005966:	f3bf 8f4f 	dsb	sy
 800596a:	617b      	str	r3, [r7, #20]
 800596c:	e7fe      	b.n	800596c <vTaskPlaceOnEventListRestricted+0x24>
 800596e:	4b0a      	ldr	r3, [pc, #40]	; (8005998 <vTaskPlaceOnEventListRestricted+0x50>)
 8005970:	681b      	ldr	r3, [r3, #0]
 8005972:	3318      	adds	r3, #24
 8005974:	4619      	mov	r1, r3
 8005976:	68f8      	ldr	r0, [r7, #12]
 8005978:	f7fe fe67 	bl	800464a <vListInsertEnd>
 800597c:	687b      	ldr	r3, [r7, #4]
 800597e:	2b00      	cmp	r3, #0
 8005980:	d002      	beq.n	8005988 <vTaskPlaceOnEventListRestricted+0x40>
 8005982:	f04f 33ff 	mov.w	r3, #4294967295
 8005986:	60bb      	str	r3, [r7, #8]
 8005988:	6879      	ldr	r1, [r7, #4]
 800598a:	68b8      	ldr	r0, [r7, #8]
 800598c:	f000 fa4c 	bl	8005e28 <prvAddCurrentTaskToDelayedList>
 8005990:	bf00      	nop
 8005992:	3718      	adds	r7, #24
 8005994:	46bd      	mov	sp, r7
 8005996:	bd80      	pop	{r7, pc}
 8005998:	200008e4 	.word	0x200008e4

0800599c <xTaskRemoveFromEventList>:
 800599c:	b580      	push	{r7, lr}
 800599e:	b086      	sub	sp, #24
 80059a0:	af00      	add	r7, sp, #0
 80059a2:	6078      	str	r0, [r7, #4]
 80059a4:	687b      	ldr	r3, [r7, #4]
 80059a6:	68db      	ldr	r3, [r3, #12]
 80059a8:	68db      	ldr	r3, [r3, #12]
 80059aa:	613b      	str	r3, [r7, #16]
 80059ac:	693b      	ldr	r3, [r7, #16]
 80059ae:	2b00      	cmp	r3, #0
 80059b0:	d109      	bne.n	80059c6 <xTaskRemoveFromEventList+0x2a>
 80059b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80059b6:	f383 8811 	msr	BASEPRI, r3
 80059ba:	f3bf 8f6f 	isb	sy
 80059be:	f3bf 8f4f 	dsb	sy
 80059c2:	60fb      	str	r3, [r7, #12]
 80059c4:	e7fe      	b.n	80059c4 <xTaskRemoveFromEventList+0x28>
 80059c6:	693b      	ldr	r3, [r7, #16]
 80059c8:	3318      	adds	r3, #24
 80059ca:	4618      	mov	r0, r3
 80059cc:	f7fe fe9a 	bl	8004704 <uxListRemove>
 80059d0:	4b1d      	ldr	r3, [pc, #116]	; (8005a48 <xTaskRemoveFromEventList+0xac>)
 80059d2:	681b      	ldr	r3, [r3, #0]
 80059d4:	2b00      	cmp	r3, #0
 80059d6:	d11d      	bne.n	8005a14 <xTaskRemoveFromEventList+0x78>
 80059d8:	693b      	ldr	r3, [r7, #16]
 80059da:	3304      	adds	r3, #4
 80059dc:	4618      	mov	r0, r3
 80059de:	f7fe fe91 	bl	8004704 <uxListRemove>
 80059e2:	693b      	ldr	r3, [r7, #16]
 80059e4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80059e6:	4b19      	ldr	r3, [pc, #100]	; (8005a4c <xTaskRemoveFromEventList+0xb0>)
 80059e8:	681b      	ldr	r3, [r3, #0]
 80059ea:	429a      	cmp	r2, r3
 80059ec:	d903      	bls.n	80059f6 <xTaskRemoveFromEventList+0x5a>
 80059ee:	693b      	ldr	r3, [r7, #16]
 80059f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80059f2:	4a16      	ldr	r2, [pc, #88]	; (8005a4c <xTaskRemoveFromEventList+0xb0>)
 80059f4:	6013      	str	r3, [r2, #0]
 80059f6:	693b      	ldr	r3, [r7, #16]
 80059f8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80059fa:	4613      	mov	r3, r2
 80059fc:	009b      	lsls	r3, r3, #2
 80059fe:	4413      	add	r3, r2
 8005a00:	009b      	lsls	r3, r3, #2
 8005a02:	4a13      	ldr	r2, [pc, #76]	; (8005a50 <xTaskRemoveFromEventList+0xb4>)
 8005a04:	441a      	add	r2, r3
 8005a06:	693b      	ldr	r3, [r7, #16]
 8005a08:	3304      	adds	r3, #4
 8005a0a:	4619      	mov	r1, r3
 8005a0c:	4610      	mov	r0, r2
 8005a0e:	f7fe fe1c 	bl	800464a <vListInsertEnd>
 8005a12:	e005      	b.n	8005a20 <xTaskRemoveFromEventList+0x84>
 8005a14:	693b      	ldr	r3, [r7, #16]
 8005a16:	3318      	adds	r3, #24
 8005a18:	4619      	mov	r1, r3
 8005a1a:	480e      	ldr	r0, [pc, #56]	; (8005a54 <xTaskRemoveFromEventList+0xb8>)
 8005a1c:	f7fe fe15 	bl	800464a <vListInsertEnd>
 8005a20:	693b      	ldr	r3, [r7, #16]
 8005a22:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005a24:	4b0c      	ldr	r3, [pc, #48]	; (8005a58 <xTaskRemoveFromEventList+0xbc>)
 8005a26:	681b      	ldr	r3, [r3, #0]
 8005a28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005a2a:	429a      	cmp	r2, r3
 8005a2c:	d905      	bls.n	8005a3a <xTaskRemoveFromEventList+0x9e>
 8005a2e:	2301      	movs	r3, #1
 8005a30:	617b      	str	r3, [r7, #20]
 8005a32:	4b0a      	ldr	r3, [pc, #40]	; (8005a5c <xTaskRemoveFromEventList+0xc0>)
 8005a34:	2201      	movs	r2, #1
 8005a36:	601a      	str	r2, [r3, #0]
 8005a38:	e001      	b.n	8005a3e <xTaskRemoveFromEventList+0xa2>
 8005a3a:	2300      	movs	r3, #0
 8005a3c:	617b      	str	r3, [r7, #20]
 8005a3e:	697b      	ldr	r3, [r7, #20]
 8005a40:	4618      	mov	r0, r3
 8005a42:	3718      	adds	r7, #24
 8005a44:	46bd      	mov	sp, r7
 8005a46:	bd80      	pop	{r7, pc}
 8005a48:	20000de0 	.word	0x20000de0
 8005a4c:	20000dc0 	.word	0x20000dc0
 8005a50:	200008e8 	.word	0x200008e8
 8005a54:	20000d78 	.word	0x20000d78
 8005a58:	200008e4 	.word	0x200008e4
 8005a5c:	20000dcc 	.word	0x20000dcc

08005a60 <vTaskInternalSetTimeOutState>:
 8005a60:	b480      	push	{r7}
 8005a62:	b083      	sub	sp, #12
 8005a64:	af00      	add	r7, sp, #0
 8005a66:	6078      	str	r0, [r7, #4]
 8005a68:	4b06      	ldr	r3, [pc, #24]	; (8005a84 <vTaskInternalSetTimeOutState+0x24>)
 8005a6a:	681a      	ldr	r2, [r3, #0]
 8005a6c:	687b      	ldr	r3, [r7, #4]
 8005a6e:	601a      	str	r2, [r3, #0]
 8005a70:	4b05      	ldr	r3, [pc, #20]	; (8005a88 <vTaskInternalSetTimeOutState+0x28>)
 8005a72:	681a      	ldr	r2, [r3, #0]
 8005a74:	687b      	ldr	r3, [r7, #4]
 8005a76:	605a      	str	r2, [r3, #4]
 8005a78:	bf00      	nop
 8005a7a:	370c      	adds	r7, #12
 8005a7c:	46bd      	mov	sp, r7
 8005a7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a82:	4770      	bx	lr
 8005a84:	20000dd0 	.word	0x20000dd0
 8005a88:	20000dbc 	.word	0x20000dbc

08005a8c <xTaskCheckForTimeOut>:
 8005a8c:	b580      	push	{r7, lr}
 8005a8e:	b088      	sub	sp, #32
 8005a90:	af00      	add	r7, sp, #0
 8005a92:	6078      	str	r0, [r7, #4]
 8005a94:	6039      	str	r1, [r7, #0]
 8005a96:	687b      	ldr	r3, [r7, #4]
 8005a98:	2b00      	cmp	r3, #0
 8005a9a:	d109      	bne.n	8005ab0 <xTaskCheckForTimeOut+0x24>
 8005a9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005aa0:	f383 8811 	msr	BASEPRI, r3
 8005aa4:	f3bf 8f6f 	isb	sy
 8005aa8:	f3bf 8f4f 	dsb	sy
 8005aac:	613b      	str	r3, [r7, #16]
 8005aae:	e7fe      	b.n	8005aae <xTaskCheckForTimeOut+0x22>
 8005ab0:	683b      	ldr	r3, [r7, #0]
 8005ab2:	2b00      	cmp	r3, #0
 8005ab4:	d109      	bne.n	8005aca <xTaskCheckForTimeOut+0x3e>
 8005ab6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005aba:	f383 8811 	msr	BASEPRI, r3
 8005abe:	f3bf 8f6f 	isb	sy
 8005ac2:	f3bf 8f4f 	dsb	sy
 8005ac6:	60fb      	str	r3, [r7, #12]
 8005ac8:	e7fe      	b.n	8005ac8 <xTaskCheckForTimeOut+0x3c>
 8005aca:	f000 fe2f 	bl	800672c <vPortEnterCritical>
 8005ace:	4b1d      	ldr	r3, [pc, #116]	; (8005b44 <xTaskCheckForTimeOut+0xb8>)
 8005ad0:	681b      	ldr	r3, [r3, #0]
 8005ad2:	61bb      	str	r3, [r7, #24]
 8005ad4:	687b      	ldr	r3, [r7, #4]
 8005ad6:	685b      	ldr	r3, [r3, #4]
 8005ad8:	69ba      	ldr	r2, [r7, #24]
 8005ada:	1ad3      	subs	r3, r2, r3
 8005adc:	617b      	str	r3, [r7, #20]
 8005ade:	683b      	ldr	r3, [r7, #0]
 8005ae0:	681b      	ldr	r3, [r3, #0]
 8005ae2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005ae6:	d102      	bne.n	8005aee <xTaskCheckForTimeOut+0x62>
 8005ae8:	2300      	movs	r3, #0
 8005aea:	61fb      	str	r3, [r7, #28]
 8005aec:	e023      	b.n	8005b36 <xTaskCheckForTimeOut+0xaa>
 8005aee:	687b      	ldr	r3, [r7, #4]
 8005af0:	681a      	ldr	r2, [r3, #0]
 8005af2:	4b15      	ldr	r3, [pc, #84]	; (8005b48 <xTaskCheckForTimeOut+0xbc>)
 8005af4:	681b      	ldr	r3, [r3, #0]
 8005af6:	429a      	cmp	r2, r3
 8005af8:	d007      	beq.n	8005b0a <xTaskCheckForTimeOut+0x7e>
 8005afa:	687b      	ldr	r3, [r7, #4]
 8005afc:	685b      	ldr	r3, [r3, #4]
 8005afe:	69ba      	ldr	r2, [r7, #24]
 8005b00:	429a      	cmp	r2, r3
 8005b02:	d302      	bcc.n	8005b0a <xTaskCheckForTimeOut+0x7e>
 8005b04:	2301      	movs	r3, #1
 8005b06:	61fb      	str	r3, [r7, #28]
 8005b08:	e015      	b.n	8005b36 <xTaskCheckForTimeOut+0xaa>
 8005b0a:	683b      	ldr	r3, [r7, #0]
 8005b0c:	681b      	ldr	r3, [r3, #0]
 8005b0e:	697a      	ldr	r2, [r7, #20]
 8005b10:	429a      	cmp	r2, r3
 8005b12:	d20b      	bcs.n	8005b2c <xTaskCheckForTimeOut+0xa0>
 8005b14:	683b      	ldr	r3, [r7, #0]
 8005b16:	681a      	ldr	r2, [r3, #0]
 8005b18:	697b      	ldr	r3, [r7, #20]
 8005b1a:	1ad2      	subs	r2, r2, r3
 8005b1c:	683b      	ldr	r3, [r7, #0]
 8005b1e:	601a      	str	r2, [r3, #0]
 8005b20:	6878      	ldr	r0, [r7, #4]
 8005b22:	f7ff ff9d 	bl	8005a60 <vTaskInternalSetTimeOutState>
 8005b26:	2300      	movs	r3, #0
 8005b28:	61fb      	str	r3, [r7, #28]
 8005b2a:	e004      	b.n	8005b36 <xTaskCheckForTimeOut+0xaa>
 8005b2c:	683b      	ldr	r3, [r7, #0]
 8005b2e:	2200      	movs	r2, #0
 8005b30:	601a      	str	r2, [r3, #0]
 8005b32:	2301      	movs	r3, #1
 8005b34:	61fb      	str	r3, [r7, #28]
 8005b36:	f000 fe27 	bl	8006788 <vPortExitCritical>
 8005b3a:	69fb      	ldr	r3, [r7, #28]
 8005b3c:	4618      	mov	r0, r3
 8005b3e:	3720      	adds	r7, #32
 8005b40:	46bd      	mov	sp, r7
 8005b42:	bd80      	pop	{r7, pc}
 8005b44:	20000dbc 	.word	0x20000dbc
 8005b48:	20000dd0 	.word	0x20000dd0

08005b4c <vTaskMissedYield>:
 8005b4c:	b480      	push	{r7}
 8005b4e:	af00      	add	r7, sp, #0
 8005b50:	4b03      	ldr	r3, [pc, #12]	; (8005b60 <vTaskMissedYield+0x14>)
 8005b52:	2201      	movs	r2, #1
 8005b54:	601a      	str	r2, [r3, #0]
 8005b56:	bf00      	nop
 8005b58:	46bd      	mov	sp, r7
 8005b5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b5e:	4770      	bx	lr
 8005b60:	20000dcc 	.word	0x20000dcc

08005b64 <prvIdleTask>:
 8005b64:	b580      	push	{r7, lr}
 8005b66:	b082      	sub	sp, #8
 8005b68:	af00      	add	r7, sp, #0
 8005b6a:	6078      	str	r0, [r7, #4]
 8005b6c:	f000 f852 	bl	8005c14 <prvCheckTasksWaitingTermination>
 8005b70:	4b06      	ldr	r3, [pc, #24]	; (8005b8c <prvIdleTask+0x28>)
 8005b72:	681b      	ldr	r3, [r3, #0]
 8005b74:	2b01      	cmp	r3, #1
 8005b76:	d9f9      	bls.n	8005b6c <prvIdleTask+0x8>
 8005b78:	4b05      	ldr	r3, [pc, #20]	; (8005b90 <prvIdleTask+0x2c>)
 8005b7a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005b7e:	601a      	str	r2, [r3, #0]
 8005b80:	f3bf 8f4f 	dsb	sy
 8005b84:	f3bf 8f6f 	isb	sy
 8005b88:	e7f0      	b.n	8005b6c <prvIdleTask+0x8>
 8005b8a:	bf00      	nop
 8005b8c:	200008e8 	.word	0x200008e8
 8005b90:	e000ed04 	.word	0xe000ed04

08005b94 <prvInitialiseTaskLists>:
 8005b94:	b580      	push	{r7, lr}
 8005b96:	b082      	sub	sp, #8
 8005b98:	af00      	add	r7, sp, #0
 8005b9a:	2300      	movs	r3, #0
 8005b9c:	607b      	str	r3, [r7, #4]
 8005b9e:	e00c      	b.n	8005bba <prvInitialiseTaskLists+0x26>
 8005ba0:	687a      	ldr	r2, [r7, #4]
 8005ba2:	4613      	mov	r3, r2
 8005ba4:	009b      	lsls	r3, r3, #2
 8005ba6:	4413      	add	r3, r2
 8005ba8:	009b      	lsls	r3, r3, #2
 8005baa:	4a12      	ldr	r2, [pc, #72]	; (8005bf4 <prvInitialiseTaskLists+0x60>)
 8005bac:	4413      	add	r3, r2
 8005bae:	4618      	mov	r0, r3
 8005bb0:	f7fe fd1e 	bl	80045f0 <vListInitialise>
 8005bb4:	687b      	ldr	r3, [r7, #4]
 8005bb6:	3301      	adds	r3, #1
 8005bb8:	607b      	str	r3, [r7, #4]
 8005bba:	687b      	ldr	r3, [r7, #4]
 8005bbc:	2b37      	cmp	r3, #55	; 0x37
 8005bbe:	d9ef      	bls.n	8005ba0 <prvInitialiseTaskLists+0xc>
 8005bc0:	480d      	ldr	r0, [pc, #52]	; (8005bf8 <prvInitialiseTaskLists+0x64>)
 8005bc2:	f7fe fd15 	bl	80045f0 <vListInitialise>
 8005bc6:	480d      	ldr	r0, [pc, #52]	; (8005bfc <prvInitialiseTaskLists+0x68>)
 8005bc8:	f7fe fd12 	bl	80045f0 <vListInitialise>
 8005bcc:	480c      	ldr	r0, [pc, #48]	; (8005c00 <prvInitialiseTaskLists+0x6c>)
 8005bce:	f7fe fd0f 	bl	80045f0 <vListInitialise>
 8005bd2:	480c      	ldr	r0, [pc, #48]	; (8005c04 <prvInitialiseTaskLists+0x70>)
 8005bd4:	f7fe fd0c 	bl	80045f0 <vListInitialise>
 8005bd8:	480b      	ldr	r0, [pc, #44]	; (8005c08 <prvInitialiseTaskLists+0x74>)
 8005bda:	f7fe fd09 	bl	80045f0 <vListInitialise>
 8005bde:	4b0b      	ldr	r3, [pc, #44]	; (8005c0c <prvInitialiseTaskLists+0x78>)
 8005be0:	4a05      	ldr	r2, [pc, #20]	; (8005bf8 <prvInitialiseTaskLists+0x64>)
 8005be2:	601a      	str	r2, [r3, #0]
 8005be4:	4b0a      	ldr	r3, [pc, #40]	; (8005c10 <prvInitialiseTaskLists+0x7c>)
 8005be6:	4a05      	ldr	r2, [pc, #20]	; (8005bfc <prvInitialiseTaskLists+0x68>)
 8005be8:	601a      	str	r2, [r3, #0]
 8005bea:	bf00      	nop
 8005bec:	3708      	adds	r7, #8
 8005bee:	46bd      	mov	sp, r7
 8005bf0:	bd80      	pop	{r7, pc}
 8005bf2:	bf00      	nop
 8005bf4:	200008e8 	.word	0x200008e8
 8005bf8:	20000d48 	.word	0x20000d48
 8005bfc:	20000d5c 	.word	0x20000d5c
 8005c00:	20000d78 	.word	0x20000d78
 8005c04:	20000d8c 	.word	0x20000d8c
 8005c08:	20000da4 	.word	0x20000da4
 8005c0c:	20000d70 	.word	0x20000d70
 8005c10:	20000d74 	.word	0x20000d74

08005c14 <prvCheckTasksWaitingTermination>:
 8005c14:	b580      	push	{r7, lr}
 8005c16:	b082      	sub	sp, #8
 8005c18:	af00      	add	r7, sp, #0
 8005c1a:	e019      	b.n	8005c50 <prvCheckTasksWaitingTermination+0x3c>
 8005c1c:	f000 fd86 	bl	800672c <vPortEnterCritical>
 8005c20:	4b0f      	ldr	r3, [pc, #60]	; (8005c60 <prvCheckTasksWaitingTermination+0x4c>)
 8005c22:	68db      	ldr	r3, [r3, #12]
 8005c24:	68db      	ldr	r3, [r3, #12]
 8005c26:	607b      	str	r3, [r7, #4]
 8005c28:	687b      	ldr	r3, [r7, #4]
 8005c2a:	3304      	adds	r3, #4
 8005c2c:	4618      	mov	r0, r3
 8005c2e:	f7fe fd69 	bl	8004704 <uxListRemove>
 8005c32:	4b0c      	ldr	r3, [pc, #48]	; (8005c64 <prvCheckTasksWaitingTermination+0x50>)
 8005c34:	681b      	ldr	r3, [r3, #0]
 8005c36:	3b01      	subs	r3, #1
 8005c38:	4a0a      	ldr	r2, [pc, #40]	; (8005c64 <prvCheckTasksWaitingTermination+0x50>)
 8005c3a:	6013      	str	r3, [r2, #0]
 8005c3c:	4b0a      	ldr	r3, [pc, #40]	; (8005c68 <prvCheckTasksWaitingTermination+0x54>)
 8005c3e:	681b      	ldr	r3, [r3, #0]
 8005c40:	3b01      	subs	r3, #1
 8005c42:	4a09      	ldr	r2, [pc, #36]	; (8005c68 <prvCheckTasksWaitingTermination+0x54>)
 8005c44:	6013      	str	r3, [r2, #0]
 8005c46:	f000 fd9f 	bl	8006788 <vPortExitCritical>
 8005c4a:	6878      	ldr	r0, [r7, #4]
 8005c4c:	f000 f80e 	bl	8005c6c <prvDeleteTCB>
 8005c50:	4b05      	ldr	r3, [pc, #20]	; (8005c68 <prvCheckTasksWaitingTermination+0x54>)
 8005c52:	681b      	ldr	r3, [r3, #0]
 8005c54:	2b00      	cmp	r3, #0
 8005c56:	d1e1      	bne.n	8005c1c <prvCheckTasksWaitingTermination+0x8>
 8005c58:	bf00      	nop
 8005c5a:	3708      	adds	r7, #8
 8005c5c:	46bd      	mov	sp, r7
 8005c5e:	bd80      	pop	{r7, pc}
 8005c60:	20000d8c 	.word	0x20000d8c
 8005c64:	20000db8 	.word	0x20000db8
 8005c68:	20000da0 	.word	0x20000da0

08005c6c <prvDeleteTCB>:
 8005c6c:	b580      	push	{r7, lr}
 8005c6e:	b084      	sub	sp, #16
 8005c70:	af00      	add	r7, sp, #0
 8005c72:	6078      	str	r0, [r7, #4]
 8005c74:	687b      	ldr	r3, [r7, #4]
 8005c76:	f893 3059 	ldrb.w	r3, [r3, #89]	; 0x59
 8005c7a:	2b00      	cmp	r3, #0
 8005c7c:	d108      	bne.n	8005c90 <prvDeleteTCB+0x24>
 8005c7e:	687b      	ldr	r3, [r7, #4]
 8005c80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005c82:	4618      	mov	r0, r3
 8005c84:	f000 ff2e 	bl	8006ae4 <vPortFree>
 8005c88:	6878      	ldr	r0, [r7, #4]
 8005c8a:	f000 ff2b 	bl	8006ae4 <vPortFree>
 8005c8e:	e017      	b.n	8005cc0 <prvDeleteTCB+0x54>
 8005c90:	687b      	ldr	r3, [r7, #4]
 8005c92:	f893 3059 	ldrb.w	r3, [r3, #89]	; 0x59
 8005c96:	2b01      	cmp	r3, #1
 8005c98:	d103      	bne.n	8005ca2 <prvDeleteTCB+0x36>
 8005c9a:	6878      	ldr	r0, [r7, #4]
 8005c9c:	f000 ff22 	bl	8006ae4 <vPortFree>
 8005ca0:	e00e      	b.n	8005cc0 <prvDeleteTCB+0x54>
 8005ca2:	687b      	ldr	r3, [r7, #4]
 8005ca4:	f893 3059 	ldrb.w	r3, [r3, #89]	; 0x59
 8005ca8:	2b02      	cmp	r3, #2
 8005caa:	d009      	beq.n	8005cc0 <prvDeleteTCB+0x54>
 8005cac:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005cb0:	f383 8811 	msr	BASEPRI, r3
 8005cb4:	f3bf 8f6f 	isb	sy
 8005cb8:	f3bf 8f4f 	dsb	sy
 8005cbc:	60fb      	str	r3, [r7, #12]
 8005cbe:	e7fe      	b.n	8005cbe <prvDeleteTCB+0x52>
 8005cc0:	bf00      	nop
 8005cc2:	3710      	adds	r7, #16
 8005cc4:	46bd      	mov	sp, r7
 8005cc6:	bd80      	pop	{r7, pc}

08005cc8 <prvResetNextTaskUnblockTime>:
 8005cc8:	b480      	push	{r7}
 8005cca:	b083      	sub	sp, #12
 8005ccc:	af00      	add	r7, sp, #0
 8005cce:	4b0f      	ldr	r3, [pc, #60]	; (8005d0c <prvResetNextTaskUnblockTime+0x44>)
 8005cd0:	681b      	ldr	r3, [r3, #0]
 8005cd2:	681b      	ldr	r3, [r3, #0]
 8005cd4:	2b00      	cmp	r3, #0
 8005cd6:	d101      	bne.n	8005cdc <prvResetNextTaskUnblockTime+0x14>
 8005cd8:	2301      	movs	r3, #1
 8005cda:	e000      	b.n	8005cde <prvResetNextTaskUnblockTime+0x16>
 8005cdc:	2300      	movs	r3, #0
 8005cde:	2b00      	cmp	r3, #0
 8005ce0:	d004      	beq.n	8005cec <prvResetNextTaskUnblockTime+0x24>
 8005ce2:	4b0b      	ldr	r3, [pc, #44]	; (8005d10 <prvResetNextTaskUnblockTime+0x48>)
 8005ce4:	f04f 32ff 	mov.w	r2, #4294967295
 8005ce8:	601a      	str	r2, [r3, #0]
 8005cea:	e008      	b.n	8005cfe <prvResetNextTaskUnblockTime+0x36>
 8005cec:	4b07      	ldr	r3, [pc, #28]	; (8005d0c <prvResetNextTaskUnblockTime+0x44>)
 8005cee:	681b      	ldr	r3, [r3, #0]
 8005cf0:	68db      	ldr	r3, [r3, #12]
 8005cf2:	68db      	ldr	r3, [r3, #12]
 8005cf4:	607b      	str	r3, [r7, #4]
 8005cf6:	687b      	ldr	r3, [r7, #4]
 8005cf8:	685b      	ldr	r3, [r3, #4]
 8005cfa:	4a05      	ldr	r2, [pc, #20]	; (8005d10 <prvResetNextTaskUnblockTime+0x48>)
 8005cfc:	6013      	str	r3, [r2, #0]
 8005cfe:	bf00      	nop
 8005d00:	370c      	adds	r7, #12
 8005d02:	46bd      	mov	sp, r7
 8005d04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d08:	4770      	bx	lr
 8005d0a:	bf00      	nop
 8005d0c:	20000d70 	.word	0x20000d70
 8005d10:	20000dd8 	.word	0x20000dd8

08005d14 <xTaskGetSchedulerState>:
 8005d14:	b480      	push	{r7}
 8005d16:	b083      	sub	sp, #12
 8005d18:	af00      	add	r7, sp, #0
 8005d1a:	4b0b      	ldr	r3, [pc, #44]	; (8005d48 <xTaskGetSchedulerState+0x34>)
 8005d1c:	681b      	ldr	r3, [r3, #0]
 8005d1e:	2b00      	cmp	r3, #0
 8005d20:	d102      	bne.n	8005d28 <xTaskGetSchedulerState+0x14>
 8005d22:	2301      	movs	r3, #1
 8005d24:	607b      	str	r3, [r7, #4]
 8005d26:	e008      	b.n	8005d3a <xTaskGetSchedulerState+0x26>
 8005d28:	4b08      	ldr	r3, [pc, #32]	; (8005d4c <xTaskGetSchedulerState+0x38>)
 8005d2a:	681b      	ldr	r3, [r3, #0]
 8005d2c:	2b00      	cmp	r3, #0
 8005d2e:	d102      	bne.n	8005d36 <xTaskGetSchedulerState+0x22>
 8005d30:	2302      	movs	r3, #2
 8005d32:	607b      	str	r3, [r7, #4]
 8005d34:	e001      	b.n	8005d3a <xTaskGetSchedulerState+0x26>
 8005d36:	2300      	movs	r3, #0
 8005d38:	607b      	str	r3, [r7, #4]
 8005d3a:	687b      	ldr	r3, [r7, #4]
 8005d3c:	4618      	mov	r0, r3
 8005d3e:	370c      	adds	r7, #12
 8005d40:	46bd      	mov	sp, r7
 8005d42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d46:	4770      	bx	lr
 8005d48:	20000dc4 	.word	0x20000dc4
 8005d4c:	20000de0 	.word	0x20000de0

08005d50 <xTaskPriorityDisinherit>:
 8005d50:	b580      	push	{r7, lr}
 8005d52:	b086      	sub	sp, #24
 8005d54:	af00      	add	r7, sp, #0
 8005d56:	6078      	str	r0, [r7, #4]
 8005d58:	687b      	ldr	r3, [r7, #4]
 8005d5a:	613b      	str	r3, [r7, #16]
 8005d5c:	2300      	movs	r3, #0
 8005d5e:	617b      	str	r3, [r7, #20]
 8005d60:	687b      	ldr	r3, [r7, #4]
 8005d62:	2b00      	cmp	r3, #0
 8005d64:	d054      	beq.n	8005e10 <xTaskPriorityDisinherit+0xc0>
 8005d66:	4b2d      	ldr	r3, [pc, #180]	; (8005e1c <xTaskPriorityDisinherit+0xcc>)
 8005d68:	681b      	ldr	r3, [r3, #0]
 8005d6a:	693a      	ldr	r2, [r7, #16]
 8005d6c:	429a      	cmp	r2, r3
 8005d6e:	d009      	beq.n	8005d84 <xTaskPriorityDisinherit+0x34>
 8005d70:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005d74:	f383 8811 	msr	BASEPRI, r3
 8005d78:	f3bf 8f6f 	isb	sy
 8005d7c:	f3bf 8f4f 	dsb	sy
 8005d80:	60fb      	str	r3, [r7, #12]
 8005d82:	e7fe      	b.n	8005d82 <xTaskPriorityDisinherit+0x32>
 8005d84:	693b      	ldr	r3, [r7, #16]
 8005d86:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005d88:	2b00      	cmp	r3, #0
 8005d8a:	d109      	bne.n	8005da0 <xTaskPriorityDisinherit+0x50>
 8005d8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005d90:	f383 8811 	msr	BASEPRI, r3
 8005d94:	f3bf 8f6f 	isb	sy
 8005d98:	f3bf 8f4f 	dsb	sy
 8005d9c:	60bb      	str	r3, [r7, #8]
 8005d9e:	e7fe      	b.n	8005d9e <xTaskPriorityDisinherit+0x4e>
 8005da0:	693b      	ldr	r3, [r7, #16]
 8005da2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005da4:	1e5a      	subs	r2, r3, #1
 8005da6:	693b      	ldr	r3, [r7, #16]
 8005da8:	651a      	str	r2, [r3, #80]	; 0x50
 8005daa:	693b      	ldr	r3, [r7, #16]
 8005dac:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005dae:	693b      	ldr	r3, [r7, #16]
 8005db0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005db2:	429a      	cmp	r2, r3
 8005db4:	d02c      	beq.n	8005e10 <xTaskPriorityDisinherit+0xc0>
 8005db6:	693b      	ldr	r3, [r7, #16]
 8005db8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005dba:	2b00      	cmp	r3, #0
 8005dbc:	d128      	bne.n	8005e10 <xTaskPriorityDisinherit+0xc0>
 8005dbe:	693b      	ldr	r3, [r7, #16]
 8005dc0:	3304      	adds	r3, #4
 8005dc2:	4618      	mov	r0, r3
 8005dc4:	f7fe fc9e 	bl	8004704 <uxListRemove>
 8005dc8:	693b      	ldr	r3, [r7, #16]
 8005dca:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8005dcc:	693b      	ldr	r3, [r7, #16]
 8005dce:	62da      	str	r2, [r3, #44]	; 0x2c
 8005dd0:	693b      	ldr	r3, [r7, #16]
 8005dd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005dd4:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8005dd8:	693b      	ldr	r3, [r7, #16]
 8005dda:	619a      	str	r2, [r3, #24]
 8005ddc:	693b      	ldr	r3, [r7, #16]
 8005dde:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005de0:	4b0f      	ldr	r3, [pc, #60]	; (8005e20 <xTaskPriorityDisinherit+0xd0>)
 8005de2:	681b      	ldr	r3, [r3, #0]
 8005de4:	429a      	cmp	r2, r3
 8005de6:	d903      	bls.n	8005df0 <xTaskPriorityDisinherit+0xa0>
 8005de8:	693b      	ldr	r3, [r7, #16]
 8005dea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005dec:	4a0c      	ldr	r2, [pc, #48]	; (8005e20 <xTaskPriorityDisinherit+0xd0>)
 8005dee:	6013      	str	r3, [r2, #0]
 8005df0:	693b      	ldr	r3, [r7, #16]
 8005df2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005df4:	4613      	mov	r3, r2
 8005df6:	009b      	lsls	r3, r3, #2
 8005df8:	4413      	add	r3, r2
 8005dfa:	009b      	lsls	r3, r3, #2
 8005dfc:	4a09      	ldr	r2, [pc, #36]	; (8005e24 <xTaskPriorityDisinherit+0xd4>)
 8005dfe:	441a      	add	r2, r3
 8005e00:	693b      	ldr	r3, [r7, #16]
 8005e02:	3304      	adds	r3, #4
 8005e04:	4619      	mov	r1, r3
 8005e06:	4610      	mov	r0, r2
 8005e08:	f7fe fc1f 	bl	800464a <vListInsertEnd>
 8005e0c:	2301      	movs	r3, #1
 8005e0e:	617b      	str	r3, [r7, #20]
 8005e10:	697b      	ldr	r3, [r7, #20]
 8005e12:	4618      	mov	r0, r3
 8005e14:	3718      	adds	r7, #24
 8005e16:	46bd      	mov	sp, r7
 8005e18:	bd80      	pop	{r7, pc}
 8005e1a:	bf00      	nop
 8005e1c:	200008e4 	.word	0x200008e4
 8005e20:	20000dc0 	.word	0x20000dc0
 8005e24:	200008e8 	.word	0x200008e8

08005e28 <prvAddCurrentTaskToDelayedList>:
 8005e28:	b580      	push	{r7, lr}
 8005e2a:	b084      	sub	sp, #16
 8005e2c:	af00      	add	r7, sp, #0
 8005e2e:	6078      	str	r0, [r7, #4]
 8005e30:	6039      	str	r1, [r7, #0]
 8005e32:	4b21      	ldr	r3, [pc, #132]	; (8005eb8 <prvAddCurrentTaskToDelayedList+0x90>)
 8005e34:	681b      	ldr	r3, [r3, #0]
 8005e36:	60fb      	str	r3, [r7, #12]
 8005e38:	4b20      	ldr	r3, [pc, #128]	; (8005ebc <prvAddCurrentTaskToDelayedList+0x94>)
 8005e3a:	681b      	ldr	r3, [r3, #0]
 8005e3c:	3304      	adds	r3, #4
 8005e3e:	4618      	mov	r0, r3
 8005e40:	f7fe fc60 	bl	8004704 <uxListRemove>
 8005e44:	687b      	ldr	r3, [r7, #4]
 8005e46:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005e4a:	d10a      	bne.n	8005e62 <prvAddCurrentTaskToDelayedList+0x3a>
 8005e4c:	683b      	ldr	r3, [r7, #0]
 8005e4e:	2b00      	cmp	r3, #0
 8005e50:	d007      	beq.n	8005e62 <prvAddCurrentTaskToDelayedList+0x3a>
 8005e52:	4b1a      	ldr	r3, [pc, #104]	; (8005ebc <prvAddCurrentTaskToDelayedList+0x94>)
 8005e54:	681b      	ldr	r3, [r3, #0]
 8005e56:	3304      	adds	r3, #4
 8005e58:	4619      	mov	r1, r3
 8005e5a:	4819      	ldr	r0, [pc, #100]	; (8005ec0 <prvAddCurrentTaskToDelayedList+0x98>)
 8005e5c:	f7fe fbf5 	bl	800464a <vListInsertEnd>
 8005e60:	e026      	b.n	8005eb0 <prvAddCurrentTaskToDelayedList+0x88>
 8005e62:	68fa      	ldr	r2, [r7, #12]
 8005e64:	687b      	ldr	r3, [r7, #4]
 8005e66:	4413      	add	r3, r2
 8005e68:	60bb      	str	r3, [r7, #8]
 8005e6a:	4b14      	ldr	r3, [pc, #80]	; (8005ebc <prvAddCurrentTaskToDelayedList+0x94>)
 8005e6c:	681b      	ldr	r3, [r3, #0]
 8005e6e:	68ba      	ldr	r2, [r7, #8]
 8005e70:	605a      	str	r2, [r3, #4]
 8005e72:	68ba      	ldr	r2, [r7, #8]
 8005e74:	68fb      	ldr	r3, [r7, #12]
 8005e76:	429a      	cmp	r2, r3
 8005e78:	d209      	bcs.n	8005e8e <prvAddCurrentTaskToDelayedList+0x66>
 8005e7a:	4b12      	ldr	r3, [pc, #72]	; (8005ec4 <prvAddCurrentTaskToDelayedList+0x9c>)
 8005e7c:	681a      	ldr	r2, [r3, #0]
 8005e7e:	4b0f      	ldr	r3, [pc, #60]	; (8005ebc <prvAddCurrentTaskToDelayedList+0x94>)
 8005e80:	681b      	ldr	r3, [r3, #0]
 8005e82:	3304      	adds	r3, #4
 8005e84:	4619      	mov	r1, r3
 8005e86:	4610      	mov	r0, r2
 8005e88:	f7fe fc03 	bl	8004692 <vListInsert>
 8005e8c:	e010      	b.n	8005eb0 <prvAddCurrentTaskToDelayedList+0x88>
 8005e8e:	4b0e      	ldr	r3, [pc, #56]	; (8005ec8 <prvAddCurrentTaskToDelayedList+0xa0>)
 8005e90:	681a      	ldr	r2, [r3, #0]
 8005e92:	4b0a      	ldr	r3, [pc, #40]	; (8005ebc <prvAddCurrentTaskToDelayedList+0x94>)
 8005e94:	681b      	ldr	r3, [r3, #0]
 8005e96:	3304      	adds	r3, #4
 8005e98:	4619      	mov	r1, r3
 8005e9a:	4610      	mov	r0, r2
 8005e9c:	f7fe fbf9 	bl	8004692 <vListInsert>
 8005ea0:	4b0a      	ldr	r3, [pc, #40]	; (8005ecc <prvAddCurrentTaskToDelayedList+0xa4>)
 8005ea2:	681b      	ldr	r3, [r3, #0]
 8005ea4:	68ba      	ldr	r2, [r7, #8]
 8005ea6:	429a      	cmp	r2, r3
 8005ea8:	d202      	bcs.n	8005eb0 <prvAddCurrentTaskToDelayedList+0x88>
 8005eaa:	4a08      	ldr	r2, [pc, #32]	; (8005ecc <prvAddCurrentTaskToDelayedList+0xa4>)
 8005eac:	68bb      	ldr	r3, [r7, #8]
 8005eae:	6013      	str	r3, [r2, #0]
 8005eb0:	bf00      	nop
 8005eb2:	3710      	adds	r7, #16
 8005eb4:	46bd      	mov	sp, r7
 8005eb6:	bd80      	pop	{r7, pc}
 8005eb8:	20000dbc 	.word	0x20000dbc
 8005ebc:	200008e4 	.word	0x200008e4
 8005ec0:	20000da4 	.word	0x20000da4
 8005ec4:	20000d74 	.word	0x20000d74
 8005ec8:	20000d70 	.word	0x20000d70
 8005ecc:	20000dd8 	.word	0x20000dd8

08005ed0 <xTimerCreateTimerTask>:
 8005ed0:	b580      	push	{r7, lr}
 8005ed2:	b08a      	sub	sp, #40	; 0x28
 8005ed4:	af04      	add	r7, sp, #16
 8005ed6:	2300      	movs	r3, #0
 8005ed8:	617b      	str	r3, [r7, #20]
 8005eda:	f000 fac3 	bl	8006464 <prvCheckForValidListAndQueue>
 8005ede:	4b1c      	ldr	r3, [pc, #112]	; (8005f50 <xTimerCreateTimerTask+0x80>)
 8005ee0:	681b      	ldr	r3, [r3, #0]
 8005ee2:	2b00      	cmp	r3, #0
 8005ee4:	d021      	beq.n	8005f2a <xTimerCreateTimerTask+0x5a>
 8005ee6:	2300      	movs	r3, #0
 8005ee8:	60fb      	str	r3, [r7, #12]
 8005eea:	2300      	movs	r3, #0
 8005eec:	60bb      	str	r3, [r7, #8]
 8005eee:	1d3a      	adds	r2, r7, #4
 8005ef0:	f107 0108 	add.w	r1, r7, #8
 8005ef4:	f107 030c 	add.w	r3, r7, #12
 8005ef8:	4618      	mov	r0, r3
 8005efa:	f7fe fb5f 	bl	80045bc <vApplicationGetTimerTaskMemory>
 8005efe:	6879      	ldr	r1, [r7, #4]
 8005f00:	68bb      	ldr	r3, [r7, #8]
 8005f02:	68fa      	ldr	r2, [r7, #12]
 8005f04:	9202      	str	r2, [sp, #8]
 8005f06:	9301      	str	r3, [sp, #4]
 8005f08:	2302      	movs	r3, #2
 8005f0a:	9300      	str	r3, [sp, #0]
 8005f0c:	2300      	movs	r3, #0
 8005f0e:	460a      	mov	r2, r1
 8005f10:	4910      	ldr	r1, [pc, #64]	; (8005f54 <xTimerCreateTimerTask+0x84>)
 8005f12:	4811      	ldr	r0, [pc, #68]	; (8005f58 <xTimerCreateTimerTask+0x88>)
 8005f14:	f7ff f8f4 	bl	8005100 <xTaskCreateStatic>
 8005f18:	4602      	mov	r2, r0
 8005f1a:	4b10      	ldr	r3, [pc, #64]	; (8005f5c <xTimerCreateTimerTask+0x8c>)
 8005f1c:	601a      	str	r2, [r3, #0]
 8005f1e:	4b0f      	ldr	r3, [pc, #60]	; (8005f5c <xTimerCreateTimerTask+0x8c>)
 8005f20:	681b      	ldr	r3, [r3, #0]
 8005f22:	2b00      	cmp	r3, #0
 8005f24:	d001      	beq.n	8005f2a <xTimerCreateTimerTask+0x5a>
 8005f26:	2301      	movs	r3, #1
 8005f28:	617b      	str	r3, [r7, #20]
 8005f2a:	697b      	ldr	r3, [r7, #20]
 8005f2c:	2b00      	cmp	r3, #0
 8005f2e:	d109      	bne.n	8005f44 <xTimerCreateTimerTask+0x74>
 8005f30:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005f34:	f383 8811 	msr	BASEPRI, r3
 8005f38:	f3bf 8f6f 	isb	sy
 8005f3c:	f3bf 8f4f 	dsb	sy
 8005f40:	613b      	str	r3, [r7, #16]
 8005f42:	e7fe      	b.n	8005f42 <xTimerCreateTimerTask+0x72>
 8005f44:	697b      	ldr	r3, [r7, #20]
 8005f46:	4618      	mov	r0, r3
 8005f48:	3718      	adds	r7, #24
 8005f4a:	46bd      	mov	sp, r7
 8005f4c:	bd80      	pop	{r7, pc}
 8005f4e:	bf00      	nop
 8005f50:	20000e14 	.word	0x20000e14
 8005f54:	08008eec 	.word	0x08008eec
 8005f58:	08006079 	.word	0x08006079
 8005f5c:	20000e18 	.word	0x20000e18

08005f60 <xTimerGenericCommand>:
 8005f60:	b580      	push	{r7, lr}
 8005f62:	b08a      	sub	sp, #40	; 0x28
 8005f64:	af00      	add	r7, sp, #0
 8005f66:	60f8      	str	r0, [r7, #12]
 8005f68:	60b9      	str	r1, [r7, #8]
 8005f6a:	607a      	str	r2, [r7, #4]
 8005f6c:	603b      	str	r3, [r7, #0]
 8005f6e:	2300      	movs	r3, #0
 8005f70:	627b      	str	r3, [r7, #36]	; 0x24
 8005f72:	68fb      	ldr	r3, [r7, #12]
 8005f74:	2b00      	cmp	r3, #0
 8005f76:	d109      	bne.n	8005f8c <xTimerGenericCommand+0x2c>
 8005f78:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005f7c:	f383 8811 	msr	BASEPRI, r3
 8005f80:	f3bf 8f6f 	isb	sy
 8005f84:	f3bf 8f4f 	dsb	sy
 8005f88:	623b      	str	r3, [r7, #32]
 8005f8a:	e7fe      	b.n	8005f8a <xTimerGenericCommand+0x2a>
 8005f8c:	4b19      	ldr	r3, [pc, #100]	; (8005ff4 <xTimerGenericCommand+0x94>)
 8005f8e:	681b      	ldr	r3, [r3, #0]
 8005f90:	2b00      	cmp	r3, #0
 8005f92:	d02a      	beq.n	8005fea <xTimerGenericCommand+0x8a>
 8005f94:	68bb      	ldr	r3, [r7, #8]
 8005f96:	613b      	str	r3, [r7, #16]
 8005f98:	687b      	ldr	r3, [r7, #4]
 8005f9a:	617b      	str	r3, [r7, #20]
 8005f9c:	68fb      	ldr	r3, [r7, #12]
 8005f9e:	61bb      	str	r3, [r7, #24]
 8005fa0:	68bb      	ldr	r3, [r7, #8]
 8005fa2:	2b05      	cmp	r3, #5
 8005fa4:	dc18      	bgt.n	8005fd8 <xTimerGenericCommand+0x78>
 8005fa6:	f7ff feb5 	bl	8005d14 <xTaskGetSchedulerState>
 8005faa:	4603      	mov	r3, r0
 8005fac:	2b02      	cmp	r3, #2
 8005fae:	d109      	bne.n	8005fc4 <xTimerGenericCommand+0x64>
 8005fb0:	4b10      	ldr	r3, [pc, #64]	; (8005ff4 <xTimerGenericCommand+0x94>)
 8005fb2:	6818      	ldr	r0, [r3, #0]
 8005fb4:	f107 0110 	add.w	r1, r7, #16
 8005fb8:	2300      	movs	r3, #0
 8005fba:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005fbc:	f7fe fcca 	bl	8004954 <xQueueGenericSend>
 8005fc0:	6278      	str	r0, [r7, #36]	; 0x24
 8005fc2:	e012      	b.n	8005fea <xTimerGenericCommand+0x8a>
 8005fc4:	4b0b      	ldr	r3, [pc, #44]	; (8005ff4 <xTimerGenericCommand+0x94>)
 8005fc6:	6818      	ldr	r0, [r3, #0]
 8005fc8:	f107 0110 	add.w	r1, r7, #16
 8005fcc:	2300      	movs	r3, #0
 8005fce:	2200      	movs	r2, #0
 8005fd0:	f7fe fcc0 	bl	8004954 <xQueueGenericSend>
 8005fd4:	6278      	str	r0, [r7, #36]	; 0x24
 8005fd6:	e008      	b.n	8005fea <xTimerGenericCommand+0x8a>
 8005fd8:	4b06      	ldr	r3, [pc, #24]	; (8005ff4 <xTimerGenericCommand+0x94>)
 8005fda:	6818      	ldr	r0, [r3, #0]
 8005fdc:	f107 0110 	add.w	r1, r7, #16
 8005fe0:	2300      	movs	r3, #0
 8005fe2:	683a      	ldr	r2, [r7, #0]
 8005fe4:	f7fe fdb0 	bl	8004b48 <xQueueGenericSendFromISR>
 8005fe8:	6278      	str	r0, [r7, #36]	; 0x24
 8005fea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005fec:	4618      	mov	r0, r3
 8005fee:	3728      	adds	r7, #40	; 0x28
 8005ff0:	46bd      	mov	sp, r7
 8005ff2:	bd80      	pop	{r7, pc}
 8005ff4:	20000e14 	.word	0x20000e14

08005ff8 <prvProcessExpiredTimer>:
 8005ff8:	b580      	push	{r7, lr}
 8005ffa:	b088      	sub	sp, #32
 8005ffc:	af02      	add	r7, sp, #8
 8005ffe:	6078      	str	r0, [r7, #4]
 8006000:	6039      	str	r1, [r7, #0]
 8006002:	4b1c      	ldr	r3, [pc, #112]	; (8006074 <prvProcessExpiredTimer+0x7c>)
 8006004:	681b      	ldr	r3, [r3, #0]
 8006006:	68db      	ldr	r3, [r3, #12]
 8006008:	68db      	ldr	r3, [r3, #12]
 800600a:	617b      	str	r3, [r7, #20]
 800600c:	697b      	ldr	r3, [r7, #20]
 800600e:	3304      	adds	r3, #4
 8006010:	4618      	mov	r0, r3
 8006012:	f7fe fb77 	bl	8004704 <uxListRemove>
 8006016:	697b      	ldr	r3, [r7, #20]
 8006018:	69db      	ldr	r3, [r3, #28]
 800601a:	2b01      	cmp	r3, #1
 800601c:	d121      	bne.n	8006062 <prvProcessExpiredTimer+0x6a>
 800601e:	697b      	ldr	r3, [r7, #20]
 8006020:	699a      	ldr	r2, [r3, #24]
 8006022:	687b      	ldr	r3, [r7, #4]
 8006024:	18d1      	adds	r1, r2, r3
 8006026:	687b      	ldr	r3, [r7, #4]
 8006028:	683a      	ldr	r2, [r7, #0]
 800602a:	6978      	ldr	r0, [r7, #20]
 800602c:	f000 f8c8 	bl	80061c0 <prvInsertTimerInActiveList>
 8006030:	4603      	mov	r3, r0
 8006032:	2b00      	cmp	r3, #0
 8006034:	d015      	beq.n	8006062 <prvProcessExpiredTimer+0x6a>
 8006036:	2300      	movs	r3, #0
 8006038:	9300      	str	r3, [sp, #0]
 800603a:	2300      	movs	r3, #0
 800603c:	687a      	ldr	r2, [r7, #4]
 800603e:	2100      	movs	r1, #0
 8006040:	6978      	ldr	r0, [r7, #20]
 8006042:	f7ff ff8d 	bl	8005f60 <xTimerGenericCommand>
 8006046:	6138      	str	r0, [r7, #16]
 8006048:	693b      	ldr	r3, [r7, #16]
 800604a:	2b00      	cmp	r3, #0
 800604c:	d109      	bne.n	8006062 <prvProcessExpiredTimer+0x6a>
 800604e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006052:	f383 8811 	msr	BASEPRI, r3
 8006056:	f3bf 8f6f 	isb	sy
 800605a:	f3bf 8f4f 	dsb	sy
 800605e:	60fb      	str	r3, [r7, #12]
 8006060:	e7fe      	b.n	8006060 <prvProcessExpiredTimer+0x68>
 8006062:	697b      	ldr	r3, [r7, #20]
 8006064:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006066:	6978      	ldr	r0, [r7, #20]
 8006068:	4798      	blx	r3
 800606a:	bf00      	nop
 800606c:	3718      	adds	r7, #24
 800606e:	46bd      	mov	sp, r7
 8006070:	bd80      	pop	{r7, pc}
 8006072:	bf00      	nop
 8006074:	20000e0c 	.word	0x20000e0c

08006078 <prvTimerTask>:
 8006078:	b580      	push	{r7, lr}
 800607a:	b084      	sub	sp, #16
 800607c:	af00      	add	r7, sp, #0
 800607e:	6078      	str	r0, [r7, #4]
 8006080:	f107 0308 	add.w	r3, r7, #8
 8006084:	4618      	mov	r0, r3
 8006086:	f000 f857 	bl	8006138 <prvGetNextExpireTime>
 800608a:	60f8      	str	r0, [r7, #12]
 800608c:	68bb      	ldr	r3, [r7, #8]
 800608e:	4619      	mov	r1, r3
 8006090:	68f8      	ldr	r0, [r7, #12]
 8006092:	f000 f803 	bl	800609c <prvProcessTimerOrBlockTask>
 8006096:	f000 f8d5 	bl	8006244 <prvProcessReceivedCommands>
 800609a:	e7f1      	b.n	8006080 <prvTimerTask+0x8>

0800609c <prvProcessTimerOrBlockTask>:
 800609c:	b580      	push	{r7, lr}
 800609e:	b084      	sub	sp, #16
 80060a0:	af00      	add	r7, sp, #0
 80060a2:	6078      	str	r0, [r7, #4]
 80060a4:	6039      	str	r1, [r7, #0]
 80060a6:	f7ff fa57 	bl	8005558 <vTaskSuspendAll>
 80060aa:	f107 0308 	add.w	r3, r7, #8
 80060ae:	4618      	mov	r0, r3
 80060b0:	f000 f866 	bl	8006180 <prvSampleTimeNow>
 80060b4:	60f8      	str	r0, [r7, #12]
 80060b6:	68bb      	ldr	r3, [r7, #8]
 80060b8:	2b00      	cmp	r3, #0
 80060ba:	d130      	bne.n	800611e <prvProcessTimerOrBlockTask+0x82>
 80060bc:	683b      	ldr	r3, [r7, #0]
 80060be:	2b00      	cmp	r3, #0
 80060c0:	d10a      	bne.n	80060d8 <prvProcessTimerOrBlockTask+0x3c>
 80060c2:	687a      	ldr	r2, [r7, #4]
 80060c4:	68fb      	ldr	r3, [r7, #12]
 80060c6:	429a      	cmp	r2, r3
 80060c8:	d806      	bhi.n	80060d8 <prvProcessTimerOrBlockTask+0x3c>
 80060ca:	f7ff fa53 	bl	8005574 <xTaskResumeAll>
 80060ce:	68f9      	ldr	r1, [r7, #12]
 80060d0:	6878      	ldr	r0, [r7, #4]
 80060d2:	f7ff ff91 	bl	8005ff8 <prvProcessExpiredTimer>
 80060d6:	e024      	b.n	8006122 <prvProcessTimerOrBlockTask+0x86>
 80060d8:	683b      	ldr	r3, [r7, #0]
 80060da:	2b00      	cmp	r3, #0
 80060dc:	d008      	beq.n	80060f0 <prvProcessTimerOrBlockTask+0x54>
 80060de:	4b13      	ldr	r3, [pc, #76]	; (800612c <prvProcessTimerOrBlockTask+0x90>)
 80060e0:	681b      	ldr	r3, [r3, #0]
 80060e2:	681b      	ldr	r3, [r3, #0]
 80060e4:	2b00      	cmp	r3, #0
 80060e6:	bf0c      	ite	eq
 80060e8:	2301      	moveq	r3, #1
 80060ea:	2300      	movne	r3, #0
 80060ec:	b2db      	uxtb	r3, r3
 80060ee:	603b      	str	r3, [r7, #0]
 80060f0:	4b0f      	ldr	r3, [pc, #60]	; (8006130 <prvProcessTimerOrBlockTask+0x94>)
 80060f2:	6818      	ldr	r0, [r3, #0]
 80060f4:	687a      	ldr	r2, [r7, #4]
 80060f6:	68fb      	ldr	r3, [r7, #12]
 80060f8:	1ad3      	subs	r3, r2, r3
 80060fa:	683a      	ldr	r2, [r7, #0]
 80060fc:	4619      	mov	r1, r3
 80060fe:	f7fe ffcb 	bl	8005098 <vQueueWaitForMessageRestricted>
 8006102:	f7ff fa37 	bl	8005574 <xTaskResumeAll>
 8006106:	4603      	mov	r3, r0
 8006108:	2b00      	cmp	r3, #0
 800610a:	d10a      	bne.n	8006122 <prvProcessTimerOrBlockTask+0x86>
 800610c:	4b09      	ldr	r3, [pc, #36]	; (8006134 <prvProcessTimerOrBlockTask+0x98>)
 800610e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006112:	601a      	str	r2, [r3, #0]
 8006114:	f3bf 8f4f 	dsb	sy
 8006118:	f3bf 8f6f 	isb	sy
 800611c:	e001      	b.n	8006122 <prvProcessTimerOrBlockTask+0x86>
 800611e:	f7ff fa29 	bl	8005574 <xTaskResumeAll>
 8006122:	bf00      	nop
 8006124:	3710      	adds	r7, #16
 8006126:	46bd      	mov	sp, r7
 8006128:	bd80      	pop	{r7, pc}
 800612a:	bf00      	nop
 800612c:	20000e10 	.word	0x20000e10
 8006130:	20000e14 	.word	0x20000e14
 8006134:	e000ed04 	.word	0xe000ed04

08006138 <prvGetNextExpireTime>:
 8006138:	b480      	push	{r7}
 800613a:	b085      	sub	sp, #20
 800613c:	af00      	add	r7, sp, #0
 800613e:	6078      	str	r0, [r7, #4]
 8006140:	4b0e      	ldr	r3, [pc, #56]	; (800617c <prvGetNextExpireTime+0x44>)
 8006142:	681b      	ldr	r3, [r3, #0]
 8006144:	681b      	ldr	r3, [r3, #0]
 8006146:	2b00      	cmp	r3, #0
 8006148:	bf0c      	ite	eq
 800614a:	2301      	moveq	r3, #1
 800614c:	2300      	movne	r3, #0
 800614e:	b2db      	uxtb	r3, r3
 8006150:	461a      	mov	r2, r3
 8006152:	687b      	ldr	r3, [r7, #4]
 8006154:	601a      	str	r2, [r3, #0]
 8006156:	687b      	ldr	r3, [r7, #4]
 8006158:	681b      	ldr	r3, [r3, #0]
 800615a:	2b00      	cmp	r3, #0
 800615c:	d105      	bne.n	800616a <prvGetNextExpireTime+0x32>
 800615e:	4b07      	ldr	r3, [pc, #28]	; (800617c <prvGetNextExpireTime+0x44>)
 8006160:	681b      	ldr	r3, [r3, #0]
 8006162:	68db      	ldr	r3, [r3, #12]
 8006164:	681b      	ldr	r3, [r3, #0]
 8006166:	60fb      	str	r3, [r7, #12]
 8006168:	e001      	b.n	800616e <prvGetNextExpireTime+0x36>
 800616a:	2300      	movs	r3, #0
 800616c:	60fb      	str	r3, [r7, #12]
 800616e:	68fb      	ldr	r3, [r7, #12]
 8006170:	4618      	mov	r0, r3
 8006172:	3714      	adds	r7, #20
 8006174:	46bd      	mov	sp, r7
 8006176:	f85d 7b04 	ldr.w	r7, [sp], #4
 800617a:	4770      	bx	lr
 800617c:	20000e0c 	.word	0x20000e0c

08006180 <prvSampleTimeNow>:
 8006180:	b580      	push	{r7, lr}
 8006182:	b084      	sub	sp, #16
 8006184:	af00      	add	r7, sp, #0
 8006186:	6078      	str	r0, [r7, #4]
 8006188:	f7ff fa90 	bl	80056ac <xTaskGetTickCount>
 800618c:	60f8      	str	r0, [r7, #12]
 800618e:	4b0b      	ldr	r3, [pc, #44]	; (80061bc <prvSampleTimeNow+0x3c>)
 8006190:	681b      	ldr	r3, [r3, #0]
 8006192:	68fa      	ldr	r2, [r7, #12]
 8006194:	429a      	cmp	r2, r3
 8006196:	d205      	bcs.n	80061a4 <prvSampleTimeNow+0x24>
 8006198:	f000 f904 	bl	80063a4 <prvSwitchTimerLists>
 800619c:	687b      	ldr	r3, [r7, #4]
 800619e:	2201      	movs	r2, #1
 80061a0:	601a      	str	r2, [r3, #0]
 80061a2:	e002      	b.n	80061aa <prvSampleTimeNow+0x2a>
 80061a4:	687b      	ldr	r3, [r7, #4]
 80061a6:	2200      	movs	r2, #0
 80061a8:	601a      	str	r2, [r3, #0]
 80061aa:	4a04      	ldr	r2, [pc, #16]	; (80061bc <prvSampleTimeNow+0x3c>)
 80061ac:	68fb      	ldr	r3, [r7, #12]
 80061ae:	6013      	str	r3, [r2, #0]
 80061b0:	68fb      	ldr	r3, [r7, #12]
 80061b2:	4618      	mov	r0, r3
 80061b4:	3710      	adds	r7, #16
 80061b6:	46bd      	mov	sp, r7
 80061b8:	bd80      	pop	{r7, pc}
 80061ba:	bf00      	nop
 80061bc:	20000e1c 	.word	0x20000e1c

080061c0 <prvInsertTimerInActiveList>:
 80061c0:	b580      	push	{r7, lr}
 80061c2:	b086      	sub	sp, #24
 80061c4:	af00      	add	r7, sp, #0
 80061c6:	60f8      	str	r0, [r7, #12]
 80061c8:	60b9      	str	r1, [r7, #8]
 80061ca:	607a      	str	r2, [r7, #4]
 80061cc:	603b      	str	r3, [r7, #0]
 80061ce:	2300      	movs	r3, #0
 80061d0:	617b      	str	r3, [r7, #20]
 80061d2:	68fb      	ldr	r3, [r7, #12]
 80061d4:	68ba      	ldr	r2, [r7, #8]
 80061d6:	605a      	str	r2, [r3, #4]
 80061d8:	68fb      	ldr	r3, [r7, #12]
 80061da:	68fa      	ldr	r2, [r7, #12]
 80061dc:	611a      	str	r2, [r3, #16]
 80061de:	68ba      	ldr	r2, [r7, #8]
 80061e0:	687b      	ldr	r3, [r7, #4]
 80061e2:	429a      	cmp	r2, r3
 80061e4:	d812      	bhi.n	800620c <prvInsertTimerInActiveList+0x4c>
 80061e6:	687a      	ldr	r2, [r7, #4]
 80061e8:	683b      	ldr	r3, [r7, #0]
 80061ea:	1ad2      	subs	r2, r2, r3
 80061ec:	68fb      	ldr	r3, [r7, #12]
 80061ee:	699b      	ldr	r3, [r3, #24]
 80061f0:	429a      	cmp	r2, r3
 80061f2:	d302      	bcc.n	80061fa <prvInsertTimerInActiveList+0x3a>
 80061f4:	2301      	movs	r3, #1
 80061f6:	617b      	str	r3, [r7, #20]
 80061f8:	e01b      	b.n	8006232 <prvInsertTimerInActiveList+0x72>
 80061fa:	4b10      	ldr	r3, [pc, #64]	; (800623c <prvInsertTimerInActiveList+0x7c>)
 80061fc:	681a      	ldr	r2, [r3, #0]
 80061fe:	68fb      	ldr	r3, [r7, #12]
 8006200:	3304      	adds	r3, #4
 8006202:	4619      	mov	r1, r3
 8006204:	4610      	mov	r0, r2
 8006206:	f7fe fa44 	bl	8004692 <vListInsert>
 800620a:	e012      	b.n	8006232 <prvInsertTimerInActiveList+0x72>
 800620c:	687a      	ldr	r2, [r7, #4]
 800620e:	683b      	ldr	r3, [r7, #0]
 8006210:	429a      	cmp	r2, r3
 8006212:	d206      	bcs.n	8006222 <prvInsertTimerInActiveList+0x62>
 8006214:	68ba      	ldr	r2, [r7, #8]
 8006216:	683b      	ldr	r3, [r7, #0]
 8006218:	429a      	cmp	r2, r3
 800621a:	d302      	bcc.n	8006222 <prvInsertTimerInActiveList+0x62>
 800621c:	2301      	movs	r3, #1
 800621e:	617b      	str	r3, [r7, #20]
 8006220:	e007      	b.n	8006232 <prvInsertTimerInActiveList+0x72>
 8006222:	4b07      	ldr	r3, [pc, #28]	; (8006240 <prvInsertTimerInActiveList+0x80>)
 8006224:	681a      	ldr	r2, [r3, #0]
 8006226:	68fb      	ldr	r3, [r7, #12]
 8006228:	3304      	adds	r3, #4
 800622a:	4619      	mov	r1, r3
 800622c:	4610      	mov	r0, r2
 800622e:	f7fe fa30 	bl	8004692 <vListInsert>
 8006232:	697b      	ldr	r3, [r7, #20]
 8006234:	4618      	mov	r0, r3
 8006236:	3718      	adds	r7, #24
 8006238:	46bd      	mov	sp, r7
 800623a:	bd80      	pop	{r7, pc}
 800623c:	20000e10 	.word	0x20000e10
 8006240:	20000e0c 	.word	0x20000e0c

08006244 <prvProcessReceivedCommands>:
 8006244:	b580      	push	{r7, lr}
 8006246:	b08e      	sub	sp, #56	; 0x38
 8006248:	af02      	add	r7, sp, #8
 800624a:	e099      	b.n	8006380 <prvProcessReceivedCommands+0x13c>
 800624c:	687b      	ldr	r3, [r7, #4]
 800624e:	2b00      	cmp	r3, #0
 8006250:	da17      	bge.n	8006282 <prvProcessReceivedCommands+0x3e>
 8006252:	1d3b      	adds	r3, r7, #4
 8006254:	3304      	adds	r3, #4
 8006256:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006258:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800625a:	2b00      	cmp	r3, #0
 800625c:	d109      	bne.n	8006272 <prvProcessReceivedCommands+0x2e>
 800625e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006262:	f383 8811 	msr	BASEPRI, r3
 8006266:	f3bf 8f6f 	isb	sy
 800626a:	f3bf 8f4f 	dsb	sy
 800626e:	61fb      	str	r3, [r7, #28]
 8006270:	e7fe      	b.n	8006270 <prvProcessReceivedCommands+0x2c>
 8006272:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006274:	681b      	ldr	r3, [r3, #0]
 8006276:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006278:	6850      	ldr	r0, [r2, #4]
 800627a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800627c:	6892      	ldr	r2, [r2, #8]
 800627e:	4611      	mov	r1, r2
 8006280:	4798      	blx	r3
 8006282:	687b      	ldr	r3, [r7, #4]
 8006284:	2b00      	cmp	r3, #0
 8006286:	db7a      	blt.n	800637e <prvProcessReceivedCommands+0x13a>
 8006288:	68fb      	ldr	r3, [r7, #12]
 800628a:	62bb      	str	r3, [r7, #40]	; 0x28
 800628c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800628e:	695b      	ldr	r3, [r3, #20]
 8006290:	2b00      	cmp	r3, #0
 8006292:	d004      	beq.n	800629e <prvProcessReceivedCommands+0x5a>
 8006294:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006296:	3304      	adds	r3, #4
 8006298:	4618      	mov	r0, r3
 800629a:	f7fe fa33 	bl	8004704 <uxListRemove>
 800629e:	463b      	mov	r3, r7
 80062a0:	4618      	mov	r0, r3
 80062a2:	f7ff ff6d 	bl	8006180 <prvSampleTimeNow>
 80062a6:	6278      	str	r0, [r7, #36]	; 0x24
 80062a8:	687b      	ldr	r3, [r7, #4]
 80062aa:	2b09      	cmp	r3, #9
 80062ac:	d868      	bhi.n	8006380 <prvProcessReceivedCommands+0x13c>
 80062ae:	a201      	add	r2, pc, #4	; (adr r2, 80062b4 <prvProcessReceivedCommands+0x70>)
 80062b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80062b4:	080062dd 	.word	0x080062dd
 80062b8:	080062dd 	.word	0x080062dd
 80062bc:	080062dd 	.word	0x080062dd
 80062c0:	08006381 	.word	0x08006381
 80062c4:	08006337 	.word	0x08006337
 80062c8:	0800636d 	.word	0x0800636d
 80062cc:	080062dd 	.word	0x080062dd
 80062d0:	080062dd 	.word	0x080062dd
 80062d4:	08006381 	.word	0x08006381
 80062d8:	08006337 	.word	0x08006337
 80062dc:	68ba      	ldr	r2, [r7, #8]
 80062de:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80062e0:	699b      	ldr	r3, [r3, #24]
 80062e2:	18d1      	adds	r1, r2, r3
 80062e4:	68bb      	ldr	r3, [r7, #8]
 80062e6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80062e8:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80062ea:	f7ff ff69 	bl	80061c0 <prvInsertTimerInActiveList>
 80062ee:	4603      	mov	r3, r0
 80062f0:	2b00      	cmp	r3, #0
 80062f2:	d045      	beq.n	8006380 <prvProcessReceivedCommands+0x13c>
 80062f4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80062f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80062f8:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80062fa:	4798      	blx	r3
 80062fc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80062fe:	69db      	ldr	r3, [r3, #28]
 8006300:	2b01      	cmp	r3, #1
 8006302:	d13d      	bne.n	8006380 <prvProcessReceivedCommands+0x13c>
 8006304:	68ba      	ldr	r2, [r7, #8]
 8006306:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006308:	699b      	ldr	r3, [r3, #24]
 800630a:	441a      	add	r2, r3
 800630c:	2300      	movs	r3, #0
 800630e:	9300      	str	r3, [sp, #0]
 8006310:	2300      	movs	r3, #0
 8006312:	2100      	movs	r1, #0
 8006314:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8006316:	f7ff fe23 	bl	8005f60 <xTimerGenericCommand>
 800631a:	6238      	str	r0, [r7, #32]
 800631c:	6a3b      	ldr	r3, [r7, #32]
 800631e:	2b00      	cmp	r3, #0
 8006320:	d12e      	bne.n	8006380 <prvProcessReceivedCommands+0x13c>
 8006322:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006326:	f383 8811 	msr	BASEPRI, r3
 800632a:	f3bf 8f6f 	isb	sy
 800632e:	f3bf 8f4f 	dsb	sy
 8006332:	61bb      	str	r3, [r7, #24]
 8006334:	e7fe      	b.n	8006334 <prvProcessReceivedCommands+0xf0>
 8006336:	68ba      	ldr	r2, [r7, #8]
 8006338:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800633a:	619a      	str	r2, [r3, #24]
 800633c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800633e:	699b      	ldr	r3, [r3, #24]
 8006340:	2b00      	cmp	r3, #0
 8006342:	d109      	bne.n	8006358 <prvProcessReceivedCommands+0x114>
 8006344:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006348:	f383 8811 	msr	BASEPRI, r3
 800634c:	f3bf 8f6f 	isb	sy
 8006350:	f3bf 8f4f 	dsb	sy
 8006354:	617b      	str	r3, [r7, #20]
 8006356:	e7fe      	b.n	8006356 <prvProcessReceivedCommands+0x112>
 8006358:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800635a:	699a      	ldr	r2, [r3, #24]
 800635c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800635e:	18d1      	adds	r1, r2, r3
 8006360:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006362:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006364:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8006366:	f7ff ff2b 	bl	80061c0 <prvInsertTimerInActiveList>
 800636a:	e009      	b.n	8006380 <prvProcessReceivedCommands+0x13c>
 800636c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800636e:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8006372:	2b00      	cmp	r3, #0
 8006374:	d104      	bne.n	8006380 <prvProcessReceivedCommands+0x13c>
 8006376:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8006378:	f000 fbb4 	bl	8006ae4 <vPortFree>
 800637c:	e000      	b.n	8006380 <prvProcessReceivedCommands+0x13c>
 800637e:	bf00      	nop
 8006380:	4b07      	ldr	r3, [pc, #28]	; (80063a0 <prvProcessReceivedCommands+0x15c>)
 8006382:	681b      	ldr	r3, [r3, #0]
 8006384:	1d39      	adds	r1, r7, #4
 8006386:	2200      	movs	r2, #0
 8006388:	4618      	mov	r0, r3
 800638a:	f7fe fc71 	bl	8004c70 <xQueueReceive>
 800638e:	4603      	mov	r3, r0
 8006390:	2b00      	cmp	r3, #0
 8006392:	f47f af5b 	bne.w	800624c <prvProcessReceivedCommands+0x8>
 8006396:	bf00      	nop
 8006398:	3730      	adds	r7, #48	; 0x30
 800639a:	46bd      	mov	sp, r7
 800639c:	bd80      	pop	{r7, pc}
 800639e:	bf00      	nop
 80063a0:	20000e14 	.word	0x20000e14

080063a4 <prvSwitchTimerLists>:
 80063a4:	b580      	push	{r7, lr}
 80063a6:	b088      	sub	sp, #32
 80063a8:	af02      	add	r7, sp, #8
 80063aa:	e044      	b.n	8006436 <prvSwitchTimerLists+0x92>
 80063ac:	4b2b      	ldr	r3, [pc, #172]	; (800645c <prvSwitchTimerLists+0xb8>)
 80063ae:	681b      	ldr	r3, [r3, #0]
 80063b0:	68db      	ldr	r3, [r3, #12]
 80063b2:	681b      	ldr	r3, [r3, #0]
 80063b4:	613b      	str	r3, [r7, #16]
 80063b6:	4b29      	ldr	r3, [pc, #164]	; (800645c <prvSwitchTimerLists+0xb8>)
 80063b8:	681b      	ldr	r3, [r3, #0]
 80063ba:	68db      	ldr	r3, [r3, #12]
 80063bc:	68db      	ldr	r3, [r3, #12]
 80063be:	60fb      	str	r3, [r7, #12]
 80063c0:	68fb      	ldr	r3, [r7, #12]
 80063c2:	3304      	adds	r3, #4
 80063c4:	4618      	mov	r0, r3
 80063c6:	f7fe f99d 	bl	8004704 <uxListRemove>
 80063ca:	68fb      	ldr	r3, [r7, #12]
 80063cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80063ce:	68f8      	ldr	r0, [r7, #12]
 80063d0:	4798      	blx	r3
 80063d2:	68fb      	ldr	r3, [r7, #12]
 80063d4:	69db      	ldr	r3, [r3, #28]
 80063d6:	2b01      	cmp	r3, #1
 80063d8:	d12d      	bne.n	8006436 <prvSwitchTimerLists+0x92>
 80063da:	68fb      	ldr	r3, [r7, #12]
 80063dc:	699b      	ldr	r3, [r3, #24]
 80063de:	693a      	ldr	r2, [r7, #16]
 80063e0:	4413      	add	r3, r2
 80063e2:	60bb      	str	r3, [r7, #8]
 80063e4:	68ba      	ldr	r2, [r7, #8]
 80063e6:	693b      	ldr	r3, [r7, #16]
 80063e8:	429a      	cmp	r2, r3
 80063ea:	d90e      	bls.n	800640a <prvSwitchTimerLists+0x66>
 80063ec:	68fb      	ldr	r3, [r7, #12]
 80063ee:	68ba      	ldr	r2, [r7, #8]
 80063f0:	605a      	str	r2, [r3, #4]
 80063f2:	68fb      	ldr	r3, [r7, #12]
 80063f4:	68fa      	ldr	r2, [r7, #12]
 80063f6:	611a      	str	r2, [r3, #16]
 80063f8:	4b18      	ldr	r3, [pc, #96]	; (800645c <prvSwitchTimerLists+0xb8>)
 80063fa:	681a      	ldr	r2, [r3, #0]
 80063fc:	68fb      	ldr	r3, [r7, #12]
 80063fe:	3304      	adds	r3, #4
 8006400:	4619      	mov	r1, r3
 8006402:	4610      	mov	r0, r2
 8006404:	f7fe f945 	bl	8004692 <vListInsert>
 8006408:	e015      	b.n	8006436 <prvSwitchTimerLists+0x92>
 800640a:	2300      	movs	r3, #0
 800640c:	9300      	str	r3, [sp, #0]
 800640e:	2300      	movs	r3, #0
 8006410:	693a      	ldr	r2, [r7, #16]
 8006412:	2100      	movs	r1, #0
 8006414:	68f8      	ldr	r0, [r7, #12]
 8006416:	f7ff fda3 	bl	8005f60 <xTimerGenericCommand>
 800641a:	6078      	str	r0, [r7, #4]
 800641c:	687b      	ldr	r3, [r7, #4]
 800641e:	2b00      	cmp	r3, #0
 8006420:	d109      	bne.n	8006436 <prvSwitchTimerLists+0x92>
 8006422:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006426:	f383 8811 	msr	BASEPRI, r3
 800642a:	f3bf 8f6f 	isb	sy
 800642e:	f3bf 8f4f 	dsb	sy
 8006432:	603b      	str	r3, [r7, #0]
 8006434:	e7fe      	b.n	8006434 <prvSwitchTimerLists+0x90>
 8006436:	4b09      	ldr	r3, [pc, #36]	; (800645c <prvSwitchTimerLists+0xb8>)
 8006438:	681b      	ldr	r3, [r3, #0]
 800643a:	681b      	ldr	r3, [r3, #0]
 800643c:	2b00      	cmp	r3, #0
 800643e:	d1b5      	bne.n	80063ac <prvSwitchTimerLists+0x8>
 8006440:	4b06      	ldr	r3, [pc, #24]	; (800645c <prvSwitchTimerLists+0xb8>)
 8006442:	681b      	ldr	r3, [r3, #0]
 8006444:	617b      	str	r3, [r7, #20]
 8006446:	4b06      	ldr	r3, [pc, #24]	; (8006460 <prvSwitchTimerLists+0xbc>)
 8006448:	681b      	ldr	r3, [r3, #0]
 800644a:	4a04      	ldr	r2, [pc, #16]	; (800645c <prvSwitchTimerLists+0xb8>)
 800644c:	6013      	str	r3, [r2, #0]
 800644e:	4a04      	ldr	r2, [pc, #16]	; (8006460 <prvSwitchTimerLists+0xbc>)
 8006450:	697b      	ldr	r3, [r7, #20]
 8006452:	6013      	str	r3, [r2, #0]
 8006454:	bf00      	nop
 8006456:	3718      	adds	r7, #24
 8006458:	46bd      	mov	sp, r7
 800645a:	bd80      	pop	{r7, pc}
 800645c:	20000e0c 	.word	0x20000e0c
 8006460:	20000e10 	.word	0x20000e10

08006464 <prvCheckForValidListAndQueue>:
 8006464:	b580      	push	{r7, lr}
 8006466:	b082      	sub	sp, #8
 8006468:	af02      	add	r7, sp, #8
 800646a:	f000 f95f 	bl	800672c <vPortEnterCritical>
 800646e:	4b15      	ldr	r3, [pc, #84]	; (80064c4 <prvCheckForValidListAndQueue+0x60>)
 8006470:	681b      	ldr	r3, [r3, #0]
 8006472:	2b00      	cmp	r3, #0
 8006474:	d120      	bne.n	80064b8 <prvCheckForValidListAndQueue+0x54>
 8006476:	4814      	ldr	r0, [pc, #80]	; (80064c8 <prvCheckForValidListAndQueue+0x64>)
 8006478:	f7fe f8ba 	bl	80045f0 <vListInitialise>
 800647c:	4813      	ldr	r0, [pc, #76]	; (80064cc <prvCheckForValidListAndQueue+0x68>)
 800647e:	f7fe f8b7 	bl	80045f0 <vListInitialise>
 8006482:	4b13      	ldr	r3, [pc, #76]	; (80064d0 <prvCheckForValidListAndQueue+0x6c>)
 8006484:	4a10      	ldr	r2, [pc, #64]	; (80064c8 <prvCheckForValidListAndQueue+0x64>)
 8006486:	601a      	str	r2, [r3, #0]
 8006488:	4b12      	ldr	r3, [pc, #72]	; (80064d4 <prvCheckForValidListAndQueue+0x70>)
 800648a:	4a10      	ldr	r2, [pc, #64]	; (80064cc <prvCheckForValidListAndQueue+0x68>)
 800648c:	601a      	str	r2, [r3, #0]
 800648e:	2300      	movs	r3, #0
 8006490:	9300      	str	r3, [sp, #0]
 8006492:	4b11      	ldr	r3, [pc, #68]	; (80064d8 <prvCheckForValidListAndQueue+0x74>)
 8006494:	4a11      	ldr	r2, [pc, #68]	; (80064dc <prvCheckForValidListAndQueue+0x78>)
 8006496:	2110      	movs	r1, #16
 8006498:	200a      	movs	r0, #10
 800649a:	f7fe f9c5 	bl	8004828 <xQueueGenericCreateStatic>
 800649e:	4602      	mov	r2, r0
 80064a0:	4b08      	ldr	r3, [pc, #32]	; (80064c4 <prvCheckForValidListAndQueue+0x60>)
 80064a2:	601a      	str	r2, [r3, #0]
 80064a4:	4b07      	ldr	r3, [pc, #28]	; (80064c4 <prvCheckForValidListAndQueue+0x60>)
 80064a6:	681b      	ldr	r3, [r3, #0]
 80064a8:	2b00      	cmp	r3, #0
 80064aa:	d005      	beq.n	80064b8 <prvCheckForValidListAndQueue+0x54>
 80064ac:	4b05      	ldr	r3, [pc, #20]	; (80064c4 <prvCheckForValidListAndQueue+0x60>)
 80064ae:	681b      	ldr	r3, [r3, #0]
 80064b0:	490b      	ldr	r1, [pc, #44]	; (80064e0 <prvCheckForValidListAndQueue+0x7c>)
 80064b2:	4618      	mov	r0, r3
 80064b4:	f7fe fdc8 	bl	8005048 <vQueueAddToRegistry>
 80064b8:	f000 f966 	bl	8006788 <vPortExitCritical>
 80064bc:	bf00      	nop
 80064be:	46bd      	mov	sp, r7
 80064c0:	bd80      	pop	{r7, pc}
 80064c2:	bf00      	nop
 80064c4:	20000e14 	.word	0x20000e14
 80064c8:	20000de4 	.word	0x20000de4
 80064cc:	20000df8 	.word	0x20000df8
 80064d0:	20000e0c 	.word	0x20000e0c
 80064d4:	20000e10 	.word	0x20000e10
 80064d8:	20000ec0 	.word	0x20000ec0
 80064dc:	20000e20 	.word	0x20000e20
 80064e0:	08008ef4 	.word	0x08008ef4

080064e4 <pxPortInitialiseStack>:
 80064e4:	b480      	push	{r7}
 80064e6:	b085      	sub	sp, #20
 80064e8:	af00      	add	r7, sp, #0
 80064ea:	60f8      	str	r0, [r7, #12]
 80064ec:	60b9      	str	r1, [r7, #8]
 80064ee:	607a      	str	r2, [r7, #4]
 80064f0:	68fb      	ldr	r3, [r7, #12]
 80064f2:	3b04      	subs	r3, #4
 80064f4:	60fb      	str	r3, [r7, #12]
 80064f6:	68fb      	ldr	r3, [r7, #12]
 80064f8:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80064fc:	601a      	str	r2, [r3, #0]
 80064fe:	68fb      	ldr	r3, [r7, #12]
 8006500:	3b04      	subs	r3, #4
 8006502:	60fb      	str	r3, [r7, #12]
 8006504:	68bb      	ldr	r3, [r7, #8]
 8006506:	f023 0201 	bic.w	r2, r3, #1
 800650a:	68fb      	ldr	r3, [r7, #12]
 800650c:	601a      	str	r2, [r3, #0]
 800650e:	68fb      	ldr	r3, [r7, #12]
 8006510:	3b04      	subs	r3, #4
 8006512:	60fb      	str	r3, [r7, #12]
 8006514:	4a0c      	ldr	r2, [pc, #48]	; (8006548 <pxPortInitialiseStack+0x64>)
 8006516:	68fb      	ldr	r3, [r7, #12]
 8006518:	601a      	str	r2, [r3, #0]
 800651a:	68fb      	ldr	r3, [r7, #12]
 800651c:	3b14      	subs	r3, #20
 800651e:	60fb      	str	r3, [r7, #12]
 8006520:	687a      	ldr	r2, [r7, #4]
 8006522:	68fb      	ldr	r3, [r7, #12]
 8006524:	601a      	str	r2, [r3, #0]
 8006526:	68fb      	ldr	r3, [r7, #12]
 8006528:	3b04      	subs	r3, #4
 800652a:	60fb      	str	r3, [r7, #12]
 800652c:	68fb      	ldr	r3, [r7, #12]
 800652e:	f06f 0202 	mvn.w	r2, #2
 8006532:	601a      	str	r2, [r3, #0]
 8006534:	68fb      	ldr	r3, [r7, #12]
 8006536:	3b20      	subs	r3, #32
 8006538:	60fb      	str	r3, [r7, #12]
 800653a:	68fb      	ldr	r3, [r7, #12]
 800653c:	4618      	mov	r0, r3
 800653e:	3714      	adds	r7, #20
 8006540:	46bd      	mov	sp, r7
 8006542:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006546:	4770      	bx	lr
 8006548:	0800654d 	.word	0x0800654d

0800654c <prvTaskExitError>:
 800654c:	b480      	push	{r7}
 800654e:	b085      	sub	sp, #20
 8006550:	af00      	add	r7, sp, #0
 8006552:	2300      	movs	r3, #0
 8006554:	607b      	str	r3, [r7, #4]
 8006556:	4b11      	ldr	r3, [pc, #68]	; (800659c <prvTaskExitError+0x50>)
 8006558:	681b      	ldr	r3, [r3, #0]
 800655a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800655e:	d009      	beq.n	8006574 <prvTaskExitError+0x28>
 8006560:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006564:	f383 8811 	msr	BASEPRI, r3
 8006568:	f3bf 8f6f 	isb	sy
 800656c:	f3bf 8f4f 	dsb	sy
 8006570:	60fb      	str	r3, [r7, #12]
 8006572:	e7fe      	b.n	8006572 <prvTaskExitError+0x26>
 8006574:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006578:	f383 8811 	msr	BASEPRI, r3
 800657c:	f3bf 8f6f 	isb	sy
 8006580:	f3bf 8f4f 	dsb	sy
 8006584:	60bb      	str	r3, [r7, #8]
 8006586:	bf00      	nop
 8006588:	687b      	ldr	r3, [r7, #4]
 800658a:	2b00      	cmp	r3, #0
 800658c:	d0fc      	beq.n	8006588 <prvTaskExitError+0x3c>
 800658e:	bf00      	nop
 8006590:	3714      	adds	r7, #20
 8006592:	46bd      	mov	sp, r7
 8006594:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006598:	4770      	bx	lr
 800659a:	bf00      	nop
 800659c:	20000024 	.word	0x20000024

080065a0 <SVC_Handler>:
 80065a0:	4b07      	ldr	r3, [pc, #28]	; (80065c0 <pxCurrentTCBConst2>)
 80065a2:	6819      	ldr	r1, [r3, #0]
 80065a4:	6808      	ldr	r0, [r1, #0]
 80065a6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80065aa:	f380 8809 	msr	PSP, r0
 80065ae:	f3bf 8f6f 	isb	sy
 80065b2:	f04f 0000 	mov.w	r0, #0
 80065b6:	f380 8811 	msr	BASEPRI, r0
 80065ba:	4770      	bx	lr
 80065bc:	f3af 8000 	nop.w

080065c0 <pxCurrentTCBConst2>:
 80065c0:	200008e4 	.word	0x200008e4
 80065c4:	bf00      	nop
 80065c6:	bf00      	nop

080065c8 <prvPortStartFirstTask>:
 80065c8:	4808      	ldr	r0, [pc, #32]	; (80065ec <prvPortStartFirstTask+0x24>)
 80065ca:	6800      	ldr	r0, [r0, #0]
 80065cc:	6800      	ldr	r0, [r0, #0]
 80065ce:	f380 8808 	msr	MSP, r0
 80065d2:	f04f 0000 	mov.w	r0, #0
 80065d6:	f380 8814 	msr	CONTROL, r0
 80065da:	b662      	cpsie	i
 80065dc:	b661      	cpsie	f
 80065de:	f3bf 8f4f 	dsb	sy
 80065e2:	f3bf 8f6f 	isb	sy
 80065e6:	df00      	svc	0
 80065e8:	bf00      	nop
 80065ea:	bf00      	nop
 80065ec:	e000ed08 	.word	0xe000ed08

080065f0 <xPortStartScheduler>:
 80065f0:	b580      	push	{r7, lr}
 80065f2:	b086      	sub	sp, #24
 80065f4:	af00      	add	r7, sp, #0
 80065f6:	4b44      	ldr	r3, [pc, #272]	; (8006708 <xPortStartScheduler+0x118>)
 80065f8:	681b      	ldr	r3, [r3, #0]
 80065fa:	4a44      	ldr	r2, [pc, #272]	; (800670c <xPortStartScheduler+0x11c>)
 80065fc:	4293      	cmp	r3, r2
 80065fe:	d109      	bne.n	8006614 <xPortStartScheduler+0x24>
 8006600:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006604:	f383 8811 	msr	BASEPRI, r3
 8006608:	f3bf 8f6f 	isb	sy
 800660c:	f3bf 8f4f 	dsb	sy
 8006610:	613b      	str	r3, [r7, #16]
 8006612:	e7fe      	b.n	8006612 <xPortStartScheduler+0x22>
 8006614:	4b3c      	ldr	r3, [pc, #240]	; (8006708 <xPortStartScheduler+0x118>)
 8006616:	681b      	ldr	r3, [r3, #0]
 8006618:	4a3d      	ldr	r2, [pc, #244]	; (8006710 <xPortStartScheduler+0x120>)
 800661a:	4293      	cmp	r3, r2
 800661c:	d109      	bne.n	8006632 <xPortStartScheduler+0x42>
 800661e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006622:	f383 8811 	msr	BASEPRI, r3
 8006626:	f3bf 8f6f 	isb	sy
 800662a:	f3bf 8f4f 	dsb	sy
 800662e:	60fb      	str	r3, [r7, #12]
 8006630:	e7fe      	b.n	8006630 <xPortStartScheduler+0x40>
 8006632:	4b38      	ldr	r3, [pc, #224]	; (8006714 <xPortStartScheduler+0x124>)
 8006634:	617b      	str	r3, [r7, #20]
 8006636:	697b      	ldr	r3, [r7, #20]
 8006638:	781b      	ldrb	r3, [r3, #0]
 800663a:	b2db      	uxtb	r3, r3
 800663c:	607b      	str	r3, [r7, #4]
 800663e:	697b      	ldr	r3, [r7, #20]
 8006640:	22ff      	movs	r2, #255	; 0xff
 8006642:	701a      	strb	r2, [r3, #0]
 8006644:	697b      	ldr	r3, [r7, #20]
 8006646:	781b      	ldrb	r3, [r3, #0]
 8006648:	b2db      	uxtb	r3, r3
 800664a:	70fb      	strb	r3, [r7, #3]
 800664c:	78fb      	ldrb	r3, [r7, #3]
 800664e:	b2db      	uxtb	r3, r3
 8006650:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8006654:	b2da      	uxtb	r2, r3
 8006656:	4b30      	ldr	r3, [pc, #192]	; (8006718 <xPortStartScheduler+0x128>)
 8006658:	701a      	strb	r2, [r3, #0]
 800665a:	4b30      	ldr	r3, [pc, #192]	; (800671c <xPortStartScheduler+0x12c>)
 800665c:	2207      	movs	r2, #7
 800665e:	601a      	str	r2, [r3, #0]
 8006660:	e009      	b.n	8006676 <xPortStartScheduler+0x86>
 8006662:	4b2e      	ldr	r3, [pc, #184]	; (800671c <xPortStartScheduler+0x12c>)
 8006664:	681b      	ldr	r3, [r3, #0]
 8006666:	3b01      	subs	r3, #1
 8006668:	4a2c      	ldr	r2, [pc, #176]	; (800671c <xPortStartScheduler+0x12c>)
 800666a:	6013      	str	r3, [r2, #0]
 800666c:	78fb      	ldrb	r3, [r7, #3]
 800666e:	b2db      	uxtb	r3, r3
 8006670:	005b      	lsls	r3, r3, #1
 8006672:	b2db      	uxtb	r3, r3
 8006674:	70fb      	strb	r3, [r7, #3]
 8006676:	78fb      	ldrb	r3, [r7, #3]
 8006678:	b2db      	uxtb	r3, r3
 800667a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800667e:	2b80      	cmp	r3, #128	; 0x80
 8006680:	d0ef      	beq.n	8006662 <xPortStartScheduler+0x72>
 8006682:	4b26      	ldr	r3, [pc, #152]	; (800671c <xPortStartScheduler+0x12c>)
 8006684:	681b      	ldr	r3, [r3, #0]
 8006686:	f1c3 0307 	rsb	r3, r3, #7
 800668a:	2b04      	cmp	r3, #4
 800668c:	d009      	beq.n	80066a2 <xPortStartScheduler+0xb2>
 800668e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006692:	f383 8811 	msr	BASEPRI, r3
 8006696:	f3bf 8f6f 	isb	sy
 800669a:	f3bf 8f4f 	dsb	sy
 800669e:	60bb      	str	r3, [r7, #8]
 80066a0:	e7fe      	b.n	80066a0 <xPortStartScheduler+0xb0>
 80066a2:	4b1e      	ldr	r3, [pc, #120]	; (800671c <xPortStartScheduler+0x12c>)
 80066a4:	681b      	ldr	r3, [r3, #0]
 80066a6:	021b      	lsls	r3, r3, #8
 80066a8:	4a1c      	ldr	r2, [pc, #112]	; (800671c <xPortStartScheduler+0x12c>)
 80066aa:	6013      	str	r3, [r2, #0]
 80066ac:	4b1b      	ldr	r3, [pc, #108]	; (800671c <xPortStartScheduler+0x12c>)
 80066ae:	681b      	ldr	r3, [r3, #0]
 80066b0:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80066b4:	4a19      	ldr	r2, [pc, #100]	; (800671c <xPortStartScheduler+0x12c>)
 80066b6:	6013      	str	r3, [r2, #0]
 80066b8:	687b      	ldr	r3, [r7, #4]
 80066ba:	b2da      	uxtb	r2, r3
 80066bc:	697b      	ldr	r3, [r7, #20]
 80066be:	701a      	strb	r2, [r3, #0]
 80066c0:	4b17      	ldr	r3, [pc, #92]	; (8006720 <xPortStartScheduler+0x130>)
 80066c2:	681b      	ldr	r3, [r3, #0]
 80066c4:	4a16      	ldr	r2, [pc, #88]	; (8006720 <xPortStartScheduler+0x130>)
 80066c6:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80066ca:	6013      	str	r3, [r2, #0]
 80066cc:	4b14      	ldr	r3, [pc, #80]	; (8006720 <xPortStartScheduler+0x130>)
 80066ce:	681b      	ldr	r3, [r3, #0]
 80066d0:	4a13      	ldr	r2, [pc, #76]	; (8006720 <xPortStartScheduler+0x130>)
 80066d2:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 80066d6:	6013      	str	r3, [r2, #0]
 80066d8:	f000 f8d6 	bl	8006888 <vPortSetupTimerInterrupt>
 80066dc:	4b11      	ldr	r3, [pc, #68]	; (8006724 <xPortStartScheduler+0x134>)
 80066de:	2200      	movs	r2, #0
 80066e0:	601a      	str	r2, [r3, #0]
 80066e2:	f000 f8f5 	bl	80068d0 <vPortEnableVFP>
 80066e6:	4b10      	ldr	r3, [pc, #64]	; (8006728 <xPortStartScheduler+0x138>)
 80066e8:	681b      	ldr	r3, [r3, #0]
 80066ea:	4a0f      	ldr	r2, [pc, #60]	; (8006728 <xPortStartScheduler+0x138>)
 80066ec:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 80066f0:	6013      	str	r3, [r2, #0]
 80066f2:	f7ff ff69 	bl	80065c8 <prvPortStartFirstTask>
 80066f6:	f7ff f8a7 	bl	8005848 <vTaskSwitchContext>
 80066fa:	f7ff ff27 	bl	800654c <prvTaskExitError>
 80066fe:	2300      	movs	r3, #0
 8006700:	4618      	mov	r0, r3
 8006702:	3718      	adds	r7, #24
 8006704:	46bd      	mov	sp, r7
 8006706:	bd80      	pop	{r7, pc}
 8006708:	e000ed00 	.word	0xe000ed00
 800670c:	410fc271 	.word	0x410fc271
 8006710:	410fc270 	.word	0x410fc270
 8006714:	e000e400 	.word	0xe000e400
 8006718:	20000f10 	.word	0x20000f10
 800671c:	20000f14 	.word	0x20000f14
 8006720:	e000ed20 	.word	0xe000ed20
 8006724:	20000024 	.word	0x20000024
 8006728:	e000ef34 	.word	0xe000ef34

0800672c <vPortEnterCritical>:
 800672c:	b480      	push	{r7}
 800672e:	b083      	sub	sp, #12
 8006730:	af00      	add	r7, sp, #0
 8006732:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006736:	f383 8811 	msr	BASEPRI, r3
 800673a:	f3bf 8f6f 	isb	sy
 800673e:	f3bf 8f4f 	dsb	sy
 8006742:	607b      	str	r3, [r7, #4]
 8006744:	4b0e      	ldr	r3, [pc, #56]	; (8006780 <vPortEnterCritical+0x54>)
 8006746:	681b      	ldr	r3, [r3, #0]
 8006748:	3301      	adds	r3, #1
 800674a:	4a0d      	ldr	r2, [pc, #52]	; (8006780 <vPortEnterCritical+0x54>)
 800674c:	6013      	str	r3, [r2, #0]
 800674e:	4b0c      	ldr	r3, [pc, #48]	; (8006780 <vPortEnterCritical+0x54>)
 8006750:	681b      	ldr	r3, [r3, #0]
 8006752:	2b01      	cmp	r3, #1
 8006754:	d10e      	bne.n	8006774 <vPortEnterCritical+0x48>
 8006756:	4b0b      	ldr	r3, [pc, #44]	; (8006784 <vPortEnterCritical+0x58>)
 8006758:	681b      	ldr	r3, [r3, #0]
 800675a:	b2db      	uxtb	r3, r3
 800675c:	2b00      	cmp	r3, #0
 800675e:	d009      	beq.n	8006774 <vPortEnterCritical+0x48>
 8006760:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006764:	f383 8811 	msr	BASEPRI, r3
 8006768:	f3bf 8f6f 	isb	sy
 800676c:	f3bf 8f4f 	dsb	sy
 8006770:	603b      	str	r3, [r7, #0]
 8006772:	e7fe      	b.n	8006772 <vPortEnterCritical+0x46>
 8006774:	bf00      	nop
 8006776:	370c      	adds	r7, #12
 8006778:	46bd      	mov	sp, r7
 800677a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800677e:	4770      	bx	lr
 8006780:	20000024 	.word	0x20000024
 8006784:	e000ed04 	.word	0xe000ed04

08006788 <vPortExitCritical>:
 8006788:	b480      	push	{r7}
 800678a:	b083      	sub	sp, #12
 800678c:	af00      	add	r7, sp, #0
 800678e:	4b11      	ldr	r3, [pc, #68]	; (80067d4 <vPortExitCritical+0x4c>)
 8006790:	681b      	ldr	r3, [r3, #0]
 8006792:	2b00      	cmp	r3, #0
 8006794:	d109      	bne.n	80067aa <vPortExitCritical+0x22>
 8006796:	f04f 0350 	mov.w	r3, #80	; 0x50
 800679a:	f383 8811 	msr	BASEPRI, r3
 800679e:	f3bf 8f6f 	isb	sy
 80067a2:	f3bf 8f4f 	dsb	sy
 80067a6:	607b      	str	r3, [r7, #4]
 80067a8:	e7fe      	b.n	80067a8 <vPortExitCritical+0x20>
 80067aa:	4b0a      	ldr	r3, [pc, #40]	; (80067d4 <vPortExitCritical+0x4c>)
 80067ac:	681b      	ldr	r3, [r3, #0]
 80067ae:	3b01      	subs	r3, #1
 80067b0:	4a08      	ldr	r2, [pc, #32]	; (80067d4 <vPortExitCritical+0x4c>)
 80067b2:	6013      	str	r3, [r2, #0]
 80067b4:	4b07      	ldr	r3, [pc, #28]	; (80067d4 <vPortExitCritical+0x4c>)
 80067b6:	681b      	ldr	r3, [r3, #0]
 80067b8:	2b00      	cmp	r3, #0
 80067ba:	d104      	bne.n	80067c6 <vPortExitCritical+0x3e>
 80067bc:	2300      	movs	r3, #0
 80067be:	603b      	str	r3, [r7, #0]
 80067c0:	683b      	ldr	r3, [r7, #0]
 80067c2:	f383 8811 	msr	BASEPRI, r3
 80067c6:	bf00      	nop
 80067c8:	370c      	adds	r7, #12
 80067ca:	46bd      	mov	sp, r7
 80067cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067d0:	4770      	bx	lr
 80067d2:	bf00      	nop
 80067d4:	20000024 	.word	0x20000024
	...

080067e0 <PendSV_Handler>:
 80067e0:	f3ef 8009 	mrs	r0, PSP
 80067e4:	f3bf 8f6f 	isb	sy
 80067e8:	4b15      	ldr	r3, [pc, #84]	; (8006840 <pxCurrentTCBConst>)
 80067ea:	681a      	ldr	r2, [r3, #0]
 80067ec:	f01e 0f10 	tst.w	lr, #16
 80067f0:	bf08      	it	eq
 80067f2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80067f6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067fa:	6010      	str	r0, [r2, #0]
 80067fc:	e92d 0009 	stmdb	sp!, {r0, r3}
 8006800:	f04f 0050 	mov.w	r0, #80	; 0x50
 8006804:	f380 8811 	msr	BASEPRI, r0
 8006808:	f3bf 8f4f 	dsb	sy
 800680c:	f3bf 8f6f 	isb	sy
 8006810:	f7ff f81a 	bl	8005848 <vTaskSwitchContext>
 8006814:	f04f 0000 	mov.w	r0, #0
 8006818:	f380 8811 	msr	BASEPRI, r0
 800681c:	bc09      	pop	{r0, r3}
 800681e:	6819      	ldr	r1, [r3, #0]
 8006820:	6808      	ldr	r0, [r1, #0]
 8006822:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006826:	f01e 0f10 	tst.w	lr, #16
 800682a:	bf08      	it	eq
 800682c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8006830:	f380 8809 	msr	PSP, r0
 8006834:	f3bf 8f6f 	isb	sy
 8006838:	4770      	bx	lr
 800683a:	bf00      	nop
 800683c:	f3af 8000 	nop.w

08006840 <pxCurrentTCBConst>:
 8006840:	200008e4 	.word	0x200008e4
 8006844:	bf00      	nop
 8006846:	bf00      	nop

08006848 <SysTick_Handler>:
 8006848:	b580      	push	{r7, lr}
 800684a:	b082      	sub	sp, #8
 800684c:	af00      	add	r7, sp, #0
 800684e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006852:	f383 8811 	msr	BASEPRI, r3
 8006856:	f3bf 8f6f 	isb	sy
 800685a:	f3bf 8f4f 	dsb	sy
 800685e:	607b      	str	r3, [r7, #4]
 8006860:	f7fe ff34 	bl	80056cc <xTaskIncrementTick>
 8006864:	4603      	mov	r3, r0
 8006866:	2b00      	cmp	r3, #0
 8006868:	d003      	beq.n	8006872 <SysTick_Handler+0x2a>
 800686a:	4b06      	ldr	r3, [pc, #24]	; (8006884 <SysTick_Handler+0x3c>)
 800686c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006870:	601a      	str	r2, [r3, #0]
 8006872:	2300      	movs	r3, #0
 8006874:	603b      	str	r3, [r7, #0]
 8006876:	683b      	ldr	r3, [r7, #0]
 8006878:	f383 8811 	msr	BASEPRI, r3
 800687c:	bf00      	nop
 800687e:	3708      	adds	r7, #8
 8006880:	46bd      	mov	sp, r7
 8006882:	bd80      	pop	{r7, pc}
 8006884:	e000ed04 	.word	0xe000ed04

08006888 <vPortSetupTimerInterrupt>:
 8006888:	b480      	push	{r7}
 800688a:	af00      	add	r7, sp, #0
 800688c:	4b0b      	ldr	r3, [pc, #44]	; (80068bc <vPortSetupTimerInterrupt+0x34>)
 800688e:	2200      	movs	r2, #0
 8006890:	601a      	str	r2, [r3, #0]
 8006892:	4b0b      	ldr	r3, [pc, #44]	; (80068c0 <vPortSetupTimerInterrupt+0x38>)
 8006894:	2200      	movs	r2, #0
 8006896:	601a      	str	r2, [r3, #0]
 8006898:	4b0a      	ldr	r3, [pc, #40]	; (80068c4 <vPortSetupTimerInterrupt+0x3c>)
 800689a:	681b      	ldr	r3, [r3, #0]
 800689c:	4a0a      	ldr	r2, [pc, #40]	; (80068c8 <vPortSetupTimerInterrupt+0x40>)
 800689e:	fba2 2303 	umull	r2, r3, r2, r3
 80068a2:	099b      	lsrs	r3, r3, #6
 80068a4:	4a09      	ldr	r2, [pc, #36]	; (80068cc <vPortSetupTimerInterrupt+0x44>)
 80068a6:	3b01      	subs	r3, #1
 80068a8:	6013      	str	r3, [r2, #0]
 80068aa:	4b04      	ldr	r3, [pc, #16]	; (80068bc <vPortSetupTimerInterrupt+0x34>)
 80068ac:	2207      	movs	r2, #7
 80068ae:	601a      	str	r2, [r3, #0]
 80068b0:	bf00      	nop
 80068b2:	46bd      	mov	sp, r7
 80068b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068b8:	4770      	bx	lr
 80068ba:	bf00      	nop
 80068bc:	e000e010 	.word	0xe000e010
 80068c0:	e000e018 	.word	0xe000e018
 80068c4:	20000018 	.word	0x20000018
 80068c8:	10624dd3 	.word	0x10624dd3
 80068cc:	e000e014 	.word	0xe000e014

080068d0 <vPortEnableVFP>:
 80068d0:	f8df 000c 	ldr.w	r0, [pc, #12]	; 80068e0 <vPortEnableVFP+0x10>
 80068d4:	6801      	ldr	r1, [r0, #0]
 80068d6:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80068da:	6001      	str	r1, [r0, #0]
 80068dc:	4770      	bx	lr
 80068de:	bf00      	nop
 80068e0:	e000ed88 	.word	0xe000ed88

080068e4 <vPortValidateInterruptPriority>:
 80068e4:	b480      	push	{r7}
 80068e6:	b085      	sub	sp, #20
 80068e8:	af00      	add	r7, sp, #0
 80068ea:	f3ef 8305 	mrs	r3, IPSR
 80068ee:	60fb      	str	r3, [r7, #12]
 80068f0:	68fb      	ldr	r3, [r7, #12]
 80068f2:	2b0f      	cmp	r3, #15
 80068f4:	d913      	bls.n	800691e <vPortValidateInterruptPriority+0x3a>
 80068f6:	4a16      	ldr	r2, [pc, #88]	; (8006950 <vPortValidateInterruptPriority+0x6c>)
 80068f8:	68fb      	ldr	r3, [r7, #12]
 80068fa:	4413      	add	r3, r2
 80068fc:	781b      	ldrb	r3, [r3, #0]
 80068fe:	72fb      	strb	r3, [r7, #11]
 8006900:	4b14      	ldr	r3, [pc, #80]	; (8006954 <vPortValidateInterruptPriority+0x70>)
 8006902:	781b      	ldrb	r3, [r3, #0]
 8006904:	7afa      	ldrb	r2, [r7, #11]
 8006906:	429a      	cmp	r2, r3
 8006908:	d209      	bcs.n	800691e <vPortValidateInterruptPriority+0x3a>
 800690a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800690e:	f383 8811 	msr	BASEPRI, r3
 8006912:	f3bf 8f6f 	isb	sy
 8006916:	f3bf 8f4f 	dsb	sy
 800691a:	607b      	str	r3, [r7, #4]
 800691c:	e7fe      	b.n	800691c <vPortValidateInterruptPriority+0x38>
 800691e:	4b0e      	ldr	r3, [pc, #56]	; (8006958 <vPortValidateInterruptPriority+0x74>)
 8006920:	681b      	ldr	r3, [r3, #0]
 8006922:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8006926:	4b0d      	ldr	r3, [pc, #52]	; (800695c <vPortValidateInterruptPriority+0x78>)
 8006928:	681b      	ldr	r3, [r3, #0]
 800692a:	429a      	cmp	r2, r3
 800692c:	d909      	bls.n	8006942 <vPortValidateInterruptPriority+0x5e>
 800692e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006932:	f383 8811 	msr	BASEPRI, r3
 8006936:	f3bf 8f6f 	isb	sy
 800693a:	f3bf 8f4f 	dsb	sy
 800693e:	603b      	str	r3, [r7, #0]
 8006940:	e7fe      	b.n	8006940 <vPortValidateInterruptPriority+0x5c>
 8006942:	bf00      	nop
 8006944:	3714      	adds	r7, #20
 8006946:	46bd      	mov	sp, r7
 8006948:	f85d 7b04 	ldr.w	r7, [sp], #4
 800694c:	4770      	bx	lr
 800694e:	bf00      	nop
 8006950:	e000e3f0 	.word	0xe000e3f0
 8006954:	20000f10 	.word	0x20000f10
 8006958:	e000ed0c 	.word	0xe000ed0c
 800695c:	20000f14 	.word	0x20000f14

08006960 <pvPortMalloc>:
 8006960:	b580      	push	{r7, lr}
 8006962:	b08a      	sub	sp, #40	; 0x28
 8006964:	af00      	add	r7, sp, #0
 8006966:	6078      	str	r0, [r7, #4]
 8006968:	2300      	movs	r3, #0
 800696a:	61fb      	str	r3, [r7, #28]
 800696c:	f7fe fdf4 	bl	8005558 <vTaskSuspendAll>
 8006970:	4b57      	ldr	r3, [pc, #348]	; (8006ad0 <pvPortMalloc+0x170>)
 8006972:	681b      	ldr	r3, [r3, #0]
 8006974:	2b00      	cmp	r3, #0
 8006976:	d101      	bne.n	800697c <pvPortMalloc+0x1c>
 8006978:	f000 f90c 	bl	8006b94 <prvHeapInit>
 800697c:	4b55      	ldr	r3, [pc, #340]	; (8006ad4 <pvPortMalloc+0x174>)
 800697e:	681a      	ldr	r2, [r3, #0]
 8006980:	687b      	ldr	r3, [r7, #4]
 8006982:	4013      	ands	r3, r2
 8006984:	2b00      	cmp	r3, #0
 8006986:	f040 808c 	bne.w	8006aa2 <pvPortMalloc+0x142>
 800698a:	687b      	ldr	r3, [r7, #4]
 800698c:	2b00      	cmp	r3, #0
 800698e:	d01c      	beq.n	80069ca <pvPortMalloc+0x6a>
 8006990:	2208      	movs	r2, #8
 8006992:	687b      	ldr	r3, [r7, #4]
 8006994:	4413      	add	r3, r2
 8006996:	607b      	str	r3, [r7, #4]
 8006998:	687b      	ldr	r3, [r7, #4]
 800699a:	f003 0307 	and.w	r3, r3, #7
 800699e:	2b00      	cmp	r3, #0
 80069a0:	d013      	beq.n	80069ca <pvPortMalloc+0x6a>
 80069a2:	687b      	ldr	r3, [r7, #4]
 80069a4:	f023 0307 	bic.w	r3, r3, #7
 80069a8:	3308      	adds	r3, #8
 80069aa:	607b      	str	r3, [r7, #4]
 80069ac:	687b      	ldr	r3, [r7, #4]
 80069ae:	f003 0307 	and.w	r3, r3, #7
 80069b2:	2b00      	cmp	r3, #0
 80069b4:	d009      	beq.n	80069ca <pvPortMalloc+0x6a>
 80069b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80069ba:	f383 8811 	msr	BASEPRI, r3
 80069be:	f3bf 8f6f 	isb	sy
 80069c2:	f3bf 8f4f 	dsb	sy
 80069c6:	617b      	str	r3, [r7, #20]
 80069c8:	e7fe      	b.n	80069c8 <pvPortMalloc+0x68>
 80069ca:	687b      	ldr	r3, [r7, #4]
 80069cc:	2b00      	cmp	r3, #0
 80069ce:	d068      	beq.n	8006aa2 <pvPortMalloc+0x142>
 80069d0:	4b41      	ldr	r3, [pc, #260]	; (8006ad8 <pvPortMalloc+0x178>)
 80069d2:	681b      	ldr	r3, [r3, #0]
 80069d4:	687a      	ldr	r2, [r7, #4]
 80069d6:	429a      	cmp	r2, r3
 80069d8:	d863      	bhi.n	8006aa2 <pvPortMalloc+0x142>
 80069da:	4b40      	ldr	r3, [pc, #256]	; (8006adc <pvPortMalloc+0x17c>)
 80069dc:	623b      	str	r3, [r7, #32]
 80069de:	4b3f      	ldr	r3, [pc, #252]	; (8006adc <pvPortMalloc+0x17c>)
 80069e0:	681b      	ldr	r3, [r3, #0]
 80069e2:	627b      	str	r3, [r7, #36]	; 0x24
 80069e4:	e004      	b.n	80069f0 <pvPortMalloc+0x90>
 80069e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80069e8:	623b      	str	r3, [r7, #32]
 80069ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80069ec:	681b      	ldr	r3, [r3, #0]
 80069ee:	627b      	str	r3, [r7, #36]	; 0x24
 80069f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80069f2:	685b      	ldr	r3, [r3, #4]
 80069f4:	687a      	ldr	r2, [r7, #4]
 80069f6:	429a      	cmp	r2, r3
 80069f8:	d903      	bls.n	8006a02 <pvPortMalloc+0xa2>
 80069fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80069fc:	681b      	ldr	r3, [r3, #0]
 80069fe:	2b00      	cmp	r3, #0
 8006a00:	d1f1      	bne.n	80069e6 <pvPortMalloc+0x86>
 8006a02:	4b33      	ldr	r3, [pc, #204]	; (8006ad0 <pvPortMalloc+0x170>)
 8006a04:	681b      	ldr	r3, [r3, #0]
 8006a06:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006a08:	429a      	cmp	r2, r3
 8006a0a:	d04a      	beq.n	8006aa2 <pvPortMalloc+0x142>
 8006a0c:	6a3b      	ldr	r3, [r7, #32]
 8006a0e:	681b      	ldr	r3, [r3, #0]
 8006a10:	2208      	movs	r2, #8
 8006a12:	4413      	add	r3, r2
 8006a14:	61fb      	str	r3, [r7, #28]
 8006a16:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006a18:	681a      	ldr	r2, [r3, #0]
 8006a1a:	6a3b      	ldr	r3, [r7, #32]
 8006a1c:	601a      	str	r2, [r3, #0]
 8006a1e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006a20:	685a      	ldr	r2, [r3, #4]
 8006a22:	687b      	ldr	r3, [r7, #4]
 8006a24:	1ad2      	subs	r2, r2, r3
 8006a26:	2308      	movs	r3, #8
 8006a28:	005b      	lsls	r3, r3, #1
 8006a2a:	429a      	cmp	r2, r3
 8006a2c:	d91e      	bls.n	8006a6c <pvPortMalloc+0x10c>
 8006a2e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006a30:	687b      	ldr	r3, [r7, #4]
 8006a32:	4413      	add	r3, r2
 8006a34:	61bb      	str	r3, [r7, #24]
 8006a36:	69bb      	ldr	r3, [r7, #24]
 8006a38:	f003 0307 	and.w	r3, r3, #7
 8006a3c:	2b00      	cmp	r3, #0
 8006a3e:	d009      	beq.n	8006a54 <pvPortMalloc+0xf4>
 8006a40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006a44:	f383 8811 	msr	BASEPRI, r3
 8006a48:	f3bf 8f6f 	isb	sy
 8006a4c:	f3bf 8f4f 	dsb	sy
 8006a50:	613b      	str	r3, [r7, #16]
 8006a52:	e7fe      	b.n	8006a52 <pvPortMalloc+0xf2>
 8006a54:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006a56:	685a      	ldr	r2, [r3, #4]
 8006a58:	687b      	ldr	r3, [r7, #4]
 8006a5a:	1ad2      	subs	r2, r2, r3
 8006a5c:	69bb      	ldr	r3, [r7, #24]
 8006a5e:	605a      	str	r2, [r3, #4]
 8006a60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006a62:	687a      	ldr	r2, [r7, #4]
 8006a64:	605a      	str	r2, [r3, #4]
 8006a66:	69b8      	ldr	r0, [r7, #24]
 8006a68:	f000 f8f6 	bl	8006c58 <prvInsertBlockIntoFreeList>
 8006a6c:	4b1a      	ldr	r3, [pc, #104]	; (8006ad8 <pvPortMalloc+0x178>)
 8006a6e:	681a      	ldr	r2, [r3, #0]
 8006a70:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006a72:	685b      	ldr	r3, [r3, #4]
 8006a74:	1ad3      	subs	r3, r2, r3
 8006a76:	4a18      	ldr	r2, [pc, #96]	; (8006ad8 <pvPortMalloc+0x178>)
 8006a78:	6013      	str	r3, [r2, #0]
 8006a7a:	4b17      	ldr	r3, [pc, #92]	; (8006ad8 <pvPortMalloc+0x178>)
 8006a7c:	681a      	ldr	r2, [r3, #0]
 8006a7e:	4b18      	ldr	r3, [pc, #96]	; (8006ae0 <pvPortMalloc+0x180>)
 8006a80:	681b      	ldr	r3, [r3, #0]
 8006a82:	429a      	cmp	r2, r3
 8006a84:	d203      	bcs.n	8006a8e <pvPortMalloc+0x12e>
 8006a86:	4b14      	ldr	r3, [pc, #80]	; (8006ad8 <pvPortMalloc+0x178>)
 8006a88:	681b      	ldr	r3, [r3, #0]
 8006a8a:	4a15      	ldr	r2, [pc, #84]	; (8006ae0 <pvPortMalloc+0x180>)
 8006a8c:	6013      	str	r3, [r2, #0]
 8006a8e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006a90:	685a      	ldr	r2, [r3, #4]
 8006a92:	4b10      	ldr	r3, [pc, #64]	; (8006ad4 <pvPortMalloc+0x174>)
 8006a94:	681b      	ldr	r3, [r3, #0]
 8006a96:	431a      	orrs	r2, r3
 8006a98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006a9a:	605a      	str	r2, [r3, #4]
 8006a9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006a9e:	2200      	movs	r2, #0
 8006aa0:	601a      	str	r2, [r3, #0]
 8006aa2:	f7fe fd67 	bl	8005574 <xTaskResumeAll>
 8006aa6:	69fb      	ldr	r3, [r7, #28]
 8006aa8:	f003 0307 	and.w	r3, r3, #7
 8006aac:	2b00      	cmp	r3, #0
 8006aae:	d009      	beq.n	8006ac4 <pvPortMalloc+0x164>
 8006ab0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006ab4:	f383 8811 	msr	BASEPRI, r3
 8006ab8:	f3bf 8f6f 	isb	sy
 8006abc:	f3bf 8f4f 	dsb	sy
 8006ac0:	60fb      	str	r3, [r7, #12]
 8006ac2:	e7fe      	b.n	8006ac2 <pvPortMalloc+0x162>
 8006ac4:	69fb      	ldr	r3, [r7, #28]
 8006ac6:	4618      	mov	r0, r3
 8006ac8:	3728      	adds	r7, #40	; 0x28
 8006aca:	46bd      	mov	sp, r7
 8006acc:	bd80      	pop	{r7, pc}
 8006ace:	bf00      	nop
 8006ad0:	20001b20 	.word	0x20001b20
 8006ad4:	20001b2c 	.word	0x20001b2c
 8006ad8:	20001b24 	.word	0x20001b24
 8006adc:	20001b18 	.word	0x20001b18
 8006ae0:	20001b28 	.word	0x20001b28

08006ae4 <vPortFree>:
 8006ae4:	b580      	push	{r7, lr}
 8006ae6:	b086      	sub	sp, #24
 8006ae8:	af00      	add	r7, sp, #0
 8006aea:	6078      	str	r0, [r7, #4]
 8006aec:	687b      	ldr	r3, [r7, #4]
 8006aee:	617b      	str	r3, [r7, #20]
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	2b00      	cmp	r3, #0
 8006af4:	d046      	beq.n	8006b84 <vPortFree+0xa0>
 8006af6:	2308      	movs	r3, #8
 8006af8:	425b      	negs	r3, r3
 8006afa:	697a      	ldr	r2, [r7, #20]
 8006afc:	4413      	add	r3, r2
 8006afe:	617b      	str	r3, [r7, #20]
 8006b00:	697b      	ldr	r3, [r7, #20]
 8006b02:	613b      	str	r3, [r7, #16]
 8006b04:	693b      	ldr	r3, [r7, #16]
 8006b06:	685a      	ldr	r2, [r3, #4]
 8006b08:	4b20      	ldr	r3, [pc, #128]	; (8006b8c <vPortFree+0xa8>)
 8006b0a:	681b      	ldr	r3, [r3, #0]
 8006b0c:	4013      	ands	r3, r2
 8006b0e:	2b00      	cmp	r3, #0
 8006b10:	d109      	bne.n	8006b26 <vPortFree+0x42>
 8006b12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b16:	f383 8811 	msr	BASEPRI, r3
 8006b1a:	f3bf 8f6f 	isb	sy
 8006b1e:	f3bf 8f4f 	dsb	sy
 8006b22:	60fb      	str	r3, [r7, #12]
 8006b24:	e7fe      	b.n	8006b24 <vPortFree+0x40>
 8006b26:	693b      	ldr	r3, [r7, #16]
 8006b28:	681b      	ldr	r3, [r3, #0]
 8006b2a:	2b00      	cmp	r3, #0
 8006b2c:	d009      	beq.n	8006b42 <vPortFree+0x5e>
 8006b2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b32:	f383 8811 	msr	BASEPRI, r3
 8006b36:	f3bf 8f6f 	isb	sy
 8006b3a:	f3bf 8f4f 	dsb	sy
 8006b3e:	60bb      	str	r3, [r7, #8]
 8006b40:	e7fe      	b.n	8006b40 <vPortFree+0x5c>
 8006b42:	693b      	ldr	r3, [r7, #16]
 8006b44:	685a      	ldr	r2, [r3, #4]
 8006b46:	4b11      	ldr	r3, [pc, #68]	; (8006b8c <vPortFree+0xa8>)
 8006b48:	681b      	ldr	r3, [r3, #0]
 8006b4a:	4013      	ands	r3, r2
 8006b4c:	2b00      	cmp	r3, #0
 8006b4e:	d019      	beq.n	8006b84 <vPortFree+0xa0>
 8006b50:	693b      	ldr	r3, [r7, #16]
 8006b52:	681b      	ldr	r3, [r3, #0]
 8006b54:	2b00      	cmp	r3, #0
 8006b56:	d115      	bne.n	8006b84 <vPortFree+0xa0>
 8006b58:	693b      	ldr	r3, [r7, #16]
 8006b5a:	685a      	ldr	r2, [r3, #4]
 8006b5c:	4b0b      	ldr	r3, [pc, #44]	; (8006b8c <vPortFree+0xa8>)
 8006b5e:	681b      	ldr	r3, [r3, #0]
 8006b60:	43db      	mvns	r3, r3
 8006b62:	401a      	ands	r2, r3
 8006b64:	693b      	ldr	r3, [r7, #16]
 8006b66:	605a      	str	r2, [r3, #4]
 8006b68:	f7fe fcf6 	bl	8005558 <vTaskSuspendAll>
 8006b6c:	693b      	ldr	r3, [r7, #16]
 8006b6e:	685a      	ldr	r2, [r3, #4]
 8006b70:	4b07      	ldr	r3, [pc, #28]	; (8006b90 <vPortFree+0xac>)
 8006b72:	681b      	ldr	r3, [r3, #0]
 8006b74:	4413      	add	r3, r2
 8006b76:	4a06      	ldr	r2, [pc, #24]	; (8006b90 <vPortFree+0xac>)
 8006b78:	6013      	str	r3, [r2, #0]
 8006b7a:	6938      	ldr	r0, [r7, #16]
 8006b7c:	f000 f86c 	bl	8006c58 <prvInsertBlockIntoFreeList>
 8006b80:	f7fe fcf8 	bl	8005574 <xTaskResumeAll>
 8006b84:	bf00      	nop
 8006b86:	3718      	adds	r7, #24
 8006b88:	46bd      	mov	sp, r7
 8006b8a:	bd80      	pop	{r7, pc}
 8006b8c:	20001b2c 	.word	0x20001b2c
 8006b90:	20001b24 	.word	0x20001b24

08006b94 <prvHeapInit>:
 8006b94:	b480      	push	{r7}
 8006b96:	b085      	sub	sp, #20
 8006b98:	af00      	add	r7, sp, #0
 8006b9a:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8006b9e:	60bb      	str	r3, [r7, #8]
 8006ba0:	4b27      	ldr	r3, [pc, #156]	; (8006c40 <prvHeapInit+0xac>)
 8006ba2:	60fb      	str	r3, [r7, #12]
 8006ba4:	68fb      	ldr	r3, [r7, #12]
 8006ba6:	f003 0307 	and.w	r3, r3, #7
 8006baa:	2b00      	cmp	r3, #0
 8006bac:	d00c      	beq.n	8006bc8 <prvHeapInit+0x34>
 8006bae:	68fb      	ldr	r3, [r7, #12]
 8006bb0:	3307      	adds	r3, #7
 8006bb2:	60fb      	str	r3, [r7, #12]
 8006bb4:	68fb      	ldr	r3, [r7, #12]
 8006bb6:	f023 0307 	bic.w	r3, r3, #7
 8006bba:	60fb      	str	r3, [r7, #12]
 8006bbc:	68ba      	ldr	r2, [r7, #8]
 8006bbe:	68fb      	ldr	r3, [r7, #12]
 8006bc0:	1ad3      	subs	r3, r2, r3
 8006bc2:	4a1f      	ldr	r2, [pc, #124]	; (8006c40 <prvHeapInit+0xac>)
 8006bc4:	4413      	add	r3, r2
 8006bc6:	60bb      	str	r3, [r7, #8]
 8006bc8:	68fb      	ldr	r3, [r7, #12]
 8006bca:	607b      	str	r3, [r7, #4]
 8006bcc:	4a1d      	ldr	r2, [pc, #116]	; (8006c44 <prvHeapInit+0xb0>)
 8006bce:	687b      	ldr	r3, [r7, #4]
 8006bd0:	6013      	str	r3, [r2, #0]
 8006bd2:	4b1c      	ldr	r3, [pc, #112]	; (8006c44 <prvHeapInit+0xb0>)
 8006bd4:	2200      	movs	r2, #0
 8006bd6:	605a      	str	r2, [r3, #4]
 8006bd8:	687b      	ldr	r3, [r7, #4]
 8006bda:	68ba      	ldr	r2, [r7, #8]
 8006bdc:	4413      	add	r3, r2
 8006bde:	60fb      	str	r3, [r7, #12]
 8006be0:	2208      	movs	r2, #8
 8006be2:	68fb      	ldr	r3, [r7, #12]
 8006be4:	1a9b      	subs	r3, r3, r2
 8006be6:	60fb      	str	r3, [r7, #12]
 8006be8:	68fb      	ldr	r3, [r7, #12]
 8006bea:	f023 0307 	bic.w	r3, r3, #7
 8006bee:	60fb      	str	r3, [r7, #12]
 8006bf0:	68fb      	ldr	r3, [r7, #12]
 8006bf2:	4a15      	ldr	r2, [pc, #84]	; (8006c48 <prvHeapInit+0xb4>)
 8006bf4:	6013      	str	r3, [r2, #0]
 8006bf6:	4b14      	ldr	r3, [pc, #80]	; (8006c48 <prvHeapInit+0xb4>)
 8006bf8:	681b      	ldr	r3, [r3, #0]
 8006bfa:	2200      	movs	r2, #0
 8006bfc:	605a      	str	r2, [r3, #4]
 8006bfe:	4b12      	ldr	r3, [pc, #72]	; (8006c48 <prvHeapInit+0xb4>)
 8006c00:	681b      	ldr	r3, [r3, #0]
 8006c02:	2200      	movs	r2, #0
 8006c04:	601a      	str	r2, [r3, #0]
 8006c06:	687b      	ldr	r3, [r7, #4]
 8006c08:	603b      	str	r3, [r7, #0]
 8006c0a:	683b      	ldr	r3, [r7, #0]
 8006c0c:	68fa      	ldr	r2, [r7, #12]
 8006c0e:	1ad2      	subs	r2, r2, r3
 8006c10:	683b      	ldr	r3, [r7, #0]
 8006c12:	605a      	str	r2, [r3, #4]
 8006c14:	4b0c      	ldr	r3, [pc, #48]	; (8006c48 <prvHeapInit+0xb4>)
 8006c16:	681a      	ldr	r2, [r3, #0]
 8006c18:	683b      	ldr	r3, [r7, #0]
 8006c1a:	601a      	str	r2, [r3, #0]
 8006c1c:	683b      	ldr	r3, [r7, #0]
 8006c1e:	685b      	ldr	r3, [r3, #4]
 8006c20:	4a0a      	ldr	r2, [pc, #40]	; (8006c4c <prvHeapInit+0xb8>)
 8006c22:	6013      	str	r3, [r2, #0]
 8006c24:	683b      	ldr	r3, [r7, #0]
 8006c26:	685b      	ldr	r3, [r3, #4]
 8006c28:	4a09      	ldr	r2, [pc, #36]	; (8006c50 <prvHeapInit+0xbc>)
 8006c2a:	6013      	str	r3, [r2, #0]
 8006c2c:	4b09      	ldr	r3, [pc, #36]	; (8006c54 <prvHeapInit+0xc0>)
 8006c2e:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8006c32:	601a      	str	r2, [r3, #0]
 8006c34:	bf00      	nop
 8006c36:	3714      	adds	r7, #20
 8006c38:	46bd      	mov	sp, r7
 8006c3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c3e:	4770      	bx	lr
 8006c40:	20000f18 	.word	0x20000f18
 8006c44:	20001b18 	.word	0x20001b18
 8006c48:	20001b20 	.word	0x20001b20
 8006c4c:	20001b28 	.word	0x20001b28
 8006c50:	20001b24 	.word	0x20001b24
 8006c54:	20001b2c 	.word	0x20001b2c

08006c58 <prvInsertBlockIntoFreeList>:
 8006c58:	b480      	push	{r7}
 8006c5a:	b085      	sub	sp, #20
 8006c5c:	af00      	add	r7, sp, #0
 8006c5e:	6078      	str	r0, [r7, #4]
 8006c60:	4b28      	ldr	r3, [pc, #160]	; (8006d04 <prvInsertBlockIntoFreeList+0xac>)
 8006c62:	60fb      	str	r3, [r7, #12]
 8006c64:	e002      	b.n	8006c6c <prvInsertBlockIntoFreeList+0x14>
 8006c66:	68fb      	ldr	r3, [r7, #12]
 8006c68:	681b      	ldr	r3, [r3, #0]
 8006c6a:	60fb      	str	r3, [r7, #12]
 8006c6c:	68fb      	ldr	r3, [r7, #12]
 8006c6e:	681b      	ldr	r3, [r3, #0]
 8006c70:	687a      	ldr	r2, [r7, #4]
 8006c72:	429a      	cmp	r2, r3
 8006c74:	d8f7      	bhi.n	8006c66 <prvInsertBlockIntoFreeList+0xe>
 8006c76:	68fb      	ldr	r3, [r7, #12]
 8006c78:	60bb      	str	r3, [r7, #8]
 8006c7a:	68fb      	ldr	r3, [r7, #12]
 8006c7c:	685b      	ldr	r3, [r3, #4]
 8006c7e:	68ba      	ldr	r2, [r7, #8]
 8006c80:	4413      	add	r3, r2
 8006c82:	687a      	ldr	r2, [r7, #4]
 8006c84:	429a      	cmp	r2, r3
 8006c86:	d108      	bne.n	8006c9a <prvInsertBlockIntoFreeList+0x42>
 8006c88:	68fb      	ldr	r3, [r7, #12]
 8006c8a:	685a      	ldr	r2, [r3, #4]
 8006c8c:	687b      	ldr	r3, [r7, #4]
 8006c8e:	685b      	ldr	r3, [r3, #4]
 8006c90:	441a      	add	r2, r3
 8006c92:	68fb      	ldr	r3, [r7, #12]
 8006c94:	605a      	str	r2, [r3, #4]
 8006c96:	68fb      	ldr	r3, [r7, #12]
 8006c98:	607b      	str	r3, [r7, #4]
 8006c9a:	687b      	ldr	r3, [r7, #4]
 8006c9c:	60bb      	str	r3, [r7, #8]
 8006c9e:	687b      	ldr	r3, [r7, #4]
 8006ca0:	685b      	ldr	r3, [r3, #4]
 8006ca2:	68ba      	ldr	r2, [r7, #8]
 8006ca4:	441a      	add	r2, r3
 8006ca6:	68fb      	ldr	r3, [r7, #12]
 8006ca8:	681b      	ldr	r3, [r3, #0]
 8006caa:	429a      	cmp	r2, r3
 8006cac:	d118      	bne.n	8006ce0 <prvInsertBlockIntoFreeList+0x88>
 8006cae:	68fb      	ldr	r3, [r7, #12]
 8006cb0:	681a      	ldr	r2, [r3, #0]
 8006cb2:	4b15      	ldr	r3, [pc, #84]	; (8006d08 <prvInsertBlockIntoFreeList+0xb0>)
 8006cb4:	681b      	ldr	r3, [r3, #0]
 8006cb6:	429a      	cmp	r2, r3
 8006cb8:	d00d      	beq.n	8006cd6 <prvInsertBlockIntoFreeList+0x7e>
 8006cba:	687b      	ldr	r3, [r7, #4]
 8006cbc:	685a      	ldr	r2, [r3, #4]
 8006cbe:	68fb      	ldr	r3, [r7, #12]
 8006cc0:	681b      	ldr	r3, [r3, #0]
 8006cc2:	685b      	ldr	r3, [r3, #4]
 8006cc4:	441a      	add	r2, r3
 8006cc6:	687b      	ldr	r3, [r7, #4]
 8006cc8:	605a      	str	r2, [r3, #4]
 8006cca:	68fb      	ldr	r3, [r7, #12]
 8006ccc:	681b      	ldr	r3, [r3, #0]
 8006cce:	681a      	ldr	r2, [r3, #0]
 8006cd0:	687b      	ldr	r3, [r7, #4]
 8006cd2:	601a      	str	r2, [r3, #0]
 8006cd4:	e008      	b.n	8006ce8 <prvInsertBlockIntoFreeList+0x90>
 8006cd6:	4b0c      	ldr	r3, [pc, #48]	; (8006d08 <prvInsertBlockIntoFreeList+0xb0>)
 8006cd8:	681a      	ldr	r2, [r3, #0]
 8006cda:	687b      	ldr	r3, [r7, #4]
 8006cdc:	601a      	str	r2, [r3, #0]
 8006cde:	e003      	b.n	8006ce8 <prvInsertBlockIntoFreeList+0x90>
 8006ce0:	68fb      	ldr	r3, [r7, #12]
 8006ce2:	681a      	ldr	r2, [r3, #0]
 8006ce4:	687b      	ldr	r3, [r7, #4]
 8006ce6:	601a      	str	r2, [r3, #0]
 8006ce8:	68fa      	ldr	r2, [r7, #12]
 8006cea:	687b      	ldr	r3, [r7, #4]
 8006cec:	429a      	cmp	r2, r3
 8006cee:	d002      	beq.n	8006cf6 <prvInsertBlockIntoFreeList+0x9e>
 8006cf0:	68fb      	ldr	r3, [r7, #12]
 8006cf2:	687a      	ldr	r2, [r7, #4]
 8006cf4:	601a      	str	r2, [r3, #0]
 8006cf6:	bf00      	nop
 8006cf8:	3714      	adds	r7, #20
 8006cfa:	46bd      	mov	sp, r7
 8006cfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d00:	4770      	bx	lr
 8006d02:	bf00      	nop
 8006d04:	20001b18 	.word	0x20001b18
 8006d08:	20001b20 	.word	0x20001b20

08006d0c <__errno>:
 8006d0c:	4b01      	ldr	r3, [pc, #4]	; (8006d14 <__errno+0x8>)
 8006d0e:	6818      	ldr	r0, [r3, #0]
 8006d10:	4770      	bx	lr
 8006d12:	bf00      	nop
 8006d14:	20000028 	.word	0x20000028

08006d18 <__libc_init_array>:
 8006d18:	b570      	push	{r4, r5, r6, lr}
 8006d1a:	4e0d      	ldr	r6, [pc, #52]	; (8006d50 <__libc_init_array+0x38>)
 8006d1c:	4c0d      	ldr	r4, [pc, #52]	; (8006d54 <__libc_init_array+0x3c>)
 8006d1e:	1ba4      	subs	r4, r4, r6
 8006d20:	10a4      	asrs	r4, r4, #2
 8006d22:	2500      	movs	r5, #0
 8006d24:	42a5      	cmp	r5, r4
 8006d26:	d109      	bne.n	8006d3c <__libc_init_array+0x24>
 8006d28:	4e0b      	ldr	r6, [pc, #44]	; (8006d58 <__libc_init_array+0x40>)
 8006d2a:	4c0c      	ldr	r4, [pc, #48]	; (8006d5c <__libc_init_array+0x44>)
 8006d2c:	f002 f85e 	bl	8008dec <_init>
 8006d30:	1ba4      	subs	r4, r4, r6
 8006d32:	10a4      	asrs	r4, r4, #2
 8006d34:	2500      	movs	r5, #0
 8006d36:	42a5      	cmp	r5, r4
 8006d38:	d105      	bne.n	8006d46 <__libc_init_array+0x2e>
 8006d3a:	bd70      	pop	{r4, r5, r6, pc}
 8006d3c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8006d40:	4798      	blx	r3
 8006d42:	3501      	adds	r5, #1
 8006d44:	e7ee      	b.n	8006d24 <__libc_init_array+0xc>
 8006d46:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8006d4a:	4798      	blx	r3
 8006d4c:	3501      	adds	r5, #1
 8006d4e:	e7f2      	b.n	8006d36 <__libc_init_array+0x1e>
 8006d50:	080091d8 	.word	0x080091d8
 8006d54:	080091d8 	.word	0x080091d8
 8006d58:	080091d8 	.word	0x080091d8
 8006d5c:	080091dc 	.word	0x080091dc

08006d60 <memcpy>:
 8006d60:	b510      	push	{r4, lr}
 8006d62:	1e43      	subs	r3, r0, #1
 8006d64:	440a      	add	r2, r1
 8006d66:	4291      	cmp	r1, r2
 8006d68:	d100      	bne.n	8006d6c <memcpy+0xc>
 8006d6a:	bd10      	pop	{r4, pc}
 8006d6c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006d70:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006d74:	e7f7      	b.n	8006d66 <memcpy+0x6>

08006d76 <memset>:
 8006d76:	4402      	add	r2, r0
 8006d78:	4603      	mov	r3, r0
 8006d7a:	4293      	cmp	r3, r2
 8006d7c:	d100      	bne.n	8006d80 <memset+0xa>
 8006d7e:	4770      	bx	lr
 8006d80:	f803 1b01 	strb.w	r1, [r3], #1
 8006d84:	e7f9      	b.n	8006d7a <memset+0x4>

08006d86 <__cvt>:
 8006d86:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006d8a:	ec55 4b10 	vmov	r4, r5, d0
 8006d8e:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8006d90:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8006d94:	2d00      	cmp	r5, #0
 8006d96:	460e      	mov	r6, r1
 8006d98:	4691      	mov	r9, r2
 8006d9a:	4619      	mov	r1, r3
 8006d9c:	bfb8      	it	lt
 8006d9e:	4622      	movlt	r2, r4
 8006da0:	462b      	mov	r3, r5
 8006da2:	f027 0720 	bic.w	r7, r7, #32
 8006da6:	bfbb      	ittet	lt
 8006da8:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8006dac:	461d      	movlt	r5, r3
 8006dae:	2300      	movge	r3, #0
 8006db0:	232d      	movlt	r3, #45	; 0x2d
 8006db2:	bfb8      	it	lt
 8006db4:	4614      	movlt	r4, r2
 8006db6:	2f46      	cmp	r7, #70	; 0x46
 8006db8:	700b      	strb	r3, [r1, #0]
 8006dba:	d004      	beq.n	8006dc6 <__cvt+0x40>
 8006dbc:	2f45      	cmp	r7, #69	; 0x45
 8006dbe:	d100      	bne.n	8006dc2 <__cvt+0x3c>
 8006dc0:	3601      	adds	r6, #1
 8006dc2:	2102      	movs	r1, #2
 8006dc4:	e000      	b.n	8006dc8 <__cvt+0x42>
 8006dc6:	2103      	movs	r1, #3
 8006dc8:	ab03      	add	r3, sp, #12
 8006dca:	9301      	str	r3, [sp, #4]
 8006dcc:	ab02      	add	r3, sp, #8
 8006dce:	9300      	str	r3, [sp, #0]
 8006dd0:	4632      	mov	r2, r6
 8006dd2:	4653      	mov	r3, sl
 8006dd4:	ec45 4b10 	vmov	d0, r4, r5
 8006dd8:	f000 fcde 	bl	8007798 <_dtoa_r>
 8006ddc:	2f47      	cmp	r7, #71	; 0x47
 8006dde:	4680      	mov	r8, r0
 8006de0:	d102      	bne.n	8006de8 <__cvt+0x62>
 8006de2:	f019 0f01 	tst.w	r9, #1
 8006de6:	d026      	beq.n	8006e36 <__cvt+0xb0>
 8006de8:	2f46      	cmp	r7, #70	; 0x46
 8006dea:	eb08 0906 	add.w	r9, r8, r6
 8006dee:	d111      	bne.n	8006e14 <__cvt+0x8e>
 8006df0:	f898 3000 	ldrb.w	r3, [r8]
 8006df4:	2b30      	cmp	r3, #48	; 0x30
 8006df6:	d10a      	bne.n	8006e0e <__cvt+0x88>
 8006df8:	2200      	movs	r2, #0
 8006dfa:	2300      	movs	r3, #0
 8006dfc:	4620      	mov	r0, r4
 8006dfe:	4629      	mov	r1, r5
 8006e00:	f7f9 fe6a 	bl	8000ad8 <__aeabi_dcmpeq>
 8006e04:	b918      	cbnz	r0, 8006e0e <__cvt+0x88>
 8006e06:	f1c6 0601 	rsb	r6, r6, #1
 8006e0a:	f8ca 6000 	str.w	r6, [sl]
 8006e0e:	f8da 3000 	ldr.w	r3, [sl]
 8006e12:	4499      	add	r9, r3
 8006e14:	2200      	movs	r2, #0
 8006e16:	2300      	movs	r3, #0
 8006e18:	4620      	mov	r0, r4
 8006e1a:	4629      	mov	r1, r5
 8006e1c:	f7f9 fe5c 	bl	8000ad8 <__aeabi_dcmpeq>
 8006e20:	b938      	cbnz	r0, 8006e32 <__cvt+0xac>
 8006e22:	2230      	movs	r2, #48	; 0x30
 8006e24:	9b03      	ldr	r3, [sp, #12]
 8006e26:	454b      	cmp	r3, r9
 8006e28:	d205      	bcs.n	8006e36 <__cvt+0xb0>
 8006e2a:	1c59      	adds	r1, r3, #1
 8006e2c:	9103      	str	r1, [sp, #12]
 8006e2e:	701a      	strb	r2, [r3, #0]
 8006e30:	e7f8      	b.n	8006e24 <__cvt+0x9e>
 8006e32:	f8cd 900c 	str.w	r9, [sp, #12]
 8006e36:	9b03      	ldr	r3, [sp, #12]
 8006e38:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8006e3a:	eba3 0308 	sub.w	r3, r3, r8
 8006e3e:	4640      	mov	r0, r8
 8006e40:	6013      	str	r3, [r2, #0]
 8006e42:	b004      	add	sp, #16
 8006e44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08006e48 <__exponent>:
 8006e48:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006e4a:	2900      	cmp	r1, #0
 8006e4c:	4604      	mov	r4, r0
 8006e4e:	bfba      	itte	lt
 8006e50:	4249      	neglt	r1, r1
 8006e52:	232d      	movlt	r3, #45	; 0x2d
 8006e54:	232b      	movge	r3, #43	; 0x2b
 8006e56:	2909      	cmp	r1, #9
 8006e58:	f804 2b02 	strb.w	r2, [r4], #2
 8006e5c:	7043      	strb	r3, [r0, #1]
 8006e5e:	dd20      	ble.n	8006ea2 <__exponent+0x5a>
 8006e60:	f10d 0307 	add.w	r3, sp, #7
 8006e64:	461f      	mov	r7, r3
 8006e66:	260a      	movs	r6, #10
 8006e68:	fb91 f5f6 	sdiv	r5, r1, r6
 8006e6c:	fb06 1115 	mls	r1, r6, r5, r1
 8006e70:	3130      	adds	r1, #48	; 0x30
 8006e72:	2d09      	cmp	r5, #9
 8006e74:	f803 1c01 	strb.w	r1, [r3, #-1]
 8006e78:	f103 32ff 	add.w	r2, r3, #4294967295
 8006e7c:	4629      	mov	r1, r5
 8006e7e:	dc09      	bgt.n	8006e94 <__exponent+0x4c>
 8006e80:	3130      	adds	r1, #48	; 0x30
 8006e82:	3b02      	subs	r3, #2
 8006e84:	f802 1c01 	strb.w	r1, [r2, #-1]
 8006e88:	42bb      	cmp	r3, r7
 8006e8a:	4622      	mov	r2, r4
 8006e8c:	d304      	bcc.n	8006e98 <__exponent+0x50>
 8006e8e:	1a10      	subs	r0, r2, r0
 8006e90:	b003      	add	sp, #12
 8006e92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006e94:	4613      	mov	r3, r2
 8006e96:	e7e7      	b.n	8006e68 <__exponent+0x20>
 8006e98:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006e9c:	f804 2b01 	strb.w	r2, [r4], #1
 8006ea0:	e7f2      	b.n	8006e88 <__exponent+0x40>
 8006ea2:	2330      	movs	r3, #48	; 0x30
 8006ea4:	4419      	add	r1, r3
 8006ea6:	7083      	strb	r3, [r0, #2]
 8006ea8:	1d02      	adds	r2, r0, #4
 8006eaa:	70c1      	strb	r1, [r0, #3]
 8006eac:	e7ef      	b.n	8006e8e <__exponent+0x46>
	...

08006eb0 <_printf_float>:
 8006eb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006eb4:	b08d      	sub	sp, #52	; 0x34
 8006eb6:	460c      	mov	r4, r1
 8006eb8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8006ebc:	4616      	mov	r6, r2
 8006ebe:	461f      	mov	r7, r3
 8006ec0:	4605      	mov	r5, r0
 8006ec2:	f001 fa21 	bl	8008308 <_localeconv_r>
 8006ec6:	6803      	ldr	r3, [r0, #0]
 8006ec8:	9304      	str	r3, [sp, #16]
 8006eca:	4618      	mov	r0, r3
 8006ecc:	f7f9 f988 	bl	80001e0 <strlen>
 8006ed0:	2300      	movs	r3, #0
 8006ed2:	930a      	str	r3, [sp, #40]	; 0x28
 8006ed4:	f8d8 3000 	ldr.w	r3, [r8]
 8006ed8:	9005      	str	r0, [sp, #20]
 8006eda:	3307      	adds	r3, #7
 8006edc:	f023 0307 	bic.w	r3, r3, #7
 8006ee0:	f103 0208 	add.w	r2, r3, #8
 8006ee4:	f894 a018 	ldrb.w	sl, [r4, #24]
 8006ee8:	f8d4 b000 	ldr.w	fp, [r4]
 8006eec:	f8c8 2000 	str.w	r2, [r8]
 8006ef0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ef4:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8006ef8:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 8006efc:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8006f00:	9307      	str	r3, [sp, #28]
 8006f02:	f8cd 8018 	str.w	r8, [sp, #24]
 8006f06:	f04f 32ff 	mov.w	r2, #4294967295
 8006f0a:	4ba7      	ldr	r3, [pc, #668]	; (80071a8 <_printf_float+0x2f8>)
 8006f0c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8006f10:	f7f9 fe14 	bl	8000b3c <__aeabi_dcmpun>
 8006f14:	bb70      	cbnz	r0, 8006f74 <_printf_float+0xc4>
 8006f16:	f04f 32ff 	mov.w	r2, #4294967295
 8006f1a:	4ba3      	ldr	r3, [pc, #652]	; (80071a8 <_printf_float+0x2f8>)
 8006f1c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8006f20:	f7f9 fdee 	bl	8000b00 <__aeabi_dcmple>
 8006f24:	bb30      	cbnz	r0, 8006f74 <_printf_float+0xc4>
 8006f26:	2200      	movs	r2, #0
 8006f28:	2300      	movs	r3, #0
 8006f2a:	4640      	mov	r0, r8
 8006f2c:	4649      	mov	r1, r9
 8006f2e:	f7f9 fddd 	bl	8000aec <__aeabi_dcmplt>
 8006f32:	b110      	cbz	r0, 8006f3a <_printf_float+0x8a>
 8006f34:	232d      	movs	r3, #45	; 0x2d
 8006f36:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006f3a:	4a9c      	ldr	r2, [pc, #624]	; (80071ac <_printf_float+0x2fc>)
 8006f3c:	4b9c      	ldr	r3, [pc, #624]	; (80071b0 <_printf_float+0x300>)
 8006f3e:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
 8006f42:	bf8c      	ite	hi
 8006f44:	4690      	movhi	r8, r2
 8006f46:	4698      	movls	r8, r3
 8006f48:	2303      	movs	r3, #3
 8006f4a:	f02b 0204 	bic.w	r2, fp, #4
 8006f4e:	6123      	str	r3, [r4, #16]
 8006f50:	6022      	str	r2, [r4, #0]
 8006f52:	f04f 0900 	mov.w	r9, #0
 8006f56:	9700      	str	r7, [sp, #0]
 8006f58:	4633      	mov	r3, r6
 8006f5a:	aa0b      	add	r2, sp, #44	; 0x2c
 8006f5c:	4621      	mov	r1, r4
 8006f5e:	4628      	mov	r0, r5
 8006f60:	f000 f9e6 	bl	8007330 <_printf_common>
 8006f64:	3001      	adds	r0, #1
 8006f66:	f040 808d 	bne.w	8007084 <_printf_float+0x1d4>
 8006f6a:	f04f 30ff 	mov.w	r0, #4294967295
 8006f6e:	b00d      	add	sp, #52	; 0x34
 8006f70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006f74:	4642      	mov	r2, r8
 8006f76:	464b      	mov	r3, r9
 8006f78:	4640      	mov	r0, r8
 8006f7a:	4649      	mov	r1, r9
 8006f7c:	f7f9 fdde 	bl	8000b3c <__aeabi_dcmpun>
 8006f80:	b110      	cbz	r0, 8006f88 <_printf_float+0xd8>
 8006f82:	4a8c      	ldr	r2, [pc, #560]	; (80071b4 <_printf_float+0x304>)
 8006f84:	4b8c      	ldr	r3, [pc, #560]	; (80071b8 <_printf_float+0x308>)
 8006f86:	e7da      	b.n	8006f3e <_printf_float+0x8e>
 8006f88:	6861      	ldr	r1, [r4, #4]
 8006f8a:	1c4b      	adds	r3, r1, #1
 8006f8c:	f44b 6280 	orr.w	r2, fp, #1024	; 0x400
 8006f90:	a80a      	add	r0, sp, #40	; 0x28
 8006f92:	d13e      	bne.n	8007012 <_printf_float+0x162>
 8006f94:	2306      	movs	r3, #6
 8006f96:	6063      	str	r3, [r4, #4]
 8006f98:	2300      	movs	r3, #0
 8006f9a:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8006f9e:	ab09      	add	r3, sp, #36	; 0x24
 8006fa0:	9300      	str	r3, [sp, #0]
 8006fa2:	ec49 8b10 	vmov	d0, r8, r9
 8006fa6:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8006faa:	6022      	str	r2, [r4, #0]
 8006fac:	f8cd a004 	str.w	sl, [sp, #4]
 8006fb0:	6861      	ldr	r1, [r4, #4]
 8006fb2:	4628      	mov	r0, r5
 8006fb4:	f7ff fee7 	bl	8006d86 <__cvt>
 8006fb8:	f00a 03df 	and.w	r3, sl, #223	; 0xdf
 8006fbc:	2b47      	cmp	r3, #71	; 0x47
 8006fbe:	4680      	mov	r8, r0
 8006fc0:	d109      	bne.n	8006fd6 <_printf_float+0x126>
 8006fc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006fc4:	1cd8      	adds	r0, r3, #3
 8006fc6:	db02      	blt.n	8006fce <_printf_float+0x11e>
 8006fc8:	6862      	ldr	r2, [r4, #4]
 8006fca:	4293      	cmp	r3, r2
 8006fcc:	dd47      	ble.n	800705e <_printf_float+0x1ae>
 8006fce:	f1aa 0a02 	sub.w	sl, sl, #2
 8006fd2:	fa5f fa8a 	uxtb.w	sl, sl
 8006fd6:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
 8006fda:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006fdc:	d824      	bhi.n	8007028 <_printf_float+0x178>
 8006fde:	3901      	subs	r1, #1
 8006fe0:	4652      	mov	r2, sl
 8006fe2:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8006fe6:	9109      	str	r1, [sp, #36]	; 0x24
 8006fe8:	f7ff ff2e 	bl	8006e48 <__exponent>
 8006fec:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006fee:	1813      	adds	r3, r2, r0
 8006ff0:	2a01      	cmp	r2, #1
 8006ff2:	4681      	mov	r9, r0
 8006ff4:	6123      	str	r3, [r4, #16]
 8006ff6:	dc02      	bgt.n	8006ffe <_printf_float+0x14e>
 8006ff8:	6822      	ldr	r2, [r4, #0]
 8006ffa:	07d1      	lsls	r1, r2, #31
 8006ffc:	d501      	bpl.n	8007002 <_printf_float+0x152>
 8006ffe:	3301      	adds	r3, #1
 8007000:	6123      	str	r3, [r4, #16]
 8007002:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8007006:	2b00      	cmp	r3, #0
 8007008:	d0a5      	beq.n	8006f56 <_printf_float+0xa6>
 800700a:	232d      	movs	r3, #45	; 0x2d
 800700c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007010:	e7a1      	b.n	8006f56 <_printf_float+0xa6>
 8007012:	f1ba 0f67 	cmp.w	sl, #103	; 0x67
 8007016:	f000 8177 	beq.w	8007308 <_printf_float+0x458>
 800701a:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
 800701e:	d1bb      	bne.n	8006f98 <_printf_float+0xe8>
 8007020:	2900      	cmp	r1, #0
 8007022:	d1b9      	bne.n	8006f98 <_printf_float+0xe8>
 8007024:	2301      	movs	r3, #1
 8007026:	e7b6      	b.n	8006f96 <_printf_float+0xe6>
 8007028:	f1ba 0f66 	cmp.w	sl, #102	; 0x66
 800702c:	d119      	bne.n	8007062 <_printf_float+0x1b2>
 800702e:	2900      	cmp	r1, #0
 8007030:	6863      	ldr	r3, [r4, #4]
 8007032:	dd0c      	ble.n	800704e <_printf_float+0x19e>
 8007034:	6121      	str	r1, [r4, #16]
 8007036:	b913      	cbnz	r3, 800703e <_printf_float+0x18e>
 8007038:	6822      	ldr	r2, [r4, #0]
 800703a:	07d2      	lsls	r2, r2, #31
 800703c:	d502      	bpl.n	8007044 <_printf_float+0x194>
 800703e:	3301      	adds	r3, #1
 8007040:	440b      	add	r3, r1
 8007042:	6123      	str	r3, [r4, #16]
 8007044:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007046:	65a3      	str	r3, [r4, #88]	; 0x58
 8007048:	f04f 0900 	mov.w	r9, #0
 800704c:	e7d9      	b.n	8007002 <_printf_float+0x152>
 800704e:	b913      	cbnz	r3, 8007056 <_printf_float+0x1a6>
 8007050:	6822      	ldr	r2, [r4, #0]
 8007052:	07d0      	lsls	r0, r2, #31
 8007054:	d501      	bpl.n	800705a <_printf_float+0x1aa>
 8007056:	3302      	adds	r3, #2
 8007058:	e7f3      	b.n	8007042 <_printf_float+0x192>
 800705a:	2301      	movs	r3, #1
 800705c:	e7f1      	b.n	8007042 <_printf_float+0x192>
 800705e:	f04f 0a67 	mov.w	sl, #103	; 0x67
 8007062:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8007066:	4293      	cmp	r3, r2
 8007068:	db05      	blt.n	8007076 <_printf_float+0x1c6>
 800706a:	6822      	ldr	r2, [r4, #0]
 800706c:	6123      	str	r3, [r4, #16]
 800706e:	07d1      	lsls	r1, r2, #31
 8007070:	d5e8      	bpl.n	8007044 <_printf_float+0x194>
 8007072:	3301      	adds	r3, #1
 8007074:	e7e5      	b.n	8007042 <_printf_float+0x192>
 8007076:	2b00      	cmp	r3, #0
 8007078:	bfd4      	ite	le
 800707a:	f1c3 0302 	rsble	r3, r3, #2
 800707e:	2301      	movgt	r3, #1
 8007080:	4413      	add	r3, r2
 8007082:	e7de      	b.n	8007042 <_printf_float+0x192>
 8007084:	6823      	ldr	r3, [r4, #0]
 8007086:	055a      	lsls	r2, r3, #21
 8007088:	d407      	bmi.n	800709a <_printf_float+0x1ea>
 800708a:	6923      	ldr	r3, [r4, #16]
 800708c:	4642      	mov	r2, r8
 800708e:	4631      	mov	r1, r6
 8007090:	4628      	mov	r0, r5
 8007092:	47b8      	blx	r7
 8007094:	3001      	adds	r0, #1
 8007096:	d12b      	bne.n	80070f0 <_printf_float+0x240>
 8007098:	e767      	b.n	8006f6a <_printf_float+0xba>
 800709a:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
 800709e:	f240 80dc 	bls.w	800725a <_printf_float+0x3aa>
 80070a2:	2200      	movs	r2, #0
 80070a4:	2300      	movs	r3, #0
 80070a6:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80070aa:	f7f9 fd15 	bl	8000ad8 <__aeabi_dcmpeq>
 80070ae:	2800      	cmp	r0, #0
 80070b0:	d033      	beq.n	800711a <_printf_float+0x26a>
 80070b2:	2301      	movs	r3, #1
 80070b4:	4a41      	ldr	r2, [pc, #260]	; (80071bc <_printf_float+0x30c>)
 80070b6:	4631      	mov	r1, r6
 80070b8:	4628      	mov	r0, r5
 80070ba:	47b8      	blx	r7
 80070bc:	3001      	adds	r0, #1
 80070be:	f43f af54 	beq.w	8006f6a <_printf_float+0xba>
 80070c2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80070c6:	429a      	cmp	r2, r3
 80070c8:	db02      	blt.n	80070d0 <_printf_float+0x220>
 80070ca:	6823      	ldr	r3, [r4, #0]
 80070cc:	07d8      	lsls	r0, r3, #31
 80070ce:	d50f      	bpl.n	80070f0 <_printf_float+0x240>
 80070d0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80070d4:	4631      	mov	r1, r6
 80070d6:	4628      	mov	r0, r5
 80070d8:	47b8      	blx	r7
 80070da:	3001      	adds	r0, #1
 80070dc:	f43f af45 	beq.w	8006f6a <_printf_float+0xba>
 80070e0:	f04f 0800 	mov.w	r8, #0
 80070e4:	f104 091a 	add.w	r9, r4, #26
 80070e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80070ea:	3b01      	subs	r3, #1
 80070ec:	4543      	cmp	r3, r8
 80070ee:	dc09      	bgt.n	8007104 <_printf_float+0x254>
 80070f0:	6823      	ldr	r3, [r4, #0]
 80070f2:	079b      	lsls	r3, r3, #30
 80070f4:	f100 8103 	bmi.w	80072fe <_printf_float+0x44e>
 80070f8:	68e0      	ldr	r0, [r4, #12]
 80070fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80070fc:	4298      	cmp	r0, r3
 80070fe:	bfb8      	it	lt
 8007100:	4618      	movlt	r0, r3
 8007102:	e734      	b.n	8006f6e <_printf_float+0xbe>
 8007104:	2301      	movs	r3, #1
 8007106:	464a      	mov	r2, r9
 8007108:	4631      	mov	r1, r6
 800710a:	4628      	mov	r0, r5
 800710c:	47b8      	blx	r7
 800710e:	3001      	adds	r0, #1
 8007110:	f43f af2b 	beq.w	8006f6a <_printf_float+0xba>
 8007114:	f108 0801 	add.w	r8, r8, #1
 8007118:	e7e6      	b.n	80070e8 <_printf_float+0x238>
 800711a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800711c:	2b00      	cmp	r3, #0
 800711e:	dc2b      	bgt.n	8007178 <_printf_float+0x2c8>
 8007120:	2301      	movs	r3, #1
 8007122:	4a26      	ldr	r2, [pc, #152]	; (80071bc <_printf_float+0x30c>)
 8007124:	4631      	mov	r1, r6
 8007126:	4628      	mov	r0, r5
 8007128:	47b8      	blx	r7
 800712a:	3001      	adds	r0, #1
 800712c:	f43f af1d 	beq.w	8006f6a <_printf_float+0xba>
 8007130:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007132:	b923      	cbnz	r3, 800713e <_printf_float+0x28e>
 8007134:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007136:	b913      	cbnz	r3, 800713e <_printf_float+0x28e>
 8007138:	6823      	ldr	r3, [r4, #0]
 800713a:	07d9      	lsls	r1, r3, #31
 800713c:	d5d8      	bpl.n	80070f0 <_printf_float+0x240>
 800713e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007142:	4631      	mov	r1, r6
 8007144:	4628      	mov	r0, r5
 8007146:	47b8      	blx	r7
 8007148:	3001      	adds	r0, #1
 800714a:	f43f af0e 	beq.w	8006f6a <_printf_float+0xba>
 800714e:	f04f 0900 	mov.w	r9, #0
 8007152:	f104 0a1a 	add.w	sl, r4, #26
 8007156:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007158:	425b      	negs	r3, r3
 800715a:	454b      	cmp	r3, r9
 800715c:	dc01      	bgt.n	8007162 <_printf_float+0x2b2>
 800715e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007160:	e794      	b.n	800708c <_printf_float+0x1dc>
 8007162:	2301      	movs	r3, #1
 8007164:	4652      	mov	r2, sl
 8007166:	4631      	mov	r1, r6
 8007168:	4628      	mov	r0, r5
 800716a:	47b8      	blx	r7
 800716c:	3001      	adds	r0, #1
 800716e:	f43f aefc 	beq.w	8006f6a <_printf_float+0xba>
 8007172:	f109 0901 	add.w	r9, r9, #1
 8007176:	e7ee      	b.n	8007156 <_printf_float+0x2a6>
 8007178:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800717a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800717c:	429a      	cmp	r2, r3
 800717e:	bfa8      	it	ge
 8007180:	461a      	movge	r2, r3
 8007182:	2a00      	cmp	r2, #0
 8007184:	4691      	mov	r9, r2
 8007186:	dd07      	ble.n	8007198 <_printf_float+0x2e8>
 8007188:	4613      	mov	r3, r2
 800718a:	4631      	mov	r1, r6
 800718c:	4642      	mov	r2, r8
 800718e:	4628      	mov	r0, r5
 8007190:	47b8      	blx	r7
 8007192:	3001      	adds	r0, #1
 8007194:	f43f aee9 	beq.w	8006f6a <_printf_float+0xba>
 8007198:	f104 031a 	add.w	r3, r4, #26
 800719c:	f04f 0b00 	mov.w	fp, #0
 80071a0:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80071a4:	9306      	str	r3, [sp, #24]
 80071a6:	e015      	b.n	80071d4 <_printf_float+0x324>
 80071a8:	7fefffff 	.word	0x7fefffff
 80071ac:	08008f80 	.word	0x08008f80
 80071b0:	08008f7c 	.word	0x08008f7c
 80071b4:	08008f88 	.word	0x08008f88
 80071b8:	08008f84 	.word	0x08008f84
 80071bc:	08008f8c 	.word	0x08008f8c
 80071c0:	2301      	movs	r3, #1
 80071c2:	9a06      	ldr	r2, [sp, #24]
 80071c4:	4631      	mov	r1, r6
 80071c6:	4628      	mov	r0, r5
 80071c8:	47b8      	blx	r7
 80071ca:	3001      	adds	r0, #1
 80071cc:	f43f aecd 	beq.w	8006f6a <_printf_float+0xba>
 80071d0:	f10b 0b01 	add.w	fp, fp, #1
 80071d4:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 80071d8:	ebaa 0309 	sub.w	r3, sl, r9
 80071dc:	455b      	cmp	r3, fp
 80071de:	dcef      	bgt.n	80071c0 <_printf_float+0x310>
 80071e0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80071e4:	429a      	cmp	r2, r3
 80071e6:	44d0      	add	r8, sl
 80071e8:	db15      	blt.n	8007216 <_printf_float+0x366>
 80071ea:	6823      	ldr	r3, [r4, #0]
 80071ec:	07da      	lsls	r2, r3, #31
 80071ee:	d412      	bmi.n	8007216 <_printf_float+0x366>
 80071f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80071f2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80071f4:	eba3 020a 	sub.w	r2, r3, sl
 80071f8:	eba3 0a01 	sub.w	sl, r3, r1
 80071fc:	4592      	cmp	sl, r2
 80071fe:	bfa8      	it	ge
 8007200:	4692      	movge	sl, r2
 8007202:	f1ba 0f00 	cmp.w	sl, #0
 8007206:	dc0e      	bgt.n	8007226 <_printf_float+0x376>
 8007208:	f04f 0800 	mov.w	r8, #0
 800720c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8007210:	f104 091a 	add.w	r9, r4, #26
 8007214:	e019      	b.n	800724a <_printf_float+0x39a>
 8007216:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800721a:	4631      	mov	r1, r6
 800721c:	4628      	mov	r0, r5
 800721e:	47b8      	blx	r7
 8007220:	3001      	adds	r0, #1
 8007222:	d1e5      	bne.n	80071f0 <_printf_float+0x340>
 8007224:	e6a1      	b.n	8006f6a <_printf_float+0xba>
 8007226:	4653      	mov	r3, sl
 8007228:	4642      	mov	r2, r8
 800722a:	4631      	mov	r1, r6
 800722c:	4628      	mov	r0, r5
 800722e:	47b8      	blx	r7
 8007230:	3001      	adds	r0, #1
 8007232:	d1e9      	bne.n	8007208 <_printf_float+0x358>
 8007234:	e699      	b.n	8006f6a <_printf_float+0xba>
 8007236:	2301      	movs	r3, #1
 8007238:	464a      	mov	r2, r9
 800723a:	4631      	mov	r1, r6
 800723c:	4628      	mov	r0, r5
 800723e:	47b8      	blx	r7
 8007240:	3001      	adds	r0, #1
 8007242:	f43f ae92 	beq.w	8006f6a <_printf_float+0xba>
 8007246:	f108 0801 	add.w	r8, r8, #1
 800724a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800724e:	1a9b      	subs	r3, r3, r2
 8007250:	eba3 030a 	sub.w	r3, r3, sl
 8007254:	4543      	cmp	r3, r8
 8007256:	dcee      	bgt.n	8007236 <_printf_float+0x386>
 8007258:	e74a      	b.n	80070f0 <_printf_float+0x240>
 800725a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800725c:	2a01      	cmp	r2, #1
 800725e:	dc01      	bgt.n	8007264 <_printf_float+0x3b4>
 8007260:	07db      	lsls	r3, r3, #31
 8007262:	d53a      	bpl.n	80072da <_printf_float+0x42a>
 8007264:	2301      	movs	r3, #1
 8007266:	4642      	mov	r2, r8
 8007268:	4631      	mov	r1, r6
 800726a:	4628      	mov	r0, r5
 800726c:	47b8      	blx	r7
 800726e:	3001      	adds	r0, #1
 8007270:	f43f ae7b 	beq.w	8006f6a <_printf_float+0xba>
 8007274:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8007278:	4631      	mov	r1, r6
 800727a:	4628      	mov	r0, r5
 800727c:	47b8      	blx	r7
 800727e:	3001      	adds	r0, #1
 8007280:	f108 0801 	add.w	r8, r8, #1
 8007284:	f43f ae71 	beq.w	8006f6a <_printf_float+0xba>
 8007288:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800728a:	2200      	movs	r2, #0
 800728c:	f103 3aff 	add.w	sl, r3, #4294967295
 8007290:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8007294:	2300      	movs	r3, #0
 8007296:	f7f9 fc1f 	bl	8000ad8 <__aeabi_dcmpeq>
 800729a:	b9c8      	cbnz	r0, 80072d0 <_printf_float+0x420>
 800729c:	4653      	mov	r3, sl
 800729e:	4642      	mov	r2, r8
 80072a0:	4631      	mov	r1, r6
 80072a2:	4628      	mov	r0, r5
 80072a4:	47b8      	blx	r7
 80072a6:	3001      	adds	r0, #1
 80072a8:	d10e      	bne.n	80072c8 <_printf_float+0x418>
 80072aa:	e65e      	b.n	8006f6a <_printf_float+0xba>
 80072ac:	2301      	movs	r3, #1
 80072ae:	4652      	mov	r2, sl
 80072b0:	4631      	mov	r1, r6
 80072b2:	4628      	mov	r0, r5
 80072b4:	47b8      	blx	r7
 80072b6:	3001      	adds	r0, #1
 80072b8:	f43f ae57 	beq.w	8006f6a <_printf_float+0xba>
 80072bc:	f108 0801 	add.w	r8, r8, #1
 80072c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80072c2:	3b01      	subs	r3, #1
 80072c4:	4543      	cmp	r3, r8
 80072c6:	dcf1      	bgt.n	80072ac <_printf_float+0x3fc>
 80072c8:	464b      	mov	r3, r9
 80072ca:	f104 0250 	add.w	r2, r4, #80	; 0x50
 80072ce:	e6de      	b.n	800708e <_printf_float+0x1de>
 80072d0:	f04f 0800 	mov.w	r8, #0
 80072d4:	f104 0a1a 	add.w	sl, r4, #26
 80072d8:	e7f2      	b.n	80072c0 <_printf_float+0x410>
 80072da:	2301      	movs	r3, #1
 80072dc:	e7df      	b.n	800729e <_printf_float+0x3ee>
 80072de:	2301      	movs	r3, #1
 80072e0:	464a      	mov	r2, r9
 80072e2:	4631      	mov	r1, r6
 80072e4:	4628      	mov	r0, r5
 80072e6:	47b8      	blx	r7
 80072e8:	3001      	adds	r0, #1
 80072ea:	f43f ae3e 	beq.w	8006f6a <_printf_float+0xba>
 80072ee:	f108 0801 	add.w	r8, r8, #1
 80072f2:	68e3      	ldr	r3, [r4, #12]
 80072f4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80072f6:	1a9b      	subs	r3, r3, r2
 80072f8:	4543      	cmp	r3, r8
 80072fa:	dcf0      	bgt.n	80072de <_printf_float+0x42e>
 80072fc:	e6fc      	b.n	80070f8 <_printf_float+0x248>
 80072fe:	f04f 0800 	mov.w	r8, #0
 8007302:	f104 0919 	add.w	r9, r4, #25
 8007306:	e7f4      	b.n	80072f2 <_printf_float+0x442>
 8007308:	2900      	cmp	r1, #0
 800730a:	f43f ae8b 	beq.w	8007024 <_printf_float+0x174>
 800730e:	2300      	movs	r3, #0
 8007310:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8007314:	ab09      	add	r3, sp, #36	; 0x24
 8007316:	9300      	str	r3, [sp, #0]
 8007318:	ec49 8b10 	vmov	d0, r8, r9
 800731c:	6022      	str	r2, [r4, #0]
 800731e:	f8cd a004 	str.w	sl, [sp, #4]
 8007322:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8007326:	4628      	mov	r0, r5
 8007328:	f7ff fd2d 	bl	8006d86 <__cvt>
 800732c:	4680      	mov	r8, r0
 800732e:	e648      	b.n	8006fc2 <_printf_float+0x112>

08007330 <_printf_common>:
 8007330:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007334:	4691      	mov	r9, r2
 8007336:	461f      	mov	r7, r3
 8007338:	688a      	ldr	r2, [r1, #8]
 800733a:	690b      	ldr	r3, [r1, #16]
 800733c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8007340:	4293      	cmp	r3, r2
 8007342:	bfb8      	it	lt
 8007344:	4613      	movlt	r3, r2
 8007346:	f8c9 3000 	str.w	r3, [r9]
 800734a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800734e:	4606      	mov	r6, r0
 8007350:	460c      	mov	r4, r1
 8007352:	b112      	cbz	r2, 800735a <_printf_common+0x2a>
 8007354:	3301      	adds	r3, #1
 8007356:	f8c9 3000 	str.w	r3, [r9]
 800735a:	6823      	ldr	r3, [r4, #0]
 800735c:	0699      	lsls	r1, r3, #26
 800735e:	bf42      	ittt	mi
 8007360:	f8d9 3000 	ldrmi.w	r3, [r9]
 8007364:	3302      	addmi	r3, #2
 8007366:	f8c9 3000 	strmi.w	r3, [r9]
 800736a:	6825      	ldr	r5, [r4, #0]
 800736c:	f015 0506 	ands.w	r5, r5, #6
 8007370:	d107      	bne.n	8007382 <_printf_common+0x52>
 8007372:	f104 0a19 	add.w	sl, r4, #25
 8007376:	68e3      	ldr	r3, [r4, #12]
 8007378:	f8d9 2000 	ldr.w	r2, [r9]
 800737c:	1a9b      	subs	r3, r3, r2
 800737e:	42ab      	cmp	r3, r5
 8007380:	dc28      	bgt.n	80073d4 <_printf_common+0xa4>
 8007382:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8007386:	6822      	ldr	r2, [r4, #0]
 8007388:	3300      	adds	r3, #0
 800738a:	bf18      	it	ne
 800738c:	2301      	movne	r3, #1
 800738e:	0692      	lsls	r2, r2, #26
 8007390:	d42d      	bmi.n	80073ee <_printf_common+0xbe>
 8007392:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8007396:	4639      	mov	r1, r7
 8007398:	4630      	mov	r0, r6
 800739a:	47c0      	blx	r8
 800739c:	3001      	adds	r0, #1
 800739e:	d020      	beq.n	80073e2 <_printf_common+0xb2>
 80073a0:	6823      	ldr	r3, [r4, #0]
 80073a2:	68e5      	ldr	r5, [r4, #12]
 80073a4:	f8d9 2000 	ldr.w	r2, [r9]
 80073a8:	f003 0306 	and.w	r3, r3, #6
 80073ac:	2b04      	cmp	r3, #4
 80073ae:	bf08      	it	eq
 80073b0:	1aad      	subeq	r5, r5, r2
 80073b2:	68a3      	ldr	r3, [r4, #8]
 80073b4:	6922      	ldr	r2, [r4, #16]
 80073b6:	bf0c      	ite	eq
 80073b8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80073bc:	2500      	movne	r5, #0
 80073be:	4293      	cmp	r3, r2
 80073c0:	bfc4      	itt	gt
 80073c2:	1a9b      	subgt	r3, r3, r2
 80073c4:	18ed      	addgt	r5, r5, r3
 80073c6:	f04f 0900 	mov.w	r9, #0
 80073ca:	341a      	adds	r4, #26
 80073cc:	454d      	cmp	r5, r9
 80073ce:	d11a      	bne.n	8007406 <_printf_common+0xd6>
 80073d0:	2000      	movs	r0, #0
 80073d2:	e008      	b.n	80073e6 <_printf_common+0xb6>
 80073d4:	2301      	movs	r3, #1
 80073d6:	4652      	mov	r2, sl
 80073d8:	4639      	mov	r1, r7
 80073da:	4630      	mov	r0, r6
 80073dc:	47c0      	blx	r8
 80073de:	3001      	adds	r0, #1
 80073e0:	d103      	bne.n	80073ea <_printf_common+0xba>
 80073e2:	f04f 30ff 	mov.w	r0, #4294967295
 80073e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80073ea:	3501      	adds	r5, #1
 80073ec:	e7c3      	b.n	8007376 <_printf_common+0x46>
 80073ee:	18e1      	adds	r1, r4, r3
 80073f0:	1c5a      	adds	r2, r3, #1
 80073f2:	2030      	movs	r0, #48	; 0x30
 80073f4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80073f8:	4422      	add	r2, r4
 80073fa:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80073fe:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8007402:	3302      	adds	r3, #2
 8007404:	e7c5      	b.n	8007392 <_printf_common+0x62>
 8007406:	2301      	movs	r3, #1
 8007408:	4622      	mov	r2, r4
 800740a:	4639      	mov	r1, r7
 800740c:	4630      	mov	r0, r6
 800740e:	47c0      	blx	r8
 8007410:	3001      	adds	r0, #1
 8007412:	d0e6      	beq.n	80073e2 <_printf_common+0xb2>
 8007414:	f109 0901 	add.w	r9, r9, #1
 8007418:	e7d8      	b.n	80073cc <_printf_common+0x9c>
	...

0800741c <_printf_i>:
 800741c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007420:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8007424:	460c      	mov	r4, r1
 8007426:	7e09      	ldrb	r1, [r1, #24]
 8007428:	b085      	sub	sp, #20
 800742a:	296e      	cmp	r1, #110	; 0x6e
 800742c:	4617      	mov	r7, r2
 800742e:	4606      	mov	r6, r0
 8007430:	4698      	mov	r8, r3
 8007432:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007434:	f000 80b3 	beq.w	800759e <_printf_i+0x182>
 8007438:	d822      	bhi.n	8007480 <_printf_i+0x64>
 800743a:	2963      	cmp	r1, #99	; 0x63
 800743c:	d036      	beq.n	80074ac <_printf_i+0x90>
 800743e:	d80a      	bhi.n	8007456 <_printf_i+0x3a>
 8007440:	2900      	cmp	r1, #0
 8007442:	f000 80b9 	beq.w	80075b8 <_printf_i+0x19c>
 8007446:	2958      	cmp	r1, #88	; 0x58
 8007448:	f000 8083 	beq.w	8007552 <_printf_i+0x136>
 800744c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8007450:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8007454:	e032      	b.n	80074bc <_printf_i+0xa0>
 8007456:	2964      	cmp	r1, #100	; 0x64
 8007458:	d001      	beq.n	800745e <_printf_i+0x42>
 800745a:	2969      	cmp	r1, #105	; 0x69
 800745c:	d1f6      	bne.n	800744c <_printf_i+0x30>
 800745e:	6820      	ldr	r0, [r4, #0]
 8007460:	6813      	ldr	r3, [r2, #0]
 8007462:	0605      	lsls	r5, r0, #24
 8007464:	f103 0104 	add.w	r1, r3, #4
 8007468:	d52a      	bpl.n	80074c0 <_printf_i+0xa4>
 800746a:	681b      	ldr	r3, [r3, #0]
 800746c:	6011      	str	r1, [r2, #0]
 800746e:	2b00      	cmp	r3, #0
 8007470:	da03      	bge.n	800747a <_printf_i+0x5e>
 8007472:	222d      	movs	r2, #45	; 0x2d
 8007474:	425b      	negs	r3, r3
 8007476:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 800747a:	486f      	ldr	r0, [pc, #444]	; (8007638 <_printf_i+0x21c>)
 800747c:	220a      	movs	r2, #10
 800747e:	e039      	b.n	80074f4 <_printf_i+0xd8>
 8007480:	2973      	cmp	r1, #115	; 0x73
 8007482:	f000 809d 	beq.w	80075c0 <_printf_i+0x1a4>
 8007486:	d808      	bhi.n	800749a <_printf_i+0x7e>
 8007488:	296f      	cmp	r1, #111	; 0x6f
 800748a:	d020      	beq.n	80074ce <_printf_i+0xb2>
 800748c:	2970      	cmp	r1, #112	; 0x70
 800748e:	d1dd      	bne.n	800744c <_printf_i+0x30>
 8007490:	6823      	ldr	r3, [r4, #0]
 8007492:	f043 0320 	orr.w	r3, r3, #32
 8007496:	6023      	str	r3, [r4, #0]
 8007498:	e003      	b.n	80074a2 <_printf_i+0x86>
 800749a:	2975      	cmp	r1, #117	; 0x75
 800749c:	d017      	beq.n	80074ce <_printf_i+0xb2>
 800749e:	2978      	cmp	r1, #120	; 0x78
 80074a0:	d1d4      	bne.n	800744c <_printf_i+0x30>
 80074a2:	2378      	movs	r3, #120	; 0x78
 80074a4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80074a8:	4864      	ldr	r0, [pc, #400]	; (800763c <_printf_i+0x220>)
 80074aa:	e055      	b.n	8007558 <_printf_i+0x13c>
 80074ac:	6813      	ldr	r3, [r2, #0]
 80074ae:	1d19      	adds	r1, r3, #4
 80074b0:	681b      	ldr	r3, [r3, #0]
 80074b2:	6011      	str	r1, [r2, #0]
 80074b4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80074b8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80074bc:	2301      	movs	r3, #1
 80074be:	e08c      	b.n	80075da <_printf_i+0x1be>
 80074c0:	681b      	ldr	r3, [r3, #0]
 80074c2:	6011      	str	r1, [r2, #0]
 80074c4:	f010 0f40 	tst.w	r0, #64	; 0x40
 80074c8:	bf18      	it	ne
 80074ca:	b21b      	sxthne	r3, r3
 80074cc:	e7cf      	b.n	800746e <_printf_i+0x52>
 80074ce:	6813      	ldr	r3, [r2, #0]
 80074d0:	6825      	ldr	r5, [r4, #0]
 80074d2:	1d18      	adds	r0, r3, #4
 80074d4:	6010      	str	r0, [r2, #0]
 80074d6:	0628      	lsls	r0, r5, #24
 80074d8:	d501      	bpl.n	80074de <_printf_i+0xc2>
 80074da:	681b      	ldr	r3, [r3, #0]
 80074dc:	e002      	b.n	80074e4 <_printf_i+0xc8>
 80074de:	0668      	lsls	r0, r5, #25
 80074e0:	d5fb      	bpl.n	80074da <_printf_i+0xbe>
 80074e2:	881b      	ldrh	r3, [r3, #0]
 80074e4:	4854      	ldr	r0, [pc, #336]	; (8007638 <_printf_i+0x21c>)
 80074e6:	296f      	cmp	r1, #111	; 0x6f
 80074e8:	bf14      	ite	ne
 80074ea:	220a      	movne	r2, #10
 80074ec:	2208      	moveq	r2, #8
 80074ee:	2100      	movs	r1, #0
 80074f0:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80074f4:	6865      	ldr	r5, [r4, #4]
 80074f6:	60a5      	str	r5, [r4, #8]
 80074f8:	2d00      	cmp	r5, #0
 80074fa:	f2c0 8095 	blt.w	8007628 <_printf_i+0x20c>
 80074fe:	6821      	ldr	r1, [r4, #0]
 8007500:	f021 0104 	bic.w	r1, r1, #4
 8007504:	6021      	str	r1, [r4, #0]
 8007506:	2b00      	cmp	r3, #0
 8007508:	d13d      	bne.n	8007586 <_printf_i+0x16a>
 800750a:	2d00      	cmp	r5, #0
 800750c:	f040 808e 	bne.w	800762c <_printf_i+0x210>
 8007510:	4665      	mov	r5, ip
 8007512:	2a08      	cmp	r2, #8
 8007514:	d10b      	bne.n	800752e <_printf_i+0x112>
 8007516:	6823      	ldr	r3, [r4, #0]
 8007518:	07db      	lsls	r3, r3, #31
 800751a:	d508      	bpl.n	800752e <_printf_i+0x112>
 800751c:	6923      	ldr	r3, [r4, #16]
 800751e:	6862      	ldr	r2, [r4, #4]
 8007520:	429a      	cmp	r2, r3
 8007522:	bfde      	ittt	le
 8007524:	2330      	movle	r3, #48	; 0x30
 8007526:	f805 3c01 	strble.w	r3, [r5, #-1]
 800752a:	f105 35ff 	addle.w	r5, r5, #4294967295
 800752e:	ebac 0305 	sub.w	r3, ip, r5
 8007532:	6123      	str	r3, [r4, #16]
 8007534:	f8cd 8000 	str.w	r8, [sp]
 8007538:	463b      	mov	r3, r7
 800753a:	aa03      	add	r2, sp, #12
 800753c:	4621      	mov	r1, r4
 800753e:	4630      	mov	r0, r6
 8007540:	f7ff fef6 	bl	8007330 <_printf_common>
 8007544:	3001      	adds	r0, #1
 8007546:	d14d      	bne.n	80075e4 <_printf_i+0x1c8>
 8007548:	f04f 30ff 	mov.w	r0, #4294967295
 800754c:	b005      	add	sp, #20
 800754e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007552:	4839      	ldr	r0, [pc, #228]	; (8007638 <_printf_i+0x21c>)
 8007554:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8007558:	6813      	ldr	r3, [r2, #0]
 800755a:	6821      	ldr	r1, [r4, #0]
 800755c:	1d1d      	adds	r5, r3, #4
 800755e:	681b      	ldr	r3, [r3, #0]
 8007560:	6015      	str	r5, [r2, #0]
 8007562:	060a      	lsls	r2, r1, #24
 8007564:	d50b      	bpl.n	800757e <_printf_i+0x162>
 8007566:	07ca      	lsls	r2, r1, #31
 8007568:	bf44      	itt	mi
 800756a:	f041 0120 	orrmi.w	r1, r1, #32
 800756e:	6021      	strmi	r1, [r4, #0]
 8007570:	b91b      	cbnz	r3, 800757a <_printf_i+0x15e>
 8007572:	6822      	ldr	r2, [r4, #0]
 8007574:	f022 0220 	bic.w	r2, r2, #32
 8007578:	6022      	str	r2, [r4, #0]
 800757a:	2210      	movs	r2, #16
 800757c:	e7b7      	b.n	80074ee <_printf_i+0xd2>
 800757e:	064d      	lsls	r5, r1, #25
 8007580:	bf48      	it	mi
 8007582:	b29b      	uxthmi	r3, r3
 8007584:	e7ef      	b.n	8007566 <_printf_i+0x14a>
 8007586:	4665      	mov	r5, ip
 8007588:	fbb3 f1f2 	udiv	r1, r3, r2
 800758c:	fb02 3311 	mls	r3, r2, r1, r3
 8007590:	5cc3      	ldrb	r3, [r0, r3]
 8007592:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8007596:	460b      	mov	r3, r1
 8007598:	2900      	cmp	r1, #0
 800759a:	d1f5      	bne.n	8007588 <_printf_i+0x16c>
 800759c:	e7b9      	b.n	8007512 <_printf_i+0xf6>
 800759e:	6813      	ldr	r3, [r2, #0]
 80075a0:	6825      	ldr	r5, [r4, #0]
 80075a2:	6961      	ldr	r1, [r4, #20]
 80075a4:	1d18      	adds	r0, r3, #4
 80075a6:	6010      	str	r0, [r2, #0]
 80075a8:	0628      	lsls	r0, r5, #24
 80075aa:	681b      	ldr	r3, [r3, #0]
 80075ac:	d501      	bpl.n	80075b2 <_printf_i+0x196>
 80075ae:	6019      	str	r1, [r3, #0]
 80075b0:	e002      	b.n	80075b8 <_printf_i+0x19c>
 80075b2:	066a      	lsls	r2, r5, #25
 80075b4:	d5fb      	bpl.n	80075ae <_printf_i+0x192>
 80075b6:	8019      	strh	r1, [r3, #0]
 80075b8:	2300      	movs	r3, #0
 80075ba:	6123      	str	r3, [r4, #16]
 80075bc:	4665      	mov	r5, ip
 80075be:	e7b9      	b.n	8007534 <_printf_i+0x118>
 80075c0:	6813      	ldr	r3, [r2, #0]
 80075c2:	1d19      	adds	r1, r3, #4
 80075c4:	6011      	str	r1, [r2, #0]
 80075c6:	681d      	ldr	r5, [r3, #0]
 80075c8:	6862      	ldr	r2, [r4, #4]
 80075ca:	2100      	movs	r1, #0
 80075cc:	4628      	mov	r0, r5
 80075ce:	f7f8 fe0f 	bl	80001f0 <memchr>
 80075d2:	b108      	cbz	r0, 80075d8 <_printf_i+0x1bc>
 80075d4:	1b40      	subs	r0, r0, r5
 80075d6:	6060      	str	r0, [r4, #4]
 80075d8:	6863      	ldr	r3, [r4, #4]
 80075da:	6123      	str	r3, [r4, #16]
 80075dc:	2300      	movs	r3, #0
 80075de:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80075e2:	e7a7      	b.n	8007534 <_printf_i+0x118>
 80075e4:	6923      	ldr	r3, [r4, #16]
 80075e6:	462a      	mov	r2, r5
 80075e8:	4639      	mov	r1, r7
 80075ea:	4630      	mov	r0, r6
 80075ec:	47c0      	blx	r8
 80075ee:	3001      	adds	r0, #1
 80075f0:	d0aa      	beq.n	8007548 <_printf_i+0x12c>
 80075f2:	6823      	ldr	r3, [r4, #0]
 80075f4:	079b      	lsls	r3, r3, #30
 80075f6:	d413      	bmi.n	8007620 <_printf_i+0x204>
 80075f8:	68e0      	ldr	r0, [r4, #12]
 80075fa:	9b03      	ldr	r3, [sp, #12]
 80075fc:	4298      	cmp	r0, r3
 80075fe:	bfb8      	it	lt
 8007600:	4618      	movlt	r0, r3
 8007602:	e7a3      	b.n	800754c <_printf_i+0x130>
 8007604:	2301      	movs	r3, #1
 8007606:	464a      	mov	r2, r9
 8007608:	4639      	mov	r1, r7
 800760a:	4630      	mov	r0, r6
 800760c:	47c0      	blx	r8
 800760e:	3001      	adds	r0, #1
 8007610:	d09a      	beq.n	8007548 <_printf_i+0x12c>
 8007612:	3501      	adds	r5, #1
 8007614:	68e3      	ldr	r3, [r4, #12]
 8007616:	9a03      	ldr	r2, [sp, #12]
 8007618:	1a9b      	subs	r3, r3, r2
 800761a:	42ab      	cmp	r3, r5
 800761c:	dcf2      	bgt.n	8007604 <_printf_i+0x1e8>
 800761e:	e7eb      	b.n	80075f8 <_printf_i+0x1dc>
 8007620:	2500      	movs	r5, #0
 8007622:	f104 0919 	add.w	r9, r4, #25
 8007626:	e7f5      	b.n	8007614 <_printf_i+0x1f8>
 8007628:	2b00      	cmp	r3, #0
 800762a:	d1ac      	bne.n	8007586 <_printf_i+0x16a>
 800762c:	7803      	ldrb	r3, [r0, #0]
 800762e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8007632:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8007636:	e76c      	b.n	8007512 <_printf_i+0xf6>
 8007638:	08008f8e 	.word	0x08008f8e
 800763c:	08008f9f 	.word	0x08008f9f

08007640 <siprintf>:
 8007640:	b40e      	push	{r1, r2, r3}
 8007642:	b500      	push	{lr}
 8007644:	b09c      	sub	sp, #112	; 0x70
 8007646:	ab1d      	add	r3, sp, #116	; 0x74
 8007648:	9002      	str	r0, [sp, #8]
 800764a:	9006      	str	r0, [sp, #24]
 800764c:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8007650:	4809      	ldr	r0, [pc, #36]	; (8007678 <siprintf+0x38>)
 8007652:	9107      	str	r1, [sp, #28]
 8007654:	9104      	str	r1, [sp, #16]
 8007656:	4909      	ldr	r1, [pc, #36]	; (800767c <siprintf+0x3c>)
 8007658:	f853 2b04 	ldr.w	r2, [r3], #4
 800765c:	9105      	str	r1, [sp, #20]
 800765e:	6800      	ldr	r0, [r0, #0]
 8007660:	9301      	str	r3, [sp, #4]
 8007662:	a902      	add	r1, sp, #8
 8007664:	f001 fa52 	bl	8008b0c <_svfiprintf_r>
 8007668:	9b02      	ldr	r3, [sp, #8]
 800766a:	2200      	movs	r2, #0
 800766c:	701a      	strb	r2, [r3, #0]
 800766e:	b01c      	add	sp, #112	; 0x70
 8007670:	f85d eb04 	ldr.w	lr, [sp], #4
 8007674:	b003      	add	sp, #12
 8007676:	4770      	bx	lr
 8007678:	20000028 	.word	0x20000028
 800767c:	ffff0208 	.word	0xffff0208

08007680 <quorem>:
 8007680:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007684:	6903      	ldr	r3, [r0, #16]
 8007686:	690c      	ldr	r4, [r1, #16]
 8007688:	42a3      	cmp	r3, r4
 800768a:	4680      	mov	r8, r0
 800768c:	f2c0 8082 	blt.w	8007794 <quorem+0x114>
 8007690:	3c01      	subs	r4, #1
 8007692:	f101 0714 	add.w	r7, r1, #20
 8007696:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 800769a:	f100 0614 	add.w	r6, r0, #20
 800769e:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 80076a2:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 80076a6:	eb06 030c 	add.w	r3, r6, ip
 80076aa:	3501      	adds	r5, #1
 80076ac:	eb07 090c 	add.w	r9, r7, ip
 80076b0:	9301      	str	r3, [sp, #4]
 80076b2:	fbb0 f5f5 	udiv	r5, r0, r5
 80076b6:	b395      	cbz	r5, 800771e <quorem+0x9e>
 80076b8:	f04f 0a00 	mov.w	sl, #0
 80076bc:	4638      	mov	r0, r7
 80076be:	46b6      	mov	lr, r6
 80076c0:	46d3      	mov	fp, sl
 80076c2:	f850 2b04 	ldr.w	r2, [r0], #4
 80076c6:	b293      	uxth	r3, r2
 80076c8:	fb05 a303 	mla	r3, r5, r3, sl
 80076cc:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80076d0:	b29b      	uxth	r3, r3
 80076d2:	ebab 0303 	sub.w	r3, fp, r3
 80076d6:	0c12      	lsrs	r2, r2, #16
 80076d8:	f8de b000 	ldr.w	fp, [lr]
 80076dc:	fb05 a202 	mla	r2, r5, r2, sl
 80076e0:	fa13 f38b 	uxtah	r3, r3, fp
 80076e4:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 80076e8:	fa1f fb82 	uxth.w	fp, r2
 80076ec:	f8de 2000 	ldr.w	r2, [lr]
 80076f0:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 80076f4:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80076f8:	b29b      	uxth	r3, r3
 80076fa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80076fe:	4581      	cmp	r9, r0
 8007700:	ea4f 4b22 	mov.w	fp, r2, asr #16
 8007704:	f84e 3b04 	str.w	r3, [lr], #4
 8007708:	d2db      	bcs.n	80076c2 <quorem+0x42>
 800770a:	f856 300c 	ldr.w	r3, [r6, ip]
 800770e:	b933      	cbnz	r3, 800771e <quorem+0x9e>
 8007710:	9b01      	ldr	r3, [sp, #4]
 8007712:	3b04      	subs	r3, #4
 8007714:	429e      	cmp	r6, r3
 8007716:	461a      	mov	r2, r3
 8007718:	d330      	bcc.n	800777c <quorem+0xfc>
 800771a:	f8c8 4010 	str.w	r4, [r8, #16]
 800771e:	4640      	mov	r0, r8
 8007720:	f001 f81e 	bl	8008760 <__mcmp>
 8007724:	2800      	cmp	r0, #0
 8007726:	db25      	blt.n	8007774 <quorem+0xf4>
 8007728:	3501      	adds	r5, #1
 800772a:	4630      	mov	r0, r6
 800772c:	f04f 0c00 	mov.w	ip, #0
 8007730:	f857 2b04 	ldr.w	r2, [r7], #4
 8007734:	f8d0 e000 	ldr.w	lr, [r0]
 8007738:	b293      	uxth	r3, r2
 800773a:	ebac 0303 	sub.w	r3, ip, r3
 800773e:	0c12      	lsrs	r2, r2, #16
 8007740:	fa13 f38e 	uxtah	r3, r3, lr
 8007744:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8007748:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800774c:	b29b      	uxth	r3, r3
 800774e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8007752:	45b9      	cmp	r9, r7
 8007754:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8007758:	f840 3b04 	str.w	r3, [r0], #4
 800775c:	d2e8      	bcs.n	8007730 <quorem+0xb0>
 800775e:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8007762:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8007766:	b92a      	cbnz	r2, 8007774 <quorem+0xf4>
 8007768:	3b04      	subs	r3, #4
 800776a:	429e      	cmp	r6, r3
 800776c:	461a      	mov	r2, r3
 800776e:	d30b      	bcc.n	8007788 <quorem+0x108>
 8007770:	f8c8 4010 	str.w	r4, [r8, #16]
 8007774:	4628      	mov	r0, r5
 8007776:	b003      	add	sp, #12
 8007778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800777c:	6812      	ldr	r2, [r2, #0]
 800777e:	3b04      	subs	r3, #4
 8007780:	2a00      	cmp	r2, #0
 8007782:	d1ca      	bne.n	800771a <quorem+0x9a>
 8007784:	3c01      	subs	r4, #1
 8007786:	e7c5      	b.n	8007714 <quorem+0x94>
 8007788:	6812      	ldr	r2, [r2, #0]
 800778a:	3b04      	subs	r3, #4
 800778c:	2a00      	cmp	r2, #0
 800778e:	d1ef      	bne.n	8007770 <quorem+0xf0>
 8007790:	3c01      	subs	r4, #1
 8007792:	e7ea      	b.n	800776a <quorem+0xea>
 8007794:	2000      	movs	r0, #0
 8007796:	e7ee      	b.n	8007776 <quorem+0xf6>

08007798 <_dtoa_r>:
 8007798:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800779c:	ec57 6b10 	vmov	r6, r7, d0
 80077a0:	b097      	sub	sp, #92	; 0x5c
 80077a2:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80077a4:	9106      	str	r1, [sp, #24]
 80077a6:	4604      	mov	r4, r0
 80077a8:	920b      	str	r2, [sp, #44]	; 0x2c
 80077aa:	9312      	str	r3, [sp, #72]	; 0x48
 80077ac:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 80077b0:	e9cd 6700 	strd	r6, r7, [sp]
 80077b4:	b93d      	cbnz	r5, 80077c6 <_dtoa_r+0x2e>
 80077b6:	2010      	movs	r0, #16
 80077b8:	f000 fdb4 	bl	8008324 <malloc>
 80077bc:	6260      	str	r0, [r4, #36]	; 0x24
 80077be:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80077c2:	6005      	str	r5, [r0, #0]
 80077c4:	60c5      	str	r5, [r0, #12]
 80077c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80077c8:	6819      	ldr	r1, [r3, #0]
 80077ca:	b151      	cbz	r1, 80077e2 <_dtoa_r+0x4a>
 80077cc:	685a      	ldr	r2, [r3, #4]
 80077ce:	604a      	str	r2, [r1, #4]
 80077d0:	2301      	movs	r3, #1
 80077d2:	4093      	lsls	r3, r2
 80077d4:	608b      	str	r3, [r1, #8]
 80077d6:	4620      	mov	r0, r4
 80077d8:	f000 fde0 	bl	800839c <_Bfree>
 80077dc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80077de:	2200      	movs	r2, #0
 80077e0:	601a      	str	r2, [r3, #0]
 80077e2:	1e3b      	subs	r3, r7, #0
 80077e4:	bfbb      	ittet	lt
 80077e6:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80077ea:	9301      	strlt	r3, [sp, #4]
 80077ec:	2300      	movge	r3, #0
 80077ee:	2201      	movlt	r2, #1
 80077f0:	bfac      	ite	ge
 80077f2:	f8c8 3000 	strge.w	r3, [r8]
 80077f6:	f8c8 2000 	strlt.w	r2, [r8]
 80077fa:	4baf      	ldr	r3, [pc, #700]	; (8007ab8 <_dtoa_r+0x320>)
 80077fc:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8007800:	ea33 0308 	bics.w	r3, r3, r8
 8007804:	d114      	bne.n	8007830 <_dtoa_r+0x98>
 8007806:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8007808:	f242 730f 	movw	r3, #9999	; 0x270f
 800780c:	6013      	str	r3, [r2, #0]
 800780e:	9b00      	ldr	r3, [sp, #0]
 8007810:	b923      	cbnz	r3, 800781c <_dtoa_r+0x84>
 8007812:	f3c8 0013 	ubfx	r0, r8, #0, #20
 8007816:	2800      	cmp	r0, #0
 8007818:	f000 8542 	beq.w	80082a0 <_dtoa_r+0xb08>
 800781c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800781e:	f8df b2ac 	ldr.w	fp, [pc, #684]	; 8007acc <_dtoa_r+0x334>
 8007822:	2b00      	cmp	r3, #0
 8007824:	f000 8544 	beq.w	80082b0 <_dtoa_r+0xb18>
 8007828:	f10b 0303 	add.w	r3, fp, #3
 800782c:	f000 bd3e 	b.w	80082ac <_dtoa_r+0xb14>
 8007830:	e9dd 6700 	ldrd	r6, r7, [sp]
 8007834:	2200      	movs	r2, #0
 8007836:	2300      	movs	r3, #0
 8007838:	4630      	mov	r0, r6
 800783a:	4639      	mov	r1, r7
 800783c:	f7f9 f94c 	bl	8000ad8 <__aeabi_dcmpeq>
 8007840:	4681      	mov	r9, r0
 8007842:	b168      	cbz	r0, 8007860 <_dtoa_r+0xc8>
 8007844:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8007846:	2301      	movs	r3, #1
 8007848:	6013      	str	r3, [r2, #0]
 800784a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800784c:	2b00      	cmp	r3, #0
 800784e:	f000 8524 	beq.w	800829a <_dtoa_r+0xb02>
 8007852:	4b9a      	ldr	r3, [pc, #616]	; (8007abc <_dtoa_r+0x324>)
 8007854:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8007856:	f103 3bff 	add.w	fp, r3, #4294967295
 800785a:	6013      	str	r3, [r2, #0]
 800785c:	f000 bd28 	b.w	80082b0 <_dtoa_r+0xb18>
 8007860:	aa14      	add	r2, sp, #80	; 0x50
 8007862:	a915      	add	r1, sp, #84	; 0x54
 8007864:	ec47 6b10 	vmov	d0, r6, r7
 8007868:	4620      	mov	r0, r4
 800786a:	f000 fff0 	bl	800884e <__d2b>
 800786e:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8007872:	9004      	str	r0, [sp, #16]
 8007874:	2d00      	cmp	r5, #0
 8007876:	d07c      	beq.n	8007972 <_dtoa_r+0x1da>
 8007878:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800787c:	f043 5b7f 	orr.w	fp, r3, #1069547520	; 0x3fc00000
 8007880:	46b2      	mov	sl, r6
 8007882:	f44b 1b40 	orr.w	fp, fp, #3145728	; 0x300000
 8007886:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800788a:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
 800788e:	2200      	movs	r2, #0
 8007890:	4b8b      	ldr	r3, [pc, #556]	; (8007ac0 <_dtoa_r+0x328>)
 8007892:	4650      	mov	r0, sl
 8007894:	4659      	mov	r1, fp
 8007896:	f7f8 fcff 	bl	8000298 <__aeabi_dsub>
 800789a:	a381      	add	r3, pc, #516	; (adr r3, 8007aa0 <_dtoa_r+0x308>)
 800789c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80078a0:	f7f8 feb2 	bl	8000608 <__aeabi_dmul>
 80078a4:	a380      	add	r3, pc, #512	; (adr r3, 8007aa8 <_dtoa_r+0x310>)
 80078a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80078aa:	f7f8 fcf7 	bl	800029c <__adddf3>
 80078ae:	4606      	mov	r6, r0
 80078b0:	4628      	mov	r0, r5
 80078b2:	460f      	mov	r7, r1
 80078b4:	f7f8 fe3e 	bl	8000534 <__aeabi_i2d>
 80078b8:	a37d      	add	r3, pc, #500	; (adr r3, 8007ab0 <_dtoa_r+0x318>)
 80078ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80078be:	f7f8 fea3 	bl	8000608 <__aeabi_dmul>
 80078c2:	4602      	mov	r2, r0
 80078c4:	460b      	mov	r3, r1
 80078c6:	4630      	mov	r0, r6
 80078c8:	4639      	mov	r1, r7
 80078ca:	f7f8 fce7 	bl	800029c <__adddf3>
 80078ce:	4606      	mov	r6, r0
 80078d0:	460f      	mov	r7, r1
 80078d2:	f7f9 f949 	bl	8000b68 <__aeabi_d2iz>
 80078d6:	2200      	movs	r2, #0
 80078d8:	4682      	mov	sl, r0
 80078da:	2300      	movs	r3, #0
 80078dc:	4630      	mov	r0, r6
 80078de:	4639      	mov	r1, r7
 80078e0:	f7f9 f904 	bl	8000aec <__aeabi_dcmplt>
 80078e4:	b148      	cbz	r0, 80078fa <_dtoa_r+0x162>
 80078e6:	4650      	mov	r0, sl
 80078e8:	f7f8 fe24 	bl	8000534 <__aeabi_i2d>
 80078ec:	4632      	mov	r2, r6
 80078ee:	463b      	mov	r3, r7
 80078f0:	f7f9 f8f2 	bl	8000ad8 <__aeabi_dcmpeq>
 80078f4:	b908      	cbnz	r0, 80078fa <_dtoa_r+0x162>
 80078f6:	f10a 3aff 	add.w	sl, sl, #4294967295
 80078fa:	f1ba 0f16 	cmp.w	sl, #22
 80078fe:	d859      	bhi.n	80079b4 <_dtoa_r+0x21c>
 8007900:	4970      	ldr	r1, [pc, #448]	; (8007ac4 <_dtoa_r+0x32c>)
 8007902:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 8007906:	e9dd 2300 	ldrd	r2, r3, [sp]
 800790a:	e9d1 0100 	ldrd	r0, r1, [r1]
 800790e:	f7f9 f90b 	bl	8000b28 <__aeabi_dcmpgt>
 8007912:	2800      	cmp	r0, #0
 8007914:	d050      	beq.n	80079b8 <_dtoa_r+0x220>
 8007916:	f10a 3aff 	add.w	sl, sl, #4294967295
 800791a:	2300      	movs	r3, #0
 800791c:	930f      	str	r3, [sp, #60]	; 0x3c
 800791e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8007920:	1b5d      	subs	r5, r3, r5
 8007922:	f1b5 0801 	subs.w	r8, r5, #1
 8007926:	bf49      	itett	mi
 8007928:	f1c5 0301 	rsbmi	r3, r5, #1
 800792c:	2300      	movpl	r3, #0
 800792e:	9305      	strmi	r3, [sp, #20]
 8007930:	f04f 0800 	movmi.w	r8, #0
 8007934:	bf58      	it	pl
 8007936:	9305      	strpl	r3, [sp, #20]
 8007938:	f1ba 0f00 	cmp.w	sl, #0
 800793c:	db3e      	blt.n	80079bc <_dtoa_r+0x224>
 800793e:	2300      	movs	r3, #0
 8007940:	44d0      	add	r8, sl
 8007942:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 8007946:	9307      	str	r3, [sp, #28]
 8007948:	9b06      	ldr	r3, [sp, #24]
 800794a:	2b09      	cmp	r3, #9
 800794c:	f200 8090 	bhi.w	8007a70 <_dtoa_r+0x2d8>
 8007950:	2b05      	cmp	r3, #5
 8007952:	bfc4      	itt	gt
 8007954:	3b04      	subgt	r3, #4
 8007956:	9306      	strgt	r3, [sp, #24]
 8007958:	9b06      	ldr	r3, [sp, #24]
 800795a:	f1a3 0302 	sub.w	r3, r3, #2
 800795e:	bfcc      	ite	gt
 8007960:	2500      	movgt	r5, #0
 8007962:	2501      	movle	r5, #1
 8007964:	2b03      	cmp	r3, #3
 8007966:	f200 808f 	bhi.w	8007a88 <_dtoa_r+0x2f0>
 800796a:	e8df f003 	tbb	[pc, r3]
 800796e:	7f7d      	.short	0x7f7d
 8007970:	7131      	.short	0x7131
 8007972:	e9dd 5314 	ldrd	r5, r3, [sp, #80]	; 0x50
 8007976:	441d      	add	r5, r3
 8007978:	f205 4032 	addw	r0, r5, #1074	; 0x432
 800797c:	2820      	cmp	r0, #32
 800797e:	dd13      	ble.n	80079a8 <_dtoa_r+0x210>
 8007980:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
 8007984:	9b00      	ldr	r3, [sp, #0]
 8007986:	fa08 f800 	lsl.w	r8, r8, r0
 800798a:	f205 4012 	addw	r0, r5, #1042	; 0x412
 800798e:	fa23 f000 	lsr.w	r0, r3, r0
 8007992:	ea48 0000 	orr.w	r0, r8, r0
 8007996:	f7f8 fdbd 	bl	8000514 <__aeabi_ui2d>
 800799a:	2301      	movs	r3, #1
 800799c:	4682      	mov	sl, r0
 800799e:	f1a1 7bf8 	sub.w	fp, r1, #32505856	; 0x1f00000
 80079a2:	3d01      	subs	r5, #1
 80079a4:	9313      	str	r3, [sp, #76]	; 0x4c
 80079a6:	e772      	b.n	800788e <_dtoa_r+0xf6>
 80079a8:	9b00      	ldr	r3, [sp, #0]
 80079aa:	f1c0 0020 	rsb	r0, r0, #32
 80079ae:	fa03 f000 	lsl.w	r0, r3, r0
 80079b2:	e7f0      	b.n	8007996 <_dtoa_r+0x1fe>
 80079b4:	2301      	movs	r3, #1
 80079b6:	e7b1      	b.n	800791c <_dtoa_r+0x184>
 80079b8:	900f      	str	r0, [sp, #60]	; 0x3c
 80079ba:	e7b0      	b.n	800791e <_dtoa_r+0x186>
 80079bc:	9b05      	ldr	r3, [sp, #20]
 80079be:	eba3 030a 	sub.w	r3, r3, sl
 80079c2:	9305      	str	r3, [sp, #20]
 80079c4:	f1ca 0300 	rsb	r3, sl, #0
 80079c8:	9307      	str	r3, [sp, #28]
 80079ca:	2300      	movs	r3, #0
 80079cc:	930e      	str	r3, [sp, #56]	; 0x38
 80079ce:	e7bb      	b.n	8007948 <_dtoa_r+0x1b0>
 80079d0:	2301      	movs	r3, #1
 80079d2:	930a      	str	r3, [sp, #40]	; 0x28
 80079d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80079d6:	2b00      	cmp	r3, #0
 80079d8:	dd59      	ble.n	8007a8e <_dtoa_r+0x2f6>
 80079da:	9302      	str	r3, [sp, #8]
 80079dc:	4699      	mov	r9, r3
 80079de:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80079e0:	2200      	movs	r2, #0
 80079e2:	6072      	str	r2, [r6, #4]
 80079e4:	2204      	movs	r2, #4
 80079e6:	f102 0014 	add.w	r0, r2, #20
 80079ea:	4298      	cmp	r0, r3
 80079ec:	6871      	ldr	r1, [r6, #4]
 80079ee:	d953      	bls.n	8007a98 <_dtoa_r+0x300>
 80079f0:	4620      	mov	r0, r4
 80079f2:	f000 fc9f 	bl	8008334 <_Balloc>
 80079f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80079f8:	6030      	str	r0, [r6, #0]
 80079fa:	f1b9 0f0e 	cmp.w	r9, #14
 80079fe:	f8d3 b000 	ldr.w	fp, [r3]
 8007a02:	f200 80e6 	bhi.w	8007bd2 <_dtoa_r+0x43a>
 8007a06:	2d00      	cmp	r5, #0
 8007a08:	f000 80e3 	beq.w	8007bd2 <_dtoa_r+0x43a>
 8007a0c:	ed9d 7b00 	vldr	d7, [sp]
 8007a10:	f1ba 0f00 	cmp.w	sl, #0
 8007a14:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
 8007a18:	dd74      	ble.n	8007b04 <_dtoa_r+0x36c>
 8007a1a:	4a2a      	ldr	r2, [pc, #168]	; (8007ac4 <_dtoa_r+0x32c>)
 8007a1c:	f00a 030f 	and.w	r3, sl, #15
 8007a20:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8007a24:	ed93 7b00 	vldr	d7, [r3]
 8007a28:	ea4f 162a 	mov.w	r6, sl, asr #4
 8007a2c:	06f0      	lsls	r0, r6, #27
 8007a2e:	ed8d 7b08 	vstr	d7, [sp, #32]
 8007a32:	d565      	bpl.n	8007b00 <_dtoa_r+0x368>
 8007a34:	4b24      	ldr	r3, [pc, #144]	; (8007ac8 <_dtoa_r+0x330>)
 8007a36:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8007a3a:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8007a3e:	f7f8 ff0d 	bl	800085c <__aeabi_ddiv>
 8007a42:	e9cd 0100 	strd	r0, r1, [sp]
 8007a46:	f006 060f 	and.w	r6, r6, #15
 8007a4a:	2503      	movs	r5, #3
 8007a4c:	4f1e      	ldr	r7, [pc, #120]	; (8007ac8 <_dtoa_r+0x330>)
 8007a4e:	e04c      	b.n	8007aea <_dtoa_r+0x352>
 8007a50:	2301      	movs	r3, #1
 8007a52:	930a      	str	r3, [sp, #40]	; 0x28
 8007a54:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007a56:	4453      	add	r3, sl
 8007a58:	f103 0901 	add.w	r9, r3, #1
 8007a5c:	9302      	str	r3, [sp, #8]
 8007a5e:	464b      	mov	r3, r9
 8007a60:	2b01      	cmp	r3, #1
 8007a62:	bfb8      	it	lt
 8007a64:	2301      	movlt	r3, #1
 8007a66:	e7ba      	b.n	80079de <_dtoa_r+0x246>
 8007a68:	2300      	movs	r3, #0
 8007a6a:	e7b2      	b.n	80079d2 <_dtoa_r+0x23a>
 8007a6c:	2300      	movs	r3, #0
 8007a6e:	e7f0      	b.n	8007a52 <_dtoa_r+0x2ba>
 8007a70:	2501      	movs	r5, #1
 8007a72:	2300      	movs	r3, #0
 8007a74:	9306      	str	r3, [sp, #24]
 8007a76:	950a      	str	r5, [sp, #40]	; 0x28
 8007a78:	f04f 33ff 	mov.w	r3, #4294967295
 8007a7c:	9302      	str	r3, [sp, #8]
 8007a7e:	4699      	mov	r9, r3
 8007a80:	2200      	movs	r2, #0
 8007a82:	2312      	movs	r3, #18
 8007a84:	920b      	str	r2, [sp, #44]	; 0x2c
 8007a86:	e7aa      	b.n	80079de <_dtoa_r+0x246>
 8007a88:	2301      	movs	r3, #1
 8007a8a:	930a      	str	r3, [sp, #40]	; 0x28
 8007a8c:	e7f4      	b.n	8007a78 <_dtoa_r+0x2e0>
 8007a8e:	2301      	movs	r3, #1
 8007a90:	9302      	str	r3, [sp, #8]
 8007a92:	4699      	mov	r9, r3
 8007a94:	461a      	mov	r2, r3
 8007a96:	e7f5      	b.n	8007a84 <_dtoa_r+0x2ec>
 8007a98:	3101      	adds	r1, #1
 8007a9a:	6071      	str	r1, [r6, #4]
 8007a9c:	0052      	lsls	r2, r2, #1
 8007a9e:	e7a2      	b.n	80079e6 <_dtoa_r+0x24e>
 8007aa0:	636f4361 	.word	0x636f4361
 8007aa4:	3fd287a7 	.word	0x3fd287a7
 8007aa8:	8b60c8b3 	.word	0x8b60c8b3
 8007aac:	3fc68a28 	.word	0x3fc68a28
 8007ab0:	509f79fb 	.word	0x509f79fb
 8007ab4:	3fd34413 	.word	0x3fd34413
 8007ab8:	7ff00000 	.word	0x7ff00000
 8007abc:	08008f8d 	.word	0x08008f8d
 8007ac0:	3ff80000 	.word	0x3ff80000
 8007ac4:	08008fe8 	.word	0x08008fe8
 8007ac8:	08008fc0 	.word	0x08008fc0
 8007acc:	08008fb9 	.word	0x08008fb9
 8007ad0:	07f1      	lsls	r1, r6, #31
 8007ad2:	d508      	bpl.n	8007ae6 <_dtoa_r+0x34e>
 8007ad4:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8007ad8:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007adc:	f7f8 fd94 	bl	8000608 <__aeabi_dmul>
 8007ae0:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8007ae4:	3501      	adds	r5, #1
 8007ae6:	1076      	asrs	r6, r6, #1
 8007ae8:	3708      	adds	r7, #8
 8007aea:	2e00      	cmp	r6, #0
 8007aec:	d1f0      	bne.n	8007ad0 <_dtoa_r+0x338>
 8007aee:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8007af2:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007af6:	f7f8 feb1 	bl	800085c <__aeabi_ddiv>
 8007afa:	e9cd 0100 	strd	r0, r1, [sp]
 8007afe:	e01a      	b.n	8007b36 <_dtoa_r+0x39e>
 8007b00:	2502      	movs	r5, #2
 8007b02:	e7a3      	b.n	8007a4c <_dtoa_r+0x2b4>
 8007b04:	f000 80a0 	beq.w	8007c48 <_dtoa_r+0x4b0>
 8007b08:	f1ca 0600 	rsb	r6, sl, #0
 8007b0c:	4b9f      	ldr	r3, [pc, #636]	; (8007d8c <_dtoa_r+0x5f4>)
 8007b0e:	4fa0      	ldr	r7, [pc, #640]	; (8007d90 <_dtoa_r+0x5f8>)
 8007b10:	f006 020f 	and.w	r2, r6, #15
 8007b14:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8007b18:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007b1c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8007b20:	f7f8 fd72 	bl	8000608 <__aeabi_dmul>
 8007b24:	e9cd 0100 	strd	r0, r1, [sp]
 8007b28:	1136      	asrs	r6, r6, #4
 8007b2a:	2300      	movs	r3, #0
 8007b2c:	2502      	movs	r5, #2
 8007b2e:	2e00      	cmp	r6, #0
 8007b30:	d17f      	bne.n	8007c32 <_dtoa_r+0x49a>
 8007b32:	2b00      	cmp	r3, #0
 8007b34:	d1e1      	bne.n	8007afa <_dtoa_r+0x362>
 8007b36:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8007b38:	2b00      	cmp	r3, #0
 8007b3a:	f000 8087 	beq.w	8007c4c <_dtoa_r+0x4b4>
 8007b3e:	e9dd 6700 	ldrd	r6, r7, [sp]
 8007b42:	2200      	movs	r2, #0
 8007b44:	4b93      	ldr	r3, [pc, #588]	; (8007d94 <_dtoa_r+0x5fc>)
 8007b46:	4630      	mov	r0, r6
 8007b48:	4639      	mov	r1, r7
 8007b4a:	f7f8 ffcf 	bl	8000aec <__aeabi_dcmplt>
 8007b4e:	2800      	cmp	r0, #0
 8007b50:	d07c      	beq.n	8007c4c <_dtoa_r+0x4b4>
 8007b52:	f1b9 0f00 	cmp.w	r9, #0
 8007b56:	d079      	beq.n	8007c4c <_dtoa_r+0x4b4>
 8007b58:	9b02      	ldr	r3, [sp, #8]
 8007b5a:	2b00      	cmp	r3, #0
 8007b5c:	dd35      	ble.n	8007bca <_dtoa_r+0x432>
 8007b5e:	f10a 33ff 	add.w	r3, sl, #4294967295
 8007b62:	9308      	str	r3, [sp, #32]
 8007b64:	4639      	mov	r1, r7
 8007b66:	2200      	movs	r2, #0
 8007b68:	4b8b      	ldr	r3, [pc, #556]	; (8007d98 <_dtoa_r+0x600>)
 8007b6a:	4630      	mov	r0, r6
 8007b6c:	f7f8 fd4c 	bl	8000608 <__aeabi_dmul>
 8007b70:	e9cd 0100 	strd	r0, r1, [sp]
 8007b74:	9f02      	ldr	r7, [sp, #8]
 8007b76:	3501      	adds	r5, #1
 8007b78:	4628      	mov	r0, r5
 8007b7a:	f7f8 fcdb 	bl	8000534 <__aeabi_i2d>
 8007b7e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8007b82:	f7f8 fd41 	bl	8000608 <__aeabi_dmul>
 8007b86:	2200      	movs	r2, #0
 8007b88:	4b84      	ldr	r3, [pc, #528]	; (8007d9c <_dtoa_r+0x604>)
 8007b8a:	f7f8 fb87 	bl	800029c <__adddf3>
 8007b8e:	4605      	mov	r5, r0
 8007b90:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 8007b94:	2f00      	cmp	r7, #0
 8007b96:	d15d      	bne.n	8007c54 <_dtoa_r+0x4bc>
 8007b98:	2200      	movs	r2, #0
 8007b9a:	4b81      	ldr	r3, [pc, #516]	; (8007da0 <_dtoa_r+0x608>)
 8007b9c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007ba0:	f7f8 fb7a 	bl	8000298 <__aeabi_dsub>
 8007ba4:	462a      	mov	r2, r5
 8007ba6:	4633      	mov	r3, r6
 8007ba8:	e9cd 0100 	strd	r0, r1, [sp]
 8007bac:	f7f8 ffbc 	bl	8000b28 <__aeabi_dcmpgt>
 8007bb0:	2800      	cmp	r0, #0
 8007bb2:	f040 8288 	bne.w	80080c6 <_dtoa_r+0x92e>
 8007bb6:	462a      	mov	r2, r5
 8007bb8:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8007bbc:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007bc0:	f7f8 ff94 	bl	8000aec <__aeabi_dcmplt>
 8007bc4:	2800      	cmp	r0, #0
 8007bc6:	f040 827c 	bne.w	80080c2 <_dtoa_r+0x92a>
 8007bca:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8007bce:	e9cd 2300 	strd	r2, r3, [sp]
 8007bd2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8007bd4:	2b00      	cmp	r3, #0
 8007bd6:	f2c0 8150 	blt.w	8007e7a <_dtoa_r+0x6e2>
 8007bda:	f1ba 0f0e 	cmp.w	sl, #14
 8007bde:	f300 814c 	bgt.w	8007e7a <_dtoa_r+0x6e2>
 8007be2:	4b6a      	ldr	r3, [pc, #424]	; (8007d8c <_dtoa_r+0x5f4>)
 8007be4:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8007be8:	ed93 7b00 	vldr	d7, [r3]
 8007bec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007bee:	2b00      	cmp	r3, #0
 8007bf0:	ed8d 7b02 	vstr	d7, [sp, #8]
 8007bf4:	f280 80d8 	bge.w	8007da8 <_dtoa_r+0x610>
 8007bf8:	f1b9 0f00 	cmp.w	r9, #0
 8007bfc:	f300 80d4 	bgt.w	8007da8 <_dtoa_r+0x610>
 8007c00:	f040 825e 	bne.w	80080c0 <_dtoa_r+0x928>
 8007c04:	2200      	movs	r2, #0
 8007c06:	4b66      	ldr	r3, [pc, #408]	; (8007da0 <_dtoa_r+0x608>)
 8007c08:	ec51 0b17 	vmov	r0, r1, d7
 8007c0c:	f7f8 fcfc 	bl	8000608 <__aeabi_dmul>
 8007c10:	e9dd 2300 	ldrd	r2, r3, [sp]
 8007c14:	f7f8 ff7e 	bl	8000b14 <__aeabi_dcmpge>
 8007c18:	464f      	mov	r7, r9
 8007c1a:	464e      	mov	r6, r9
 8007c1c:	2800      	cmp	r0, #0
 8007c1e:	f040 8234 	bne.w	800808a <_dtoa_r+0x8f2>
 8007c22:	2331      	movs	r3, #49	; 0x31
 8007c24:	f10b 0501 	add.w	r5, fp, #1
 8007c28:	f88b 3000 	strb.w	r3, [fp]
 8007c2c:	f10a 0a01 	add.w	sl, sl, #1
 8007c30:	e22f      	b.n	8008092 <_dtoa_r+0x8fa>
 8007c32:	07f2      	lsls	r2, r6, #31
 8007c34:	d505      	bpl.n	8007c42 <_dtoa_r+0x4aa>
 8007c36:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007c3a:	f7f8 fce5 	bl	8000608 <__aeabi_dmul>
 8007c3e:	3501      	adds	r5, #1
 8007c40:	2301      	movs	r3, #1
 8007c42:	1076      	asrs	r6, r6, #1
 8007c44:	3708      	adds	r7, #8
 8007c46:	e772      	b.n	8007b2e <_dtoa_r+0x396>
 8007c48:	2502      	movs	r5, #2
 8007c4a:	e774      	b.n	8007b36 <_dtoa_r+0x39e>
 8007c4c:	f8cd a020 	str.w	sl, [sp, #32]
 8007c50:	464f      	mov	r7, r9
 8007c52:	e791      	b.n	8007b78 <_dtoa_r+0x3e0>
 8007c54:	4b4d      	ldr	r3, [pc, #308]	; (8007d8c <_dtoa_r+0x5f4>)
 8007c56:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8007c5a:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 8007c5e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007c60:	2b00      	cmp	r3, #0
 8007c62:	d047      	beq.n	8007cf4 <_dtoa_r+0x55c>
 8007c64:	4602      	mov	r2, r0
 8007c66:	460b      	mov	r3, r1
 8007c68:	2000      	movs	r0, #0
 8007c6a:	494e      	ldr	r1, [pc, #312]	; (8007da4 <_dtoa_r+0x60c>)
 8007c6c:	f7f8 fdf6 	bl	800085c <__aeabi_ddiv>
 8007c70:	462a      	mov	r2, r5
 8007c72:	4633      	mov	r3, r6
 8007c74:	f7f8 fb10 	bl	8000298 <__aeabi_dsub>
 8007c78:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 8007c7c:	465d      	mov	r5, fp
 8007c7e:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007c82:	f7f8 ff71 	bl	8000b68 <__aeabi_d2iz>
 8007c86:	4606      	mov	r6, r0
 8007c88:	f7f8 fc54 	bl	8000534 <__aeabi_i2d>
 8007c8c:	4602      	mov	r2, r0
 8007c8e:	460b      	mov	r3, r1
 8007c90:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007c94:	f7f8 fb00 	bl	8000298 <__aeabi_dsub>
 8007c98:	3630      	adds	r6, #48	; 0x30
 8007c9a:	f805 6b01 	strb.w	r6, [r5], #1
 8007c9e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8007ca2:	e9cd 0100 	strd	r0, r1, [sp]
 8007ca6:	f7f8 ff21 	bl	8000aec <__aeabi_dcmplt>
 8007caa:	2800      	cmp	r0, #0
 8007cac:	d163      	bne.n	8007d76 <_dtoa_r+0x5de>
 8007cae:	e9dd 2300 	ldrd	r2, r3, [sp]
 8007cb2:	2000      	movs	r0, #0
 8007cb4:	4937      	ldr	r1, [pc, #220]	; (8007d94 <_dtoa_r+0x5fc>)
 8007cb6:	f7f8 faef 	bl	8000298 <__aeabi_dsub>
 8007cba:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8007cbe:	f7f8 ff15 	bl	8000aec <__aeabi_dcmplt>
 8007cc2:	2800      	cmp	r0, #0
 8007cc4:	f040 80b7 	bne.w	8007e36 <_dtoa_r+0x69e>
 8007cc8:	eba5 030b 	sub.w	r3, r5, fp
 8007ccc:	429f      	cmp	r7, r3
 8007cce:	f77f af7c 	ble.w	8007bca <_dtoa_r+0x432>
 8007cd2:	2200      	movs	r2, #0
 8007cd4:	4b30      	ldr	r3, [pc, #192]	; (8007d98 <_dtoa_r+0x600>)
 8007cd6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8007cda:	f7f8 fc95 	bl	8000608 <__aeabi_dmul>
 8007cde:	2200      	movs	r2, #0
 8007ce0:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 8007ce4:	4b2c      	ldr	r3, [pc, #176]	; (8007d98 <_dtoa_r+0x600>)
 8007ce6:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007cea:	f7f8 fc8d 	bl	8000608 <__aeabi_dmul>
 8007cee:	e9cd 0100 	strd	r0, r1, [sp]
 8007cf2:	e7c4      	b.n	8007c7e <_dtoa_r+0x4e6>
 8007cf4:	462a      	mov	r2, r5
 8007cf6:	4633      	mov	r3, r6
 8007cf8:	f7f8 fc86 	bl	8000608 <__aeabi_dmul>
 8007cfc:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 8007d00:	eb0b 0507 	add.w	r5, fp, r7
 8007d04:	465e      	mov	r6, fp
 8007d06:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007d0a:	f7f8 ff2d 	bl	8000b68 <__aeabi_d2iz>
 8007d0e:	4607      	mov	r7, r0
 8007d10:	f7f8 fc10 	bl	8000534 <__aeabi_i2d>
 8007d14:	3730      	adds	r7, #48	; 0x30
 8007d16:	4602      	mov	r2, r0
 8007d18:	460b      	mov	r3, r1
 8007d1a:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007d1e:	f7f8 fabb 	bl	8000298 <__aeabi_dsub>
 8007d22:	f806 7b01 	strb.w	r7, [r6], #1
 8007d26:	42ae      	cmp	r6, r5
 8007d28:	e9cd 0100 	strd	r0, r1, [sp]
 8007d2c:	f04f 0200 	mov.w	r2, #0
 8007d30:	d126      	bne.n	8007d80 <_dtoa_r+0x5e8>
 8007d32:	4b1c      	ldr	r3, [pc, #112]	; (8007da4 <_dtoa_r+0x60c>)
 8007d34:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8007d38:	f7f8 fab0 	bl	800029c <__adddf3>
 8007d3c:	4602      	mov	r2, r0
 8007d3e:	460b      	mov	r3, r1
 8007d40:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007d44:	f7f8 fef0 	bl	8000b28 <__aeabi_dcmpgt>
 8007d48:	2800      	cmp	r0, #0
 8007d4a:	d174      	bne.n	8007e36 <_dtoa_r+0x69e>
 8007d4c:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8007d50:	2000      	movs	r0, #0
 8007d52:	4914      	ldr	r1, [pc, #80]	; (8007da4 <_dtoa_r+0x60c>)
 8007d54:	f7f8 faa0 	bl	8000298 <__aeabi_dsub>
 8007d58:	4602      	mov	r2, r0
 8007d5a:	460b      	mov	r3, r1
 8007d5c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8007d60:	f7f8 fec4 	bl	8000aec <__aeabi_dcmplt>
 8007d64:	2800      	cmp	r0, #0
 8007d66:	f43f af30 	beq.w	8007bca <_dtoa_r+0x432>
 8007d6a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8007d6e:	2b30      	cmp	r3, #48	; 0x30
 8007d70:	f105 32ff 	add.w	r2, r5, #4294967295
 8007d74:	d002      	beq.n	8007d7c <_dtoa_r+0x5e4>
 8007d76:	f8dd a020 	ldr.w	sl, [sp, #32]
 8007d7a:	e04a      	b.n	8007e12 <_dtoa_r+0x67a>
 8007d7c:	4615      	mov	r5, r2
 8007d7e:	e7f4      	b.n	8007d6a <_dtoa_r+0x5d2>
 8007d80:	4b05      	ldr	r3, [pc, #20]	; (8007d98 <_dtoa_r+0x600>)
 8007d82:	f7f8 fc41 	bl	8000608 <__aeabi_dmul>
 8007d86:	e9cd 0100 	strd	r0, r1, [sp]
 8007d8a:	e7bc      	b.n	8007d06 <_dtoa_r+0x56e>
 8007d8c:	08008fe8 	.word	0x08008fe8
 8007d90:	08008fc0 	.word	0x08008fc0
 8007d94:	3ff00000 	.word	0x3ff00000
 8007d98:	40240000 	.word	0x40240000
 8007d9c:	401c0000 	.word	0x401c0000
 8007da0:	40140000 	.word	0x40140000
 8007da4:	3fe00000 	.word	0x3fe00000
 8007da8:	e9dd 6700 	ldrd	r6, r7, [sp]
 8007dac:	465d      	mov	r5, fp
 8007dae:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007db2:	4630      	mov	r0, r6
 8007db4:	4639      	mov	r1, r7
 8007db6:	f7f8 fd51 	bl	800085c <__aeabi_ddiv>
 8007dba:	f7f8 fed5 	bl	8000b68 <__aeabi_d2iz>
 8007dbe:	4680      	mov	r8, r0
 8007dc0:	f7f8 fbb8 	bl	8000534 <__aeabi_i2d>
 8007dc4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007dc8:	f7f8 fc1e 	bl	8000608 <__aeabi_dmul>
 8007dcc:	4602      	mov	r2, r0
 8007dce:	460b      	mov	r3, r1
 8007dd0:	4630      	mov	r0, r6
 8007dd2:	4639      	mov	r1, r7
 8007dd4:	f108 0630 	add.w	r6, r8, #48	; 0x30
 8007dd8:	f7f8 fa5e 	bl	8000298 <__aeabi_dsub>
 8007ddc:	f805 6b01 	strb.w	r6, [r5], #1
 8007de0:	eba5 060b 	sub.w	r6, r5, fp
 8007de4:	45b1      	cmp	r9, r6
 8007de6:	4602      	mov	r2, r0
 8007de8:	460b      	mov	r3, r1
 8007dea:	d139      	bne.n	8007e60 <_dtoa_r+0x6c8>
 8007dec:	f7f8 fa56 	bl	800029c <__adddf3>
 8007df0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007df4:	4606      	mov	r6, r0
 8007df6:	460f      	mov	r7, r1
 8007df8:	f7f8 fe96 	bl	8000b28 <__aeabi_dcmpgt>
 8007dfc:	b9c8      	cbnz	r0, 8007e32 <_dtoa_r+0x69a>
 8007dfe:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007e02:	4630      	mov	r0, r6
 8007e04:	4639      	mov	r1, r7
 8007e06:	f7f8 fe67 	bl	8000ad8 <__aeabi_dcmpeq>
 8007e0a:	b110      	cbz	r0, 8007e12 <_dtoa_r+0x67a>
 8007e0c:	f018 0f01 	tst.w	r8, #1
 8007e10:	d10f      	bne.n	8007e32 <_dtoa_r+0x69a>
 8007e12:	9904      	ldr	r1, [sp, #16]
 8007e14:	4620      	mov	r0, r4
 8007e16:	f000 fac1 	bl	800839c <_Bfree>
 8007e1a:	2300      	movs	r3, #0
 8007e1c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8007e1e:	702b      	strb	r3, [r5, #0]
 8007e20:	f10a 0301 	add.w	r3, sl, #1
 8007e24:	6013      	str	r3, [r2, #0]
 8007e26:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8007e28:	2b00      	cmp	r3, #0
 8007e2a:	f000 8241 	beq.w	80082b0 <_dtoa_r+0xb18>
 8007e2e:	601d      	str	r5, [r3, #0]
 8007e30:	e23e      	b.n	80082b0 <_dtoa_r+0xb18>
 8007e32:	f8cd a020 	str.w	sl, [sp, #32]
 8007e36:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8007e3a:	2a39      	cmp	r2, #57	; 0x39
 8007e3c:	f105 33ff 	add.w	r3, r5, #4294967295
 8007e40:	d108      	bne.n	8007e54 <_dtoa_r+0x6bc>
 8007e42:	459b      	cmp	fp, r3
 8007e44:	d10a      	bne.n	8007e5c <_dtoa_r+0x6c4>
 8007e46:	9b08      	ldr	r3, [sp, #32]
 8007e48:	3301      	adds	r3, #1
 8007e4a:	9308      	str	r3, [sp, #32]
 8007e4c:	2330      	movs	r3, #48	; 0x30
 8007e4e:	f88b 3000 	strb.w	r3, [fp]
 8007e52:	465b      	mov	r3, fp
 8007e54:	781a      	ldrb	r2, [r3, #0]
 8007e56:	3201      	adds	r2, #1
 8007e58:	701a      	strb	r2, [r3, #0]
 8007e5a:	e78c      	b.n	8007d76 <_dtoa_r+0x5de>
 8007e5c:	461d      	mov	r5, r3
 8007e5e:	e7ea      	b.n	8007e36 <_dtoa_r+0x69e>
 8007e60:	2200      	movs	r2, #0
 8007e62:	4b9b      	ldr	r3, [pc, #620]	; (80080d0 <_dtoa_r+0x938>)
 8007e64:	f7f8 fbd0 	bl	8000608 <__aeabi_dmul>
 8007e68:	2200      	movs	r2, #0
 8007e6a:	2300      	movs	r3, #0
 8007e6c:	4606      	mov	r6, r0
 8007e6e:	460f      	mov	r7, r1
 8007e70:	f7f8 fe32 	bl	8000ad8 <__aeabi_dcmpeq>
 8007e74:	2800      	cmp	r0, #0
 8007e76:	d09a      	beq.n	8007dae <_dtoa_r+0x616>
 8007e78:	e7cb      	b.n	8007e12 <_dtoa_r+0x67a>
 8007e7a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007e7c:	2a00      	cmp	r2, #0
 8007e7e:	f000 808b 	beq.w	8007f98 <_dtoa_r+0x800>
 8007e82:	9a06      	ldr	r2, [sp, #24]
 8007e84:	2a01      	cmp	r2, #1
 8007e86:	dc6e      	bgt.n	8007f66 <_dtoa_r+0x7ce>
 8007e88:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8007e8a:	2a00      	cmp	r2, #0
 8007e8c:	d067      	beq.n	8007f5e <_dtoa_r+0x7c6>
 8007e8e:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8007e92:	9f07      	ldr	r7, [sp, #28]
 8007e94:	9d05      	ldr	r5, [sp, #20]
 8007e96:	9a05      	ldr	r2, [sp, #20]
 8007e98:	2101      	movs	r1, #1
 8007e9a:	441a      	add	r2, r3
 8007e9c:	4620      	mov	r0, r4
 8007e9e:	9205      	str	r2, [sp, #20]
 8007ea0:	4498      	add	r8, r3
 8007ea2:	f000 fb1b 	bl	80084dc <__i2b>
 8007ea6:	4606      	mov	r6, r0
 8007ea8:	2d00      	cmp	r5, #0
 8007eaa:	dd0c      	ble.n	8007ec6 <_dtoa_r+0x72e>
 8007eac:	f1b8 0f00 	cmp.w	r8, #0
 8007eb0:	dd09      	ble.n	8007ec6 <_dtoa_r+0x72e>
 8007eb2:	4545      	cmp	r5, r8
 8007eb4:	9a05      	ldr	r2, [sp, #20]
 8007eb6:	462b      	mov	r3, r5
 8007eb8:	bfa8      	it	ge
 8007eba:	4643      	movge	r3, r8
 8007ebc:	1ad2      	subs	r2, r2, r3
 8007ebe:	9205      	str	r2, [sp, #20]
 8007ec0:	1aed      	subs	r5, r5, r3
 8007ec2:	eba8 0803 	sub.w	r8, r8, r3
 8007ec6:	9b07      	ldr	r3, [sp, #28]
 8007ec8:	b1eb      	cbz	r3, 8007f06 <_dtoa_r+0x76e>
 8007eca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007ecc:	2b00      	cmp	r3, #0
 8007ece:	d067      	beq.n	8007fa0 <_dtoa_r+0x808>
 8007ed0:	b18f      	cbz	r7, 8007ef6 <_dtoa_r+0x75e>
 8007ed2:	4631      	mov	r1, r6
 8007ed4:	463a      	mov	r2, r7
 8007ed6:	4620      	mov	r0, r4
 8007ed8:	f000 fba0 	bl	800861c <__pow5mult>
 8007edc:	9a04      	ldr	r2, [sp, #16]
 8007ede:	4601      	mov	r1, r0
 8007ee0:	4606      	mov	r6, r0
 8007ee2:	4620      	mov	r0, r4
 8007ee4:	f000 fb03 	bl	80084ee <__multiply>
 8007ee8:	9904      	ldr	r1, [sp, #16]
 8007eea:	9008      	str	r0, [sp, #32]
 8007eec:	4620      	mov	r0, r4
 8007eee:	f000 fa55 	bl	800839c <_Bfree>
 8007ef2:	9b08      	ldr	r3, [sp, #32]
 8007ef4:	9304      	str	r3, [sp, #16]
 8007ef6:	9b07      	ldr	r3, [sp, #28]
 8007ef8:	1bda      	subs	r2, r3, r7
 8007efa:	d004      	beq.n	8007f06 <_dtoa_r+0x76e>
 8007efc:	9904      	ldr	r1, [sp, #16]
 8007efe:	4620      	mov	r0, r4
 8007f00:	f000 fb8c 	bl	800861c <__pow5mult>
 8007f04:	9004      	str	r0, [sp, #16]
 8007f06:	2101      	movs	r1, #1
 8007f08:	4620      	mov	r0, r4
 8007f0a:	f000 fae7 	bl	80084dc <__i2b>
 8007f0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007f10:	4607      	mov	r7, r0
 8007f12:	2b00      	cmp	r3, #0
 8007f14:	f000 81d0 	beq.w	80082b8 <_dtoa_r+0xb20>
 8007f18:	461a      	mov	r2, r3
 8007f1a:	4601      	mov	r1, r0
 8007f1c:	4620      	mov	r0, r4
 8007f1e:	f000 fb7d 	bl	800861c <__pow5mult>
 8007f22:	9b06      	ldr	r3, [sp, #24]
 8007f24:	2b01      	cmp	r3, #1
 8007f26:	4607      	mov	r7, r0
 8007f28:	dc40      	bgt.n	8007fac <_dtoa_r+0x814>
 8007f2a:	9b00      	ldr	r3, [sp, #0]
 8007f2c:	2b00      	cmp	r3, #0
 8007f2e:	d139      	bne.n	8007fa4 <_dtoa_r+0x80c>
 8007f30:	9b01      	ldr	r3, [sp, #4]
 8007f32:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8007f36:	2b00      	cmp	r3, #0
 8007f38:	d136      	bne.n	8007fa8 <_dtoa_r+0x810>
 8007f3a:	9b01      	ldr	r3, [sp, #4]
 8007f3c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8007f40:	0d1b      	lsrs	r3, r3, #20
 8007f42:	051b      	lsls	r3, r3, #20
 8007f44:	b12b      	cbz	r3, 8007f52 <_dtoa_r+0x7ba>
 8007f46:	9b05      	ldr	r3, [sp, #20]
 8007f48:	3301      	adds	r3, #1
 8007f4a:	9305      	str	r3, [sp, #20]
 8007f4c:	f108 0801 	add.w	r8, r8, #1
 8007f50:	2301      	movs	r3, #1
 8007f52:	9307      	str	r3, [sp, #28]
 8007f54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007f56:	2b00      	cmp	r3, #0
 8007f58:	d12a      	bne.n	8007fb0 <_dtoa_r+0x818>
 8007f5a:	2001      	movs	r0, #1
 8007f5c:	e030      	b.n	8007fc0 <_dtoa_r+0x828>
 8007f5e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8007f60:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8007f64:	e795      	b.n	8007e92 <_dtoa_r+0x6fa>
 8007f66:	9b07      	ldr	r3, [sp, #28]
 8007f68:	f109 37ff 	add.w	r7, r9, #4294967295
 8007f6c:	42bb      	cmp	r3, r7
 8007f6e:	bfbf      	itttt	lt
 8007f70:	9b07      	ldrlt	r3, [sp, #28]
 8007f72:	9707      	strlt	r7, [sp, #28]
 8007f74:	1afa      	sublt	r2, r7, r3
 8007f76:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 8007f78:	bfbb      	ittet	lt
 8007f7a:	189b      	addlt	r3, r3, r2
 8007f7c:	930e      	strlt	r3, [sp, #56]	; 0x38
 8007f7e:	1bdf      	subge	r7, r3, r7
 8007f80:	2700      	movlt	r7, #0
 8007f82:	f1b9 0f00 	cmp.w	r9, #0
 8007f86:	bfb5      	itete	lt
 8007f88:	9b05      	ldrlt	r3, [sp, #20]
 8007f8a:	9d05      	ldrge	r5, [sp, #20]
 8007f8c:	eba3 0509 	sublt.w	r5, r3, r9
 8007f90:	464b      	movge	r3, r9
 8007f92:	bfb8      	it	lt
 8007f94:	2300      	movlt	r3, #0
 8007f96:	e77e      	b.n	8007e96 <_dtoa_r+0x6fe>
 8007f98:	9f07      	ldr	r7, [sp, #28]
 8007f9a:	9d05      	ldr	r5, [sp, #20]
 8007f9c:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8007f9e:	e783      	b.n	8007ea8 <_dtoa_r+0x710>
 8007fa0:	9a07      	ldr	r2, [sp, #28]
 8007fa2:	e7ab      	b.n	8007efc <_dtoa_r+0x764>
 8007fa4:	2300      	movs	r3, #0
 8007fa6:	e7d4      	b.n	8007f52 <_dtoa_r+0x7ba>
 8007fa8:	9b00      	ldr	r3, [sp, #0]
 8007faa:	e7d2      	b.n	8007f52 <_dtoa_r+0x7ba>
 8007fac:	2300      	movs	r3, #0
 8007fae:	9307      	str	r3, [sp, #28]
 8007fb0:	693b      	ldr	r3, [r7, #16]
 8007fb2:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 8007fb6:	6918      	ldr	r0, [r3, #16]
 8007fb8:	f000 fa42 	bl	8008440 <__hi0bits>
 8007fbc:	f1c0 0020 	rsb	r0, r0, #32
 8007fc0:	4440      	add	r0, r8
 8007fc2:	f010 001f 	ands.w	r0, r0, #31
 8007fc6:	d047      	beq.n	8008058 <_dtoa_r+0x8c0>
 8007fc8:	f1c0 0320 	rsb	r3, r0, #32
 8007fcc:	2b04      	cmp	r3, #4
 8007fce:	dd3b      	ble.n	8008048 <_dtoa_r+0x8b0>
 8007fd0:	9b05      	ldr	r3, [sp, #20]
 8007fd2:	f1c0 001c 	rsb	r0, r0, #28
 8007fd6:	4403      	add	r3, r0
 8007fd8:	9305      	str	r3, [sp, #20]
 8007fda:	4405      	add	r5, r0
 8007fdc:	4480      	add	r8, r0
 8007fde:	9b05      	ldr	r3, [sp, #20]
 8007fe0:	2b00      	cmp	r3, #0
 8007fe2:	dd05      	ble.n	8007ff0 <_dtoa_r+0x858>
 8007fe4:	461a      	mov	r2, r3
 8007fe6:	9904      	ldr	r1, [sp, #16]
 8007fe8:	4620      	mov	r0, r4
 8007fea:	f000 fb65 	bl	80086b8 <__lshift>
 8007fee:	9004      	str	r0, [sp, #16]
 8007ff0:	f1b8 0f00 	cmp.w	r8, #0
 8007ff4:	dd05      	ble.n	8008002 <_dtoa_r+0x86a>
 8007ff6:	4639      	mov	r1, r7
 8007ff8:	4642      	mov	r2, r8
 8007ffa:	4620      	mov	r0, r4
 8007ffc:	f000 fb5c 	bl	80086b8 <__lshift>
 8008000:	4607      	mov	r7, r0
 8008002:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8008004:	b353      	cbz	r3, 800805c <_dtoa_r+0x8c4>
 8008006:	4639      	mov	r1, r7
 8008008:	9804      	ldr	r0, [sp, #16]
 800800a:	f000 fba9 	bl	8008760 <__mcmp>
 800800e:	2800      	cmp	r0, #0
 8008010:	da24      	bge.n	800805c <_dtoa_r+0x8c4>
 8008012:	2300      	movs	r3, #0
 8008014:	220a      	movs	r2, #10
 8008016:	9904      	ldr	r1, [sp, #16]
 8008018:	4620      	mov	r0, r4
 800801a:	f000 f9d6 	bl	80083ca <__multadd>
 800801e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008020:	9004      	str	r0, [sp, #16]
 8008022:	f10a 3aff 	add.w	sl, sl, #4294967295
 8008026:	2b00      	cmp	r3, #0
 8008028:	f000 814d 	beq.w	80082c6 <_dtoa_r+0xb2e>
 800802c:	2300      	movs	r3, #0
 800802e:	4631      	mov	r1, r6
 8008030:	220a      	movs	r2, #10
 8008032:	4620      	mov	r0, r4
 8008034:	f000 f9c9 	bl	80083ca <__multadd>
 8008038:	9b02      	ldr	r3, [sp, #8]
 800803a:	2b00      	cmp	r3, #0
 800803c:	4606      	mov	r6, r0
 800803e:	dc4f      	bgt.n	80080e0 <_dtoa_r+0x948>
 8008040:	9b06      	ldr	r3, [sp, #24]
 8008042:	2b02      	cmp	r3, #2
 8008044:	dd4c      	ble.n	80080e0 <_dtoa_r+0x948>
 8008046:	e011      	b.n	800806c <_dtoa_r+0x8d4>
 8008048:	d0c9      	beq.n	8007fde <_dtoa_r+0x846>
 800804a:	9a05      	ldr	r2, [sp, #20]
 800804c:	331c      	adds	r3, #28
 800804e:	441a      	add	r2, r3
 8008050:	9205      	str	r2, [sp, #20]
 8008052:	441d      	add	r5, r3
 8008054:	4498      	add	r8, r3
 8008056:	e7c2      	b.n	8007fde <_dtoa_r+0x846>
 8008058:	4603      	mov	r3, r0
 800805a:	e7f6      	b.n	800804a <_dtoa_r+0x8b2>
 800805c:	f1b9 0f00 	cmp.w	r9, #0
 8008060:	dc38      	bgt.n	80080d4 <_dtoa_r+0x93c>
 8008062:	9b06      	ldr	r3, [sp, #24]
 8008064:	2b02      	cmp	r3, #2
 8008066:	dd35      	ble.n	80080d4 <_dtoa_r+0x93c>
 8008068:	f8cd 9008 	str.w	r9, [sp, #8]
 800806c:	9b02      	ldr	r3, [sp, #8]
 800806e:	b963      	cbnz	r3, 800808a <_dtoa_r+0x8f2>
 8008070:	4639      	mov	r1, r7
 8008072:	2205      	movs	r2, #5
 8008074:	4620      	mov	r0, r4
 8008076:	f000 f9a8 	bl	80083ca <__multadd>
 800807a:	4601      	mov	r1, r0
 800807c:	4607      	mov	r7, r0
 800807e:	9804      	ldr	r0, [sp, #16]
 8008080:	f000 fb6e 	bl	8008760 <__mcmp>
 8008084:	2800      	cmp	r0, #0
 8008086:	f73f adcc 	bgt.w	8007c22 <_dtoa_r+0x48a>
 800808a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800808c:	465d      	mov	r5, fp
 800808e:	ea6f 0a03 	mvn.w	sl, r3
 8008092:	f04f 0900 	mov.w	r9, #0
 8008096:	4639      	mov	r1, r7
 8008098:	4620      	mov	r0, r4
 800809a:	f000 f97f 	bl	800839c <_Bfree>
 800809e:	2e00      	cmp	r6, #0
 80080a0:	f43f aeb7 	beq.w	8007e12 <_dtoa_r+0x67a>
 80080a4:	f1b9 0f00 	cmp.w	r9, #0
 80080a8:	d005      	beq.n	80080b6 <_dtoa_r+0x91e>
 80080aa:	45b1      	cmp	r9, r6
 80080ac:	d003      	beq.n	80080b6 <_dtoa_r+0x91e>
 80080ae:	4649      	mov	r1, r9
 80080b0:	4620      	mov	r0, r4
 80080b2:	f000 f973 	bl	800839c <_Bfree>
 80080b6:	4631      	mov	r1, r6
 80080b8:	4620      	mov	r0, r4
 80080ba:	f000 f96f 	bl	800839c <_Bfree>
 80080be:	e6a8      	b.n	8007e12 <_dtoa_r+0x67a>
 80080c0:	2700      	movs	r7, #0
 80080c2:	463e      	mov	r6, r7
 80080c4:	e7e1      	b.n	800808a <_dtoa_r+0x8f2>
 80080c6:	f8dd a020 	ldr.w	sl, [sp, #32]
 80080ca:	463e      	mov	r6, r7
 80080cc:	e5a9      	b.n	8007c22 <_dtoa_r+0x48a>
 80080ce:	bf00      	nop
 80080d0:	40240000 	.word	0x40240000
 80080d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80080d6:	f8cd 9008 	str.w	r9, [sp, #8]
 80080da:	2b00      	cmp	r3, #0
 80080dc:	f000 80fa 	beq.w	80082d4 <_dtoa_r+0xb3c>
 80080e0:	2d00      	cmp	r5, #0
 80080e2:	dd05      	ble.n	80080f0 <_dtoa_r+0x958>
 80080e4:	4631      	mov	r1, r6
 80080e6:	462a      	mov	r2, r5
 80080e8:	4620      	mov	r0, r4
 80080ea:	f000 fae5 	bl	80086b8 <__lshift>
 80080ee:	4606      	mov	r6, r0
 80080f0:	9b07      	ldr	r3, [sp, #28]
 80080f2:	2b00      	cmp	r3, #0
 80080f4:	d04c      	beq.n	8008190 <_dtoa_r+0x9f8>
 80080f6:	6871      	ldr	r1, [r6, #4]
 80080f8:	4620      	mov	r0, r4
 80080fa:	f000 f91b 	bl	8008334 <_Balloc>
 80080fe:	6932      	ldr	r2, [r6, #16]
 8008100:	3202      	adds	r2, #2
 8008102:	4605      	mov	r5, r0
 8008104:	0092      	lsls	r2, r2, #2
 8008106:	f106 010c 	add.w	r1, r6, #12
 800810a:	300c      	adds	r0, #12
 800810c:	f7fe fe28 	bl	8006d60 <memcpy>
 8008110:	2201      	movs	r2, #1
 8008112:	4629      	mov	r1, r5
 8008114:	4620      	mov	r0, r4
 8008116:	f000 facf 	bl	80086b8 <__lshift>
 800811a:	9b00      	ldr	r3, [sp, #0]
 800811c:	f8cd b014 	str.w	fp, [sp, #20]
 8008120:	f003 0301 	and.w	r3, r3, #1
 8008124:	46b1      	mov	r9, r6
 8008126:	9307      	str	r3, [sp, #28]
 8008128:	4606      	mov	r6, r0
 800812a:	4639      	mov	r1, r7
 800812c:	9804      	ldr	r0, [sp, #16]
 800812e:	f7ff faa7 	bl	8007680 <quorem>
 8008132:	4649      	mov	r1, r9
 8008134:	4605      	mov	r5, r0
 8008136:	f100 0830 	add.w	r8, r0, #48	; 0x30
 800813a:	9804      	ldr	r0, [sp, #16]
 800813c:	f000 fb10 	bl	8008760 <__mcmp>
 8008140:	4632      	mov	r2, r6
 8008142:	9000      	str	r0, [sp, #0]
 8008144:	4639      	mov	r1, r7
 8008146:	4620      	mov	r0, r4
 8008148:	f000 fb24 	bl	8008794 <__mdiff>
 800814c:	68c3      	ldr	r3, [r0, #12]
 800814e:	4602      	mov	r2, r0
 8008150:	bb03      	cbnz	r3, 8008194 <_dtoa_r+0x9fc>
 8008152:	4601      	mov	r1, r0
 8008154:	9008      	str	r0, [sp, #32]
 8008156:	9804      	ldr	r0, [sp, #16]
 8008158:	f000 fb02 	bl	8008760 <__mcmp>
 800815c:	9a08      	ldr	r2, [sp, #32]
 800815e:	4603      	mov	r3, r0
 8008160:	4611      	mov	r1, r2
 8008162:	4620      	mov	r0, r4
 8008164:	9308      	str	r3, [sp, #32]
 8008166:	f000 f919 	bl	800839c <_Bfree>
 800816a:	9b08      	ldr	r3, [sp, #32]
 800816c:	b9a3      	cbnz	r3, 8008198 <_dtoa_r+0xa00>
 800816e:	9a06      	ldr	r2, [sp, #24]
 8008170:	b992      	cbnz	r2, 8008198 <_dtoa_r+0xa00>
 8008172:	9a07      	ldr	r2, [sp, #28]
 8008174:	b982      	cbnz	r2, 8008198 <_dtoa_r+0xa00>
 8008176:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 800817a:	d029      	beq.n	80081d0 <_dtoa_r+0xa38>
 800817c:	9b00      	ldr	r3, [sp, #0]
 800817e:	2b00      	cmp	r3, #0
 8008180:	dd01      	ble.n	8008186 <_dtoa_r+0x9ee>
 8008182:	f105 0831 	add.w	r8, r5, #49	; 0x31
 8008186:	9b05      	ldr	r3, [sp, #20]
 8008188:	1c5d      	adds	r5, r3, #1
 800818a:	f883 8000 	strb.w	r8, [r3]
 800818e:	e782      	b.n	8008096 <_dtoa_r+0x8fe>
 8008190:	4630      	mov	r0, r6
 8008192:	e7c2      	b.n	800811a <_dtoa_r+0x982>
 8008194:	2301      	movs	r3, #1
 8008196:	e7e3      	b.n	8008160 <_dtoa_r+0x9c8>
 8008198:	9a00      	ldr	r2, [sp, #0]
 800819a:	2a00      	cmp	r2, #0
 800819c:	db04      	blt.n	80081a8 <_dtoa_r+0xa10>
 800819e:	d125      	bne.n	80081ec <_dtoa_r+0xa54>
 80081a0:	9a06      	ldr	r2, [sp, #24]
 80081a2:	bb1a      	cbnz	r2, 80081ec <_dtoa_r+0xa54>
 80081a4:	9a07      	ldr	r2, [sp, #28]
 80081a6:	bb0a      	cbnz	r2, 80081ec <_dtoa_r+0xa54>
 80081a8:	2b00      	cmp	r3, #0
 80081aa:	ddec      	ble.n	8008186 <_dtoa_r+0x9ee>
 80081ac:	2201      	movs	r2, #1
 80081ae:	9904      	ldr	r1, [sp, #16]
 80081b0:	4620      	mov	r0, r4
 80081b2:	f000 fa81 	bl	80086b8 <__lshift>
 80081b6:	4639      	mov	r1, r7
 80081b8:	9004      	str	r0, [sp, #16]
 80081ba:	f000 fad1 	bl	8008760 <__mcmp>
 80081be:	2800      	cmp	r0, #0
 80081c0:	dc03      	bgt.n	80081ca <_dtoa_r+0xa32>
 80081c2:	d1e0      	bne.n	8008186 <_dtoa_r+0x9ee>
 80081c4:	f018 0f01 	tst.w	r8, #1
 80081c8:	d0dd      	beq.n	8008186 <_dtoa_r+0x9ee>
 80081ca:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 80081ce:	d1d8      	bne.n	8008182 <_dtoa_r+0x9ea>
 80081d0:	9b05      	ldr	r3, [sp, #20]
 80081d2:	9a05      	ldr	r2, [sp, #20]
 80081d4:	1c5d      	adds	r5, r3, #1
 80081d6:	2339      	movs	r3, #57	; 0x39
 80081d8:	7013      	strb	r3, [r2, #0]
 80081da:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80081de:	2b39      	cmp	r3, #57	; 0x39
 80081e0:	f105 32ff 	add.w	r2, r5, #4294967295
 80081e4:	d04f      	beq.n	8008286 <_dtoa_r+0xaee>
 80081e6:	3301      	adds	r3, #1
 80081e8:	7013      	strb	r3, [r2, #0]
 80081ea:	e754      	b.n	8008096 <_dtoa_r+0x8fe>
 80081ec:	9a05      	ldr	r2, [sp, #20]
 80081ee:	2b00      	cmp	r3, #0
 80081f0:	f102 0501 	add.w	r5, r2, #1
 80081f4:	dd06      	ble.n	8008204 <_dtoa_r+0xa6c>
 80081f6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 80081fa:	d0e9      	beq.n	80081d0 <_dtoa_r+0xa38>
 80081fc:	f108 0801 	add.w	r8, r8, #1
 8008200:	9b05      	ldr	r3, [sp, #20]
 8008202:	e7c2      	b.n	800818a <_dtoa_r+0x9f2>
 8008204:	9a02      	ldr	r2, [sp, #8]
 8008206:	f805 8c01 	strb.w	r8, [r5, #-1]
 800820a:	eba5 030b 	sub.w	r3, r5, fp
 800820e:	4293      	cmp	r3, r2
 8008210:	d021      	beq.n	8008256 <_dtoa_r+0xabe>
 8008212:	2300      	movs	r3, #0
 8008214:	220a      	movs	r2, #10
 8008216:	9904      	ldr	r1, [sp, #16]
 8008218:	4620      	mov	r0, r4
 800821a:	f000 f8d6 	bl	80083ca <__multadd>
 800821e:	45b1      	cmp	r9, r6
 8008220:	9004      	str	r0, [sp, #16]
 8008222:	f04f 0300 	mov.w	r3, #0
 8008226:	f04f 020a 	mov.w	r2, #10
 800822a:	4649      	mov	r1, r9
 800822c:	4620      	mov	r0, r4
 800822e:	d105      	bne.n	800823c <_dtoa_r+0xaa4>
 8008230:	f000 f8cb 	bl	80083ca <__multadd>
 8008234:	4681      	mov	r9, r0
 8008236:	4606      	mov	r6, r0
 8008238:	9505      	str	r5, [sp, #20]
 800823a:	e776      	b.n	800812a <_dtoa_r+0x992>
 800823c:	f000 f8c5 	bl	80083ca <__multadd>
 8008240:	4631      	mov	r1, r6
 8008242:	4681      	mov	r9, r0
 8008244:	2300      	movs	r3, #0
 8008246:	220a      	movs	r2, #10
 8008248:	4620      	mov	r0, r4
 800824a:	f000 f8be 	bl	80083ca <__multadd>
 800824e:	4606      	mov	r6, r0
 8008250:	e7f2      	b.n	8008238 <_dtoa_r+0xaa0>
 8008252:	f04f 0900 	mov.w	r9, #0
 8008256:	2201      	movs	r2, #1
 8008258:	9904      	ldr	r1, [sp, #16]
 800825a:	4620      	mov	r0, r4
 800825c:	f000 fa2c 	bl	80086b8 <__lshift>
 8008260:	4639      	mov	r1, r7
 8008262:	9004      	str	r0, [sp, #16]
 8008264:	f000 fa7c 	bl	8008760 <__mcmp>
 8008268:	2800      	cmp	r0, #0
 800826a:	dcb6      	bgt.n	80081da <_dtoa_r+0xa42>
 800826c:	d102      	bne.n	8008274 <_dtoa_r+0xadc>
 800826e:	f018 0f01 	tst.w	r8, #1
 8008272:	d1b2      	bne.n	80081da <_dtoa_r+0xa42>
 8008274:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8008278:	2b30      	cmp	r3, #48	; 0x30
 800827a:	f105 32ff 	add.w	r2, r5, #4294967295
 800827e:	f47f af0a 	bne.w	8008096 <_dtoa_r+0x8fe>
 8008282:	4615      	mov	r5, r2
 8008284:	e7f6      	b.n	8008274 <_dtoa_r+0xadc>
 8008286:	4593      	cmp	fp, r2
 8008288:	d105      	bne.n	8008296 <_dtoa_r+0xafe>
 800828a:	2331      	movs	r3, #49	; 0x31
 800828c:	f10a 0a01 	add.w	sl, sl, #1
 8008290:	f88b 3000 	strb.w	r3, [fp]
 8008294:	e6ff      	b.n	8008096 <_dtoa_r+0x8fe>
 8008296:	4615      	mov	r5, r2
 8008298:	e79f      	b.n	80081da <_dtoa_r+0xa42>
 800829a:	f8df b064 	ldr.w	fp, [pc, #100]	; 8008300 <_dtoa_r+0xb68>
 800829e:	e007      	b.n	80082b0 <_dtoa_r+0xb18>
 80082a0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80082a2:	f8df b060 	ldr.w	fp, [pc, #96]	; 8008304 <_dtoa_r+0xb6c>
 80082a6:	b11b      	cbz	r3, 80082b0 <_dtoa_r+0xb18>
 80082a8:	f10b 0308 	add.w	r3, fp, #8
 80082ac:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80082ae:	6013      	str	r3, [r2, #0]
 80082b0:	4658      	mov	r0, fp
 80082b2:	b017      	add	sp, #92	; 0x5c
 80082b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80082b8:	9b06      	ldr	r3, [sp, #24]
 80082ba:	2b01      	cmp	r3, #1
 80082bc:	f77f ae35 	ble.w	8007f2a <_dtoa_r+0x792>
 80082c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80082c2:	9307      	str	r3, [sp, #28]
 80082c4:	e649      	b.n	8007f5a <_dtoa_r+0x7c2>
 80082c6:	9b02      	ldr	r3, [sp, #8]
 80082c8:	2b00      	cmp	r3, #0
 80082ca:	dc03      	bgt.n	80082d4 <_dtoa_r+0xb3c>
 80082cc:	9b06      	ldr	r3, [sp, #24]
 80082ce:	2b02      	cmp	r3, #2
 80082d0:	f73f aecc 	bgt.w	800806c <_dtoa_r+0x8d4>
 80082d4:	465d      	mov	r5, fp
 80082d6:	4639      	mov	r1, r7
 80082d8:	9804      	ldr	r0, [sp, #16]
 80082da:	f7ff f9d1 	bl	8007680 <quorem>
 80082de:	f100 0830 	add.w	r8, r0, #48	; 0x30
 80082e2:	f805 8b01 	strb.w	r8, [r5], #1
 80082e6:	9a02      	ldr	r2, [sp, #8]
 80082e8:	eba5 030b 	sub.w	r3, r5, fp
 80082ec:	429a      	cmp	r2, r3
 80082ee:	ddb0      	ble.n	8008252 <_dtoa_r+0xaba>
 80082f0:	2300      	movs	r3, #0
 80082f2:	220a      	movs	r2, #10
 80082f4:	9904      	ldr	r1, [sp, #16]
 80082f6:	4620      	mov	r0, r4
 80082f8:	f000 f867 	bl	80083ca <__multadd>
 80082fc:	9004      	str	r0, [sp, #16]
 80082fe:	e7ea      	b.n	80082d6 <_dtoa_r+0xb3e>
 8008300:	08008f8c 	.word	0x08008f8c
 8008304:	08008fb0 	.word	0x08008fb0

08008308 <_localeconv_r>:
 8008308:	4b04      	ldr	r3, [pc, #16]	; (800831c <_localeconv_r+0x14>)
 800830a:	681b      	ldr	r3, [r3, #0]
 800830c:	6a18      	ldr	r0, [r3, #32]
 800830e:	4b04      	ldr	r3, [pc, #16]	; (8008320 <_localeconv_r+0x18>)
 8008310:	2800      	cmp	r0, #0
 8008312:	bf08      	it	eq
 8008314:	4618      	moveq	r0, r3
 8008316:	30f0      	adds	r0, #240	; 0xf0
 8008318:	4770      	bx	lr
 800831a:	bf00      	nop
 800831c:	20000028 	.word	0x20000028
 8008320:	2000008c 	.word	0x2000008c

08008324 <malloc>:
 8008324:	4b02      	ldr	r3, [pc, #8]	; (8008330 <malloc+0xc>)
 8008326:	4601      	mov	r1, r0
 8008328:	6818      	ldr	r0, [r3, #0]
 800832a:	f000 bb3b 	b.w	80089a4 <_malloc_r>
 800832e:	bf00      	nop
 8008330:	20000028 	.word	0x20000028

08008334 <_Balloc>:
 8008334:	b570      	push	{r4, r5, r6, lr}
 8008336:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8008338:	4604      	mov	r4, r0
 800833a:	460e      	mov	r6, r1
 800833c:	b93d      	cbnz	r5, 800834e <_Balloc+0x1a>
 800833e:	2010      	movs	r0, #16
 8008340:	f7ff fff0 	bl	8008324 <malloc>
 8008344:	6260      	str	r0, [r4, #36]	; 0x24
 8008346:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800834a:	6005      	str	r5, [r0, #0]
 800834c:	60c5      	str	r5, [r0, #12]
 800834e:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8008350:	68eb      	ldr	r3, [r5, #12]
 8008352:	b183      	cbz	r3, 8008376 <_Balloc+0x42>
 8008354:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008356:	68db      	ldr	r3, [r3, #12]
 8008358:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 800835c:	b9b8      	cbnz	r0, 800838e <_Balloc+0x5a>
 800835e:	2101      	movs	r1, #1
 8008360:	fa01 f506 	lsl.w	r5, r1, r6
 8008364:	1d6a      	adds	r2, r5, #5
 8008366:	0092      	lsls	r2, r2, #2
 8008368:	4620      	mov	r0, r4
 800836a:	f000 fabf 	bl	80088ec <_calloc_r>
 800836e:	b160      	cbz	r0, 800838a <_Balloc+0x56>
 8008370:	e9c0 6501 	strd	r6, r5, [r0, #4]
 8008374:	e00e      	b.n	8008394 <_Balloc+0x60>
 8008376:	2221      	movs	r2, #33	; 0x21
 8008378:	2104      	movs	r1, #4
 800837a:	4620      	mov	r0, r4
 800837c:	f000 fab6 	bl	80088ec <_calloc_r>
 8008380:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008382:	60e8      	str	r0, [r5, #12]
 8008384:	68db      	ldr	r3, [r3, #12]
 8008386:	2b00      	cmp	r3, #0
 8008388:	d1e4      	bne.n	8008354 <_Balloc+0x20>
 800838a:	2000      	movs	r0, #0
 800838c:	bd70      	pop	{r4, r5, r6, pc}
 800838e:	6802      	ldr	r2, [r0, #0]
 8008390:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 8008394:	2300      	movs	r3, #0
 8008396:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800839a:	e7f7      	b.n	800838c <_Balloc+0x58>

0800839c <_Bfree>:
 800839c:	b570      	push	{r4, r5, r6, lr}
 800839e:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80083a0:	4606      	mov	r6, r0
 80083a2:	460d      	mov	r5, r1
 80083a4:	b93c      	cbnz	r4, 80083b6 <_Bfree+0x1a>
 80083a6:	2010      	movs	r0, #16
 80083a8:	f7ff ffbc 	bl	8008324 <malloc>
 80083ac:	6270      	str	r0, [r6, #36]	; 0x24
 80083ae:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80083b2:	6004      	str	r4, [r0, #0]
 80083b4:	60c4      	str	r4, [r0, #12]
 80083b6:	b13d      	cbz	r5, 80083c8 <_Bfree+0x2c>
 80083b8:	6a73      	ldr	r3, [r6, #36]	; 0x24
 80083ba:	686a      	ldr	r2, [r5, #4]
 80083bc:	68db      	ldr	r3, [r3, #12]
 80083be:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80083c2:	6029      	str	r1, [r5, #0]
 80083c4:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 80083c8:	bd70      	pop	{r4, r5, r6, pc}

080083ca <__multadd>:
 80083ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80083ce:	690d      	ldr	r5, [r1, #16]
 80083d0:	461f      	mov	r7, r3
 80083d2:	4606      	mov	r6, r0
 80083d4:	460c      	mov	r4, r1
 80083d6:	f101 0c14 	add.w	ip, r1, #20
 80083da:	2300      	movs	r3, #0
 80083dc:	f8dc 0000 	ldr.w	r0, [ip]
 80083e0:	b281      	uxth	r1, r0
 80083e2:	fb02 7101 	mla	r1, r2, r1, r7
 80083e6:	0c0f      	lsrs	r7, r1, #16
 80083e8:	0c00      	lsrs	r0, r0, #16
 80083ea:	fb02 7000 	mla	r0, r2, r0, r7
 80083ee:	b289      	uxth	r1, r1
 80083f0:	3301      	adds	r3, #1
 80083f2:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 80083f6:	429d      	cmp	r5, r3
 80083f8:	ea4f 4710 	mov.w	r7, r0, lsr #16
 80083fc:	f84c 1b04 	str.w	r1, [ip], #4
 8008400:	dcec      	bgt.n	80083dc <__multadd+0x12>
 8008402:	b1d7      	cbz	r7, 800843a <__multadd+0x70>
 8008404:	68a3      	ldr	r3, [r4, #8]
 8008406:	42ab      	cmp	r3, r5
 8008408:	dc12      	bgt.n	8008430 <__multadd+0x66>
 800840a:	6861      	ldr	r1, [r4, #4]
 800840c:	4630      	mov	r0, r6
 800840e:	3101      	adds	r1, #1
 8008410:	f7ff ff90 	bl	8008334 <_Balloc>
 8008414:	6922      	ldr	r2, [r4, #16]
 8008416:	3202      	adds	r2, #2
 8008418:	f104 010c 	add.w	r1, r4, #12
 800841c:	4680      	mov	r8, r0
 800841e:	0092      	lsls	r2, r2, #2
 8008420:	300c      	adds	r0, #12
 8008422:	f7fe fc9d 	bl	8006d60 <memcpy>
 8008426:	4621      	mov	r1, r4
 8008428:	4630      	mov	r0, r6
 800842a:	f7ff ffb7 	bl	800839c <_Bfree>
 800842e:	4644      	mov	r4, r8
 8008430:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8008434:	3501      	adds	r5, #1
 8008436:	615f      	str	r7, [r3, #20]
 8008438:	6125      	str	r5, [r4, #16]
 800843a:	4620      	mov	r0, r4
 800843c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008440 <__hi0bits>:
 8008440:	0c02      	lsrs	r2, r0, #16
 8008442:	0412      	lsls	r2, r2, #16
 8008444:	4603      	mov	r3, r0
 8008446:	b9b2      	cbnz	r2, 8008476 <__hi0bits+0x36>
 8008448:	0403      	lsls	r3, r0, #16
 800844a:	2010      	movs	r0, #16
 800844c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8008450:	bf04      	itt	eq
 8008452:	021b      	lsleq	r3, r3, #8
 8008454:	3008      	addeq	r0, #8
 8008456:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800845a:	bf04      	itt	eq
 800845c:	011b      	lsleq	r3, r3, #4
 800845e:	3004      	addeq	r0, #4
 8008460:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8008464:	bf04      	itt	eq
 8008466:	009b      	lsleq	r3, r3, #2
 8008468:	3002      	addeq	r0, #2
 800846a:	2b00      	cmp	r3, #0
 800846c:	db06      	blt.n	800847c <__hi0bits+0x3c>
 800846e:	005b      	lsls	r3, r3, #1
 8008470:	d503      	bpl.n	800847a <__hi0bits+0x3a>
 8008472:	3001      	adds	r0, #1
 8008474:	4770      	bx	lr
 8008476:	2000      	movs	r0, #0
 8008478:	e7e8      	b.n	800844c <__hi0bits+0xc>
 800847a:	2020      	movs	r0, #32
 800847c:	4770      	bx	lr

0800847e <__lo0bits>:
 800847e:	6803      	ldr	r3, [r0, #0]
 8008480:	f013 0207 	ands.w	r2, r3, #7
 8008484:	4601      	mov	r1, r0
 8008486:	d00b      	beq.n	80084a0 <__lo0bits+0x22>
 8008488:	07da      	lsls	r2, r3, #31
 800848a:	d423      	bmi.n	80084d4 <__lo0bits+0x56>
 800848c:	0798      	lsls	r0, r3, #30
 800848e:	bf49      	itett	mi
 8008490:	085b      	lsrmi	r3, r3, #1
 8008492:	089b      	lsrpl	r3, r3, #2
 8008494:	2001      	movmi	r0, #1
 8008496:	600b      	strmi	r3, [r1, #0]
 8008498:	bf5c      	itt	pl
 800849a:	600b      	strpl	r3, [r1, #0]
 800849c:	2002      	movpl	r0, #2
 800849e:	4770      	bx	lr
 80084a0:	b298      	uxth	r0, r3
 80084a2:	b9a8      	cbnz	r0, 80084d0 <__lo0bits+0x52>
 80084a4:	0c1b      	lsrs	r3, r3, #16
 80084a6:	2010      	movs	r0, #16
 80084a8:	f013 0fff 	tst.w	r3, #255	; 0xff
 80084ac:	bf04      	itt	eq
 80084ae:	0a1b      	lsreq	r3, r3, #8
 80084b0:	3008      	addeq	r0, #8
 80084b2:	071a      	lsls	r2, r3, #28
 80084b4:	bf04      	itt	eq
 80084b6:	091b      	lsreq	r3, r3, #4
 80084b8:	3004      	addeq	r0, #4
 80084ba:	079a      	lsls	r2, r3, #30
 80084bc:	bf04      	itt	eq
 80084be:	089b      	lsreq	r3, r3, #2
 80084c0:	3002      	addeq	r0, #2
 80084c2:	07da      	lsls	r2, r3, #31
 80084c4:	d402      	bmi.n	80084cc <__lo0bits+0x4e>
 80084c6:	085b      	lsrs	r3, r3, #1
 80084c8:	d006      	beq.n	80084d8 <__lo0bits+0x5a>
 80084ca:	3001      	adds	r0, #1
 80084cc:	600b      	str	r3, [r1, #0]
 80084ce:	4770      	bx	lr
 80084d0:	4610      	mov	r0, r2
 80084d2:	e7e9      	b.n	80084a8 <__lo0bits+0x2a>
 80084d4:	2000      	movs	r0, #0
 80084d6:	4770      	bx	lr
 80084d8:	2020      	movs	r0, #32
 80084da:	4770      	bx	lr

080084dc <__i2b>:
 80084dc:	b510      	push	{r4, lr}
 80084de:	460c      	mov	r4, r1
 80084e0:	2101      	movs	r1, #1
 80084e2:	f7ff ff27 	bl	8008334 <_Balloc>
 80084e6:	2201      	movs	r2, #1
 80084e8:	6144      	str	r4, [r0, #20]
 80084ea:	6102      	str	r2, [r0, #16]
 80084ec:	bd10      	pop	{r4, pc}

080084ee <__multiply>:
 80084ee:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80084f2:	4614      	mov	r4, r2
 80084f4:	690a      	ldr	r2, [r1, #16]
 80084f6:	6923      	ldr	r3, [r4, #16]
 80084f8:	429a      	cmp	r2, r3
 80084fa:	bfb8      	it	lt
 80084fc:	460b      	movlt	r3, r1
 80084fe:	4688      	mov	r8, r1
 8008500:	bfbc      	itt	lt
 8008502:	46a0      	movlt	r8, r4
 8008504:	461c      	movlt	r4, r3
 8008506:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800850a:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800850e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8008512:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8008516:	eb07 0609 	add.w	r6, r7, r9
 800851a:	42b3      	cmp	r3, r6
 800851c:	bfb8      	it	lt
 800851e:	3101      	addlt	r1, #1
 8008520:	f7ff ff08 	bl	8008334 <_Balloc>
 8008524:	f100 0514 	add.w	r5, r0, #20
 8008528:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 800852c:	462b      	mov	r3, r5
 800852e:	2200      	movs	r2, #0
 8008530:	4573      	cmp	r3, lr
 8008532:	d316      	bcc.n	8008562 <__multiply+0x74>
 8008534:	f104 0214 	add.w	r2, r4, #20
 8008538:	f108 0114 	add.w	r1, r8, #20
 800853c:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 8008540:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8008544:	9300      	str	r3, [sp, #0]
 8008546:	9b00      	ldr	r3, [sp, #0]
 8008548:	9201      	str	r2, [sp, #4]
 800854a:	4293      	cmp	r3, r2
 800854c:	d80c      	bhi.n	8008568 <__multiply+0x7a>
 800854e:	2e00      	cmp	r6, #0
 8008550:	dd03      	ble.n	800855a <__multiply+0x6c>
 8008552:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8008556:	2b00      	cmp	r3, #0
 8008558:	d05d      	beq.n	8008616 <__multiply+0x128>
 800855a:	6106      	str	r6, [r0, #16]
 800855c:	b003      	add	sp, #12
 800855e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008562:	f843 2b04 	str.w	r2, [r3], #4
 8008566:	e7e3      	b.n	8008530 <__multiply+0x42>
 8008568:	f8b2 b000 	ldrh.w	fp, [r2]
 800856c:	f1bb 0f00 	cmp.w	fp, #0
 8008570:	d023      	beq.n	80085ba <__multiply+0xcc>
 8008572:	4689      	mov	r9, r1
 8008574:	46ac      	mov	ip, r5
 8008576:	f04f 0800 	mov.w	r8, #0
 800857a:	f859 4b04 	ldr.w	r4, [r9], #4
 800857e:	f8dc a000 	ldr.w	sl, [ip]
 8008582:	b2a3      	uxth	r3, r4
 8008584:	fa1f fa8a 	uxth.w	sl, sl
 8008588:	fb0b a303 	mla	r3, fp, r3, sl
 800858c:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8008590:	f8dc 4000 	ldr.w	r4, [ip]
 8008594:	4443      	add	r3, r8
 8008596:	ea4f 4814 	mov.w	r8, r4, lsr #16
 800859a:	fb0b 840a 	mla	r4, fp, sl, r8
 800859e:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 80085a2:	46e2      	mov	sl, ip
 80085a4:	b29b      	uxth	r3, r3
 80085a6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80085aa:	454f      	cmp	r7, r9
 80085ac:	ea4f 4814 	mov.w	r8, r4, lsr #16
 80085b0:	f84a 3b04 	str.w	r3, [sl], #4
 80085b4:	d82b      	bhi.n	800860e <__multiply+0x120>
 80085b6:	f8cc 8004 	str.w	r8, [ip, #4]
 80085ba:	9b01      	ldr	r3, [sp, #4]
 80085bc:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 80085c0:	3204      	adds	r2, #4
 80085c2:	f1ba 0f00 	cmp.w	sl, #0
 80085c6:	d020      	beq.n	800860a <__multiply+0x11c>
 80085c8:	682b      	ldr	r3, [r5, #0]
 80085ca:	4689      	mov	r9, r1
 80085cc:	46a8      	mov	r8, r5
 80085ce:	f04f 0b00 	mov.w	fp, #0
 80085d2:	f8b9 c000 	ldrh.w	ip, [r9]
 80085d6:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 80085da:	fb0a 440c 	mla	r4, sl, ip, r4
 80085de:	445c      	add	r4, fp
 80085e0:	46c4      	mov	ip, r8
 80085e2:	b29b      	uxth	r3, r3
 80085e4:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80085e8:	f84c 3b04 	str.w	r3, [ip], #4
 80085ec:	f859 3b04 	ldr.w	r3, [r9], #4
 80085f0:	f8b8 b004 	ldrh.w	fp, [r8, #4]
 80085f4:	0c1b      	lsrs	r3, r3, #16
 80085f6:	fb0a b303 	mla	r3, sl, r3, fp
 80085fa:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 80085fe:	454f      	cmp	r7, r9
 8008600:	ea4f 4b13 	mov.w	fp, r3, lsr #16
 8008604:	d805      	bhi.n	8008612 <__multiply+0x124>
 8008606:	f8c8 3004 	str.w	r3, [r8, #4]
 800860a:	3504      	adds	r5, #4
 800860c:	e79b      	b.n	8008546 <__multiply+0x58>
 800860e:	46d4      	mov	ip, sl
 8008610:	e7b3      	b.n	800857a <__multiply+0x8c>
 8008612:	46e0      	mov	r8, ip
 8008614:	e7dd      	b.n	80085d2 <__multiply+0xe4>
 8008616:	3e01      	subs	r6, #1
 8008618:	e799      	b.n	800854e <__multiply+0x60>
	...

0800861c <__pow5mult>:
 800861c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008620:	4615      	mov	r5, r2
 8008622:	f012 0203 	ands.w	r2, r2, #3
 8008626:	4606      	mov	r6, r0
 8008628:	460f      	mov	r7, r1
 800862a:	d007      	beq.n	800863c <__pow5mult+0x20>
 800862c:	3a01      	subs	r2, #1
 800862e:	4c21      	ldr	r4, [pc, #132]	; (80086b4 <__pow5mult+0x98>)
 8008630:	2300      	movs	r3, #0
 8008632:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8008636:	f7ff fec8 	bl	80083ca <__multadd>
 800863a:	4607      	mov	r7, r0
 800863c:	10ad      	asrs	r5, r5, #2
 800863e:	d035      	beq.n	80086ac <__pow5mult+0x90>
 8008640:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8008642:	b93c      	cbnz	r4, 8008654 <__pow5mult+0x38>
 8008644:	2010      	movs	r0, #16
 8008646:	f7ff fe6d 	bl	8008324 <malloc>
 800864a:	6270      	str	r0, [r6, #36]	; 0x24
 800864c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8008650:	6004      	str	r4, [r0, #0]
 8008652:	60c4      	str	r4, [r0, #12]
 8008654:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8008658:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800865c:	b94c      	cbnz	r4, 8008672 <__pow5mult+0x56>
 800865e:	f240 2171 	movw	r1, #625	; 0x271
 8008662:	4630      	mov	r0, r6
 8008664:	f7ff ff3a 	bl	80084dc <__i2b>
 8008668:	2300      	movs	r3, #0
 800866a:	f8c8 0008 	str.w	r0, [r8, #8]
 800866e:	4604      	mov	r4, r0
 8008670:	6003      	str	r3, [r0, #0]
 8008672:	f04f 0800 	mov.w	r8, #0
 8008676:	07eb      	lsls	r3, r5, #31
 8008678:	d50a      	bpl.n	8008690 <__pow5mult+0x74>
 800867a:	4639      	mov	r1, r7
 800867c:	4622      	mov	r2, r4
 800867e:	4630      	mov	r0, r6
 8008680:	f7ff ff35 	bl	80084ee <__multiply>
 8008684:	4639      	mov	r1, r7
 8008686:	4681      	mov	r9, r0
 8008688:	4630      	mov	r0, r6
 800868a:	f7ff fe87 	bl	800839c <_Bfree>
 800868e:	464f      	mov	r7, r9
 8008690:	106d      	asrs	r5, r5, #1
 8008692:	d00b      	beq.n	80086ac <__pow5mult+0x90>
 8008694:	6820      	ldr	r0, [r4, #0]
 8008696:	b938      	cbnz	r0, 80086a8 <__pow5mult+0x8c>
 8008698:	4622      	mov	r2, r4
 800869a:	4621      	mov	r1, r4
 800869c:	4630      	mov	r0, r6
 800869e:	f7ff ff26 	bl	80084ee <__multiply>
 80086a2:	6020      	str	r0, [r4, #0]
 80086a4:	f8c0 8000 	str.w	r8, [r0]
 80086a8:	4604      	mov	r4, r0
 80086aa:	e7e4      	b.n	8008676 <__pow5mult+0x5a>
 80086ac:	4638      	mov	r0, r7
 80086ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80086b2:	bf00      	nop
 80086b4:	080090b0 	.word	0x080090b0

080086b8 <__lshift>:
 80086b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80086bc:	460c      	mov	r4, r1
 80086be:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80086c2:	6923      	ldr	r3, [r4, #16]
 80086c4:	6849      	ldr	r1, [r1, #4]
 80086c6:	eb0a 0903 	add.w	r9, sl, r3
 80086ca:	68a3      	ldr	r3, [r4, #8]
 80086cc:	4607      	mov	r7, r0
 80086ce:	4616      	mov	r6, r2
 80086d0:	f109 0501 	add.w	r5, r9, #1
 80086d4:	42ab      	cmp	r3, r5
 80086d6:	db32      	blt.n	800873e <__lshift+0x86>
 80086d8:	4638      	mov	r0, r7
 80086da:	f7ff fe2b 	bl	8008334 <_Balloc>
 80086de:	2300      	movs	r3, #0
 80086e0:	4680      	mov	r8, r0
 80086e2:	f100 0114 	add.w	r1, r0, #20
 80086e6:	461a      	mov	r2, r3
 80086e8:	4553      	cmp	r3, sl
 80086ea:	db2b      	blt.n	8008744 <__lshift+0x8c>
 80086ec:	6920      	ldr	r0, [r4, #16]
 80086ee:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80086f2:	f104 0314 	add.w	r3, r4, #20
 80086f6:	f016 021f 	ands.w	r2, r6, #31
 80086fa:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80086fe:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8008702:	d025      	beq.n	8008750 <__lshift+0x98>
 8008704:	f1c2 0e20 	rsb	lr, r2, #32
 8008708:	2000      	movs	r0, #0
 800870a:	681e      	ldr	r6, [r3, #0]
 800870c:	468a      	mov	sl, r1
 800870e:	4096      	lsls	r6, r2
 8008710:	4330      	orrs	r0, r6
 8008712:	f84a 0b04 	str.w	r0, [sl], #4
 8008716:	f853 0b04 	ldr.w	r0, [r3], #4
 800871a:	459c      	cmp	ip, r3
 800871c:	fa20 f00e 	lsr.w	r0, r0, lr
 8008720:	d814      	bhi.n	800874c <__lshift+0x94>
 8008722:	6048      	str	r0, [r1, #4]
 8008724:	b108      	cbz	r0, 800872a <__lshift+0x72>
 8008726:	f109 0502 	add.w	r5, r9, #2
 800872a:	3d01      	subs	r5, #1
 800872c:	4638      	mov	r0, r7
 800872e:	f8c8 5010 	str.w	r5, [r8, #16]
 8008732:	4621      	mov	r1, r4
 8008734:	f7ff fe32 	bl	800839c <_Bfree>
 8008738:	4640      	mov	r0, r8
 800873a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800873e:	3101      	adds	r1, #1
 8008740:	005b      	lsls	r3, r3, #1
 8008742:	e7c7      	b.n	80086d4 <__lshift+0x1c>
 8008744:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8008748:	3301      	adds	r3, #1
 800874a:	e7cd      	b.n	80086e8 <__lshift+0x30>
 800874c:	4651      	mov	r1, sl
 800874e:	e7dc      	b.n	800870a <__lshift+0x52>
 8008750:	3904      	subs	r1, #4
 8008752:	f853 2b04 	ldr.w	r2, [r3], #4
 8008756:	f841 2f04 	str.w	r2, [r1, #4]!
 800875a:	459c      	cmp	ip, r3
 800875c:	d8f9      	bhi.n	8008752 <__lshift+0x9a>
 800875e:	e7e4      	b.n	800872a <__lshift+0x72>

08008760 <__mcmp>:
 8008760:	6903      	ldr	r3, [r0, #16]
 8008762:	690a      	ldr	r2, [r1, #16]
 8008764:	1a9b      	subs	r3, r3, r2
 8008766:	b530      	push	{r4, r5, lr}
 8008768:	d10c      	bne.n	8008784 <__mcmp+0x24>
 800876a:	0092      	lsls	r2, r2, #2
 800876c:	3014      	adds	r0, #20
 800876e:	3114      	adds	r1, #20
 8008770:	1884      	adds	r4, r0, r2
 8008772:	4411      	add	r1, r2
 8008774:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8008778:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800877c:	4295      	cmp	r5, r2
 800877e:	d003      	beq.n	8008788 <__mcmp+0x28>
 8008780:	d305      	bcc.n	800878e <__mcmp+0x2e>
 8008782:	2301      	movs	r3, #1
 8008784:	4618      	mov	r0, r3
 8008786:	bd30      	pop	{r4, r5, pc}
 8008788:	42a0      	cmp	r0, r4
 800878a:	d3f3      	bcc.n	8008774 <__mcmp+0x14>
 800878c:	e7fa      	b.n	8008784 <__mcmp+0x24>
 800878e:	f04f 33ff 	mov.w	r3, #4294967295
 8008792:	e7f7      	b.n	8008784 <__mcmp+0x24>

08008794 <__mdiff>:
 8008794:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008798:	460d      	mov	r5, r1
 800879a:	4607      	mov	r7, r0
 800879c:	4611      	mov	r1, r2
 800879e:	4628      	mov	r0, r5
 80087a0:	4614      	mov	r4, r2
 80087a2:	f7ff ffdd 	bl	8008760 <__mcmp>
 80087a6:	1e06      	subs	r6, r0, #0
 80087a8:	d108      	bne.n	80087bc <__mdiff+0x28>
 80087aa:	4631      	mov	r1, r6
 80087ac:	4638      	mov	r0, r7
 80087ae:	f7ff fdc1 	bl	8008334 <_Balloc>
 80087b2:	2301      	movs	r3, #1
 80087b4:	e9c0 3604 	strd	r3, r6, [r0, #16]
 80087b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80087bc:	bfa4      	itt	ge
 80087be:	4623      	movge	r3, r4
 80087c0:	462c      	movge	r4, r5
 80087c2:	4638      	mov	r0, r7
 80087c4:	6861      	ldr	r1, [r4, #4]
 80087c6:	bfa6      	itte	ge
 80087c8:	461d      	movge	r5, r3
 80087ca:	2600      	movge	r6, #0
 80087cc:	2601      	movlt	r6, #1
 80087ce:	f7ff fdb1 	bl	8008334 <_Balloc>
 80087d2:	692b      	ldr	r3, [r5, #16]
 80087d4:	60c6      	str	r6, [r0, #12]
 80087d6:	6926      	ldr	r6, [r4, #16]
 80087d8:	f105 0914 	add.w	r9, r5, #20
 80087dc:	f104 0214 	add.w	r2, r4, #20
 80087e0:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 80087e4:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 80087e8:	f100 0514 	add.w	r5, r0, #20
 80087ec:	f04f 0e00 	mov.w	lr, #0
 80087f0:	f852 ab04 	ldr.w	sl, [r2], #4
 80087f4:	f859 4b04 	ldr.w	r4, [r9], #4
 80087f8:	fa1e f18a 	uxtah	r1, lr, sl
 80087fc:	b2a3      	uxth	r3, r4
 80087fe:	1ac9      	subs	r1, r1, r3
 8008800:	0c23      	lsrs	r3, r4, #16
 8008802:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
 8008806:	eb03 4321 	add.w	r3, r3, r1, asr #16
 800880a:	b289      	uxth	r1, r1
 800880c:	ea4f 4e23 	mov.w	lr, r3, asr #16
 8008810:	45c8      	cmp	r8, r9
 8008812:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8008816:	4694      	mov	ip, r2
 8008818:	f845 3b04 	str.w	r3, [r5], #4
 800881c:	d8e8      	bhi.n	80087f0 <__mdiff+0x5c>
 800881e:	45bc      	cmp	ip, r7
 8008820:	d304      	bcc.n	800882c <__mdiff+0x98>
 8008822:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8008826:	b183      	cbz	r3, 800884a <__mdiff+0xb6>
 8008828:	6106      	str	r6, [r0, #16]
 800882a:	e7c5      	b.n	80087b8 <__mdiff+0x24>
 800882c:	f85c 1b04 	ldr.w	r1, [ip], #4
 8008830:	fa1e f381 	uxtah	r3, lr, r1
 8008834:	141a      	asrs	r2, r3, #16
 8008836:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800883a:	b29b      	uxth	r3, r3
 800883c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8008840:	ea4f 4e22 	mov.w	lr, r2, asr #16
 8008844:	f845 3b04 	str.w	r3, [r5], #4
 8008848:	e7e9      	b.n	800881e <__mdiff+0x8a>
 800884a:	3e01      	subs	r6, #1
 800884c:	e7e9      	b.n	8008822 <__mdiff+0x8e>

0800884e <__d2b>:
 800884e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008852:	460e      	mov	r6, r1
 8008854:	2101      	movs	r1, #1
 8008856:	ec59 8b10 	vmov	r8, r9, d0
 800885a:	4615      	mov	r5, r2
 800885c:	f7ff fd6a 	bl	8008334 <_Balloc>
 8008860:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8008864:	4607      	mov	r7, r0
 8008866:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800886a:	bb34      	cbnz	r4, 80088ba <__d2b+0x6c>
 800886c:	9301      	str	r3, [sp, #4]
 800886e:	f1b8 0300 	subs.w	r3, r8, #0
 8008872:	d027      	beq.n	80088c4 <__d2b+0x76>
 8008874:	a802      	add	r0, sp, #8
 8008876:	f840 3d08 	str.w	r3, [r0, #-8]!
 800887a:	f7ff fe00 	bl	800847e <__lo0bits>
 800887e:	9900      	ldr	r1, [sp, #0]
 8008880:	b1f0      	cbz	r0, 80088c0 <__d2b+0x72>
 8008882:	9a01      	ldr	r2, [sp, #4]
 8008884:	f1c0 0320 	rsb	r3, r0, #32
 8008888:	fa02 f303 	lsl.w	r3, r2, r3
 800888c:	430b      	orrs	r3, r1
 800888e:	40c2      	lsrs	r2, r0
 8008890:	617b      	str	r3, [r7, #20]
 8008892:	9201      	str	r2, [sp, #4]
 8008894:	9b01      	ldr	r3, [sp, #4]
 8008896:	61bb      	str	r3, [r7, #24]
 8008898:	2b00      	cmp	r3, #0
 800889a:	bf14      	ite	ne
 800889c:	2102      	movne	r1, #2
 800889e:	2101      	moveq	r1, #1
 80088a0:	6139      	str	r1, [r7, #16]
 80088a2:	b1c4      	cbz	r4, 80088d6 <__d2b+0x88>
 80088a4:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 80088a8:	4404      	add	r4, r0
 80088aa:	6034      	str	r4, [r6, #0]
 80088ac:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80088b0:	6028      	str	r0, [r5, #0]
 80088b2:	4638      	mov	r0, r7
 80088b4:	b003      	add	sp, #12
 80088b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80088ba:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80088be:	e7d5      	b.n	800886c <__d2b+0x1e>
 80088c0:	6179      	str	r1, [r7, #20]
 80088c2:	e7e7      	b.n	8008894 <__d2b+0x46>
 80088c4:	a801      	add	r0, sp, #4
 80088c6:	f7ff fdda 	bl	800847e <__lo0bits>
 80088ca:	9b01      	ldr	r3, [sp, #4]
 80088cc:	617b      	str	r3, [r7, #20]
 80088ce:	2101      	movs	r1, #1
 80088d0:	6139      	str	r1, [r7, #16]
 80088d2:	3020      	adds	r0, #32
 80088d4:	e7e5      	b.n	80088a2 <__d2b+0x54>
 80088d6:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 80088da:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80088de:	6030      	str	r0, [r6, #0]
 80088e0:	6918      	ldr	r0, [r3, #16]
 80088e2:	f7ff fdad 	bl	8008440 <__hi0bits>
 80088e6:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 80088ea:	e7e1      	b.n	80088b0 <__d2b+0x62>

080088ec <_calloc_r>:
 80088ec:	b538      	push	{r3, r4, r5, lr}
 80088ee:	fb02 f401 	mul.w	r4, r2, r1
 80088f2:	4621      	mov	r1, r4
 80088f4:	f000 f856 	bl	80089a4 <_malloc_r>
 80088f8:	4605      	mov	r5, r0
 80088fa:	b118      	cbz	r0, 8008904 <_calloc_r+0x18>
 80088fc:	4622      	mov	r2, r4
 80088fe:	2100      	movs	r1, #0
 8008900:	f7fe fa39 	bl	8006d76 <memset>
 8008904:	4628      	mov	r0, r5
 8008906:	bd38      	pop	{r3, r4, r5, pc}

08008908 <_free_r>:
 8008908:	b538      	push	{r3, r4, r5, lr}
 800890a:	4605      	mov	r5, r0
 800890c:	2900      	cmp	r1, #0
 800890e:	d045      	beq.n	800899c <_free_r+0x94>
 8008910:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8008914:	1f0c      	subs	r4, r1, #4
 8008916:	2b00      	cmp	r3, #0
 8008918:	bfb8      	it	lt
 800891a:	18e4      	addlt	r4, r4, r3
 800891c:	f000 fa29 	bl	8008d72 <__malloc_lock>
 8008920:	4a1f      	ldr	r2, [pc, #124]	; (80089a0 <_free_r+0x98>)
 8008922:	6813      	ldr	r3, [r2, #0]
 8008924:	4610      	mov	r0, r2
 8008926:	b933      	cbnz	r3, 8008936 <_free_r+0x2e>
 8008928:	6063      	str	r3, [r4, #4]
 800892a:	6014      	str	r4, [r2, #0]
 800892c:	4628      	mov	r0, r5
 800892e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008932:	f000 ba1f 	b.w	8008d74 <__malloc_unlock>
 8008936:	42a3      	cmp	r3, r4
 8008938:	d90c      	bls.n	8008954 <_free_r+0x4c>
 800893a:	6821      	ldr	r1, [r4, #0]
 800893c:	1862      	adds	r2, r4, r1
 800893e:	4293      	cmp	r3, r2
 8008940:	bf04      	itt	eq
 8008942:	681a      	ldreq	r2, [r3, #0]
 8008944:	685b      	ldreq	r3, [r3, #4]
 8008946:	6063      	str	r3, [r4, #4]
 8008948:	bf04      	itt	eq
 800894a:	1852      	addeq	r2, r2, r1
 800894c:	6022      	streq	r2, [r4, #0]
 800894e:	6004      	str	r4, [r0, #0]
 8008950:	e7ec      	b.n	800892c <_free_r+0x24>
 8008952:	4613      	mov	r3, r2
 8008954:	685a      	ldr	r2, [r3, #4]
 8008956:	b10a      	cbz	r2, 800895c <_free_r+0x54>
 8008958:	42a2      	cmp	r2, r4
 800895a:	d9fa      	bls.n	8008952 <_free_r+0x4a>
 800895c:	6819      	ldr	r1, [r3, #0]
 800895e:	1858      	adds	r0, r3, r1
 8008960:	42a0      	cmp	r0, r4
 8008962:	d10b      	bne.n	800897c <_free_r+0x74>
 8008964:	6820      	ldr	r0, [r4, #0]
 8008966:	4401      	add	r1, r0
 8008968:	1858      	adds	r0, r3, r1
 800896a:	4282      	cmp	r2, r0
 800896c:	6019      	str	r1, [r3, #0]
 800896e:	d1dd      	bne.n	800892c <_free_r+0x24>
 8008970:	6810      	ldr	r0, [r2, #0]
 8008972:	6852      	ldr	r2, [r2, #4]
 8008974:	605a      	str	r2, [r3, #4]
 8008976:	4401      	add	r1, r0
 8008978:	6019      	str	r1, [r3, #0]
 800897a:	e7d7      	b.n	800892c <_free_r+0x24>
 800897c:	d902      	bls.n	8008984 <_free_r+0x7c>
 800897e:	230c      	movs	r3, #12
 8008980:	602b      	str	r3, [r5, #0]
 8008982:	e7d3      	b.n	800892c <_free_r+0x24>
 8008984:	6820      	ldr	r0, [r4, #0]
 8008986:	1821      	adds	r1, r4, r0
 8008988:	428a      	cmp	r2, r1
 800898a:	bf04      	itt	eq
 800898c:	6811      	ldreq	r1, [r2, #0]
 800898e:	6852      	ldreq	r2, [r2, #4]
 8008990:	6062      	str	r2, [r4, #4]
 8008992:	bf04      	itt	eq
 8008994:	1809      	addeq	r1, r1, r0
 8008996:	6021      	streq	r1, [r4, #0]
 8008998:	605c      	str	r4, [r3, #4]
 800899a:	e7c7      	b.n	800892c <_free_r+0x24>
 800899c:	bd38      	pop	{r3, r4, r5, pc}
 800899e:	bf00      	nop
 80089a0:	20001b30 	.word	0x20001b30

080089a4 <_malloc_r>:
 80089a4:	b570      	push	{r4, r5, r6, lr}
 80089a6:	1ccd      	adds	r5, r1, #3
 80089a8:	f025 0503 	bic.w	r5, r5, #3
 80089ac:	3508      	adds	r5, #8
 80089ae:	2d0c      	cmp	r5, #12
 80089b0:	bf38      	it	cc
 80089b2:	250c      	movcc	r5, #12
 80089b4:	2d00      	cmp	r5, #0
 80089b6:	4606      	mov	r6, r0
 80089b8:	db01      	blt.n	80089be <_malloc_r+0x1a>
 80089ba:	42a9      	cmp	r1, r5
 80089bc:	d903      	bls.n	80089c6 <_malloc_r+0x22>
 80089be:	230c      	movs	r3, #12
 80089c0:	6033      	str	r3, [r6, #0]
 80089c2:	2000      	movs	r0, #0
 80089c4:	bd70      	pop	{r4, r5, r6, pc}
 80089c6:	f000 f9d4 	bl	8008d72 <__malloc_lock>
 80089ca:	4a21      	ldr	r2, [pc, #132]	; (8008a50 <_malloc_r+0xac>)
 80089cc:	6814      	ldr	r4, [r2, #0]
 80089ce:	4621      	mov	r1, r4
 80089d0:	b991      	cbnz	r1, 80089f8 <_malloc_r+0x54>
 80089d2:	4c20      	ldr	r4, [pc, #128]	; (8008a54 <_malloc_r+0xb0>)
 80089d4:	6823      	ldr	r3, [r4, #0]
 80089d6:	b91b      	cbnz	r3, 80089e0 <_malloc_r+0x3c>
 80089d8:	4630      	mov	r0, r6
 80089da:	f000 f98f 	bl	8008cfc <_sbrk_r>
 80089de:	6020      	str	r0, [r4, #0]
 80089e0:	4629      	mov	r1, r5
 80089e2:	4630      	mov	r0, r6
 80089e4:	f000 f98a 	bl	8008cfc <_sbrk_r>
 80089e8:	1c43      	adds	r3, r0, #1
 80089ea:	d124      	bne.n	8008a36 <_malloc_r+0x92>
 80089ec:	230c      	movs	r3, #12
 80089ee:	6033      	str	r3, [r6, #0]
 80089f0:	4630      	mov	r0, r6
 80089f2:	f000 f9bf 	bl	8008d74 <__malloc_unlock>
 80089f6:	e7e4      	b.n	80089c2 <_malloc_r+0x1e>
 80089f8:	680b      	ldr	r3, [r1, #0]
 80089fa:	1b5b      	subs	r3, r3, r5
 80089fc:	d418      	bmi.n	8008a30 <_malloc_r+0x8c>
 80089fe:	2b0b      	cmp	r3, #11
 8008a00:	d90f      	bls.n	8008a22 <_malloc_r+0x7e>
 8008a02:	600b      	str	r3, [r1, #0]
 8008a04:	50cd      	str	r5, [r1, r3]
 8008a06:	18cc      	adds	r4, r1, r3
 8008a08:	4630      	mov	r0, r6
 8008a0a:	f000 f9b3 	bl	8008d74 <__malloc_unlock>
 8008a0e:	f104 000b 	add.w	r0, r4, #11
 8008a12:	1d23      	adds	r3, r4, #4
 8008a14:	f020 0007 	bic.w	r0, r0, #7
 8008a18:	1ac3      	subs	r3, r0, r3
 8008a1a:	d0d3      	beq.n	80089c4 <_malloc_r+0x20>
 8008a1c:	425a      	negs	r2, r3
 8008a1e:	50e2      	str	r2, [r4, r3]
 8008a20:	e7d0      	b.n	80089c4 <_malloc_r+0x20>
 8008a22:	428c      	cmp	r4, r1
 8008a24:	684b      	ldr	r3, [r1, #4]
 8008a26:	bf16      	itet	ne
 8008a28:	6063      	strne	r3, [r4, #4]
 8008a2a:	6013      	streq	r3, [r2, #0]
 8008a2c:	460c      	movne	r4, r1
 8008a2e:	e7eb      	b.n	8008a08 <_malloc_r+0x64>
 8008a30:	460c      	mov	r4, r1
 8008a32:	6849      	ldr	r1, [r1, #4]
 8008a34:	e7cc      	b.n	80089d0 <_malloc_r+0x2c>
 8008a36:	1cc4      	adds	r4, r0, #3
 8008a38:	f024 0403 	bic.w	r4, r4, #3
 8008a3c:	42a0      	cmp	r0, r4
 8008a3e:	d005      	beq.n	8008a4c <_malloc_r+0xa8>
 8008a40:	1a21      	subs	r1, r4, r0
 8008a42:	4630      	mov	r0, r6
 8008a44:	f000 f95a 	bl	8008cfc <_sbrk_r>
 8008a48:	3001      	adds	r0, #1
 8008a4a:	d0cf      	beq.n	80089ec <_malloc_r+0x48>
 8008a4c:	6025      	str	r5, [r4, #0]
 8008a4e:	e7db      	b.n	8008a08 <_malloc_r+0x64>
 8008a50:	20001b30 	.word	0x20001b30
 8008a54:	20001b34 	.word	0x20001b34

08008a58 <__ssputs_r>:
 8008a58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008a5c:	688e      	ldr	r6, [r1, #8]
 8008a5e:	429e      	cmp	r6, r3
 8008a60:	4682      	mov	sl, r0
 8008a62:	460c      	mov	r4, r1
 8008a64:	4690      	mov	r8, r2
 8008a66:	4699      	mov	r9, r3
 8008a68:	d837      	bhi.n	8008ada <__ssputs_r+0x82>
 8008a6a:	898a      	ldrh	r2, [r1, #12]
 8008a6c:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8008a70:	d031      	beq.n	8008ad6 <__ssputs_r+0x7e>
 8008a72:	6825      	ldr	r5, [r4, #0]
 8008a74:	6909      	ldr	r1, [r1, #16]
 8008a76:	1a6f      	subs	r7, r5, r1
 8008a78:	6965      	ldr	r5, [r4, #20]
 8008a7a:	2302      	movs	r3, #2
 8008a7c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8008a80:	fb95 f5f3 	sdiv	r5, r5, r3
 8008a84:	f109 0301 	add.w	r3, r9, #1
 8008a88:	443b      	add	r3, r7
 8008a8a:	429d      	cmp	r5, r3
 8008a8c:	bf38      	it	cc
 8008a8e:	461d      	movcc	r5, r3
 8008a90:	0553      	lsls	r3, r2, #21
 8008a92:	d530      	bpl.n	8008af6 <__ssputs_r+0x9e>
 8008a94:	4629      	mov	r1, r5
 8008a96:	f7ff ff85 	bl	80089a4 <_malloc_r>
 8008a9a:	4606      	mov	r6, r0
 8008a9c:	b950      	cbnz	r0, 8008ab4 <__ssputs_r+0x5c>
 8008a9e:	230c      	movs	r3, #12
 8008aa0:	f8ca 3000 	str.w	r3, [sl]
 8008aa4:	89a3      	ldrh	r3, [r4, #12]
 8008aa6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008aaa:	81a3      	strh	r3, [r4, #12]
 8008aac:	f04f 30ff 	mov.w	r0, #4294967295
 8008ab0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008ab4:	463a      	mov	r2, r7
 8008ab6:	6921      	ldr	r1, [r4, #16]
 8008ab8:	f7fe f952 	bl	8006d60 <memcpy>
 8008abc:	89a3      	ldrh	r3, [r4, #12]
 8008abe:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8008ac2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008ac6:	81a3      	strh	r3, [r4, #12]
 8008ac8:	6126      	str	r6, [r4, #16]
 8008aca:	6165      	str	r5, [r4, #20]
 8008acc:	443e      	add	r6, r7
 8008ace:	1bed      	subs	r5, r5, r7
 8008ad0:	6026      	str	r6, [r4, #0]
 8008ad2:	60a5      	str	r5, [r4, #8]
 8008ad4:	464e      	mov	r6, r9
 8008ad6:	454e      	cmp	r6, r9
 8008ad8:	d900      	bls.n	8008adc <__ssputs_r+0x84>
 8008ada:	464e      	mov	r6, r9
 8008adc:	4632      	mov	r2, r6
 8008ade:	4641      	mov	r1, r8
 8008ae0:	6820      	ldr	r0, [r4, #0]
 8008ae2:	f000 f92d 	bl	8008d40 <memmove>
 8008ae6:	68a3      	ldr	r3, [r4, #8]
 8008ae8:	1b9b      	subs	r3, r3, r6
 8008aea:	60a3      	str	r3, [r4, #8]
 8008aec:	6823      	ldr	r3, [r4, #0]
 8008aee:	441e      	add	r6, r3
 8008af0:	6026      	str	r6, [r4, #0]
 8008af2:	2000      	movs	r0, #0
 8008af4:	e7dc      	b.n	8008ab0 <__ssputs_r+0x58>
 8008af6:	462a      	mov	r2, r5
 8008af8:	f000 f93d 	bl	8008d76 <_realloc_r>
 8008afc:	4606      	mov	r6, r0
 8008afe:	2800      	cmp	r0, #0
 8008b00:	d1e2      	bne.n	8008ac8 <__ssputs_r+0x70>
 8008b02:	6921      	ldr	r1, [r4, #16]
 8008b04:	4650      	mov	r0, sl
 8008b06:	f7ff feff 	bl	8008908 <_free_r>
 8008b0a:	e7c8      	b.n	8008a9e <__ssputs_r+0x46>

08008b0c <_svfiprintf_r>:
 8008b0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008b10:	461d      	mov	r5, r3
 8008b12:	898b      	ldrh	r3, [r1, #12]
 8008b14:	061f      	lsls	r7, r3, #24
 8008b16:	b09d      	sub	sp, #116	; 0x74
 8008b18:	4680      	mov	r8, r0
 8008b1a:	460c      	mov	r4, r1
 8008b1c:	4616      	mov	r6, r2
 8008b1e:	d50f      	bpl.n	8008b40 <_svfiprintf_r+0x34>
 8008b20:	690b      	ldr	r3, [r1, #16]
 8008b22:	b96b      	cbnz	r3, 8008b40 <_svfiprintf_r+0x34>
 8008b24:	2140      	movs	r1, #64	; 0x40
 8008b26:	f7ff ff3d 	bl	80089a4 <_malloc_r>
 8008b2a:	6020      	str	r0, [r4, #0]
 8008b2c:	6120      	str	r0, [r4, #16]
 8008b2e:	b928      	cbnz	r0, 8008b3c <_svfiprintf_r+0x30>
 8008b30:	230c      	movs	r3, #12
 8008b32:	f8c8 3000 	str.w	r3, [r8]
 8008b36:	f04f 30ff 	mov.w	r0, #4294967295
 8008b3a:	e0c8      	b.n	8008cce <_svfiprintf_r+0x1c2>
 8008b3c:	2340      	movs	r3, #64	; 0x40
 8008b3e:	6163      	str	r3, [r4, #20]
 8008b40:	2300      	movs	r3, #0
 8008b42:	9309      	str	r3, [sp, #36]	; 0x24
 8008b44:	2320      	movs	r3, #32
 8008b46:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8008b4a:	2330      	movs	r3, #48	; 0x30
 8008b4c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8008b50:	9503      	str	r5, [sp, #12]
 8008b52:	f04f 0b01 	mov.w	fp, #1
 8008b56:	4637      	mov	r7, r6
 8008b58:	463d      	mov	r5, r7
 8008b5a:	f815 3b01 	ldrb.w	r3, [r5], #1
 8008b5e:	b10b      	cbz	r3, 8008b64 <_svfiprintf_r+0x58>
 8008b60:	2b25      	cmp	r3, #37	; 0x25
 8008b62:	d13e      	bne.n	8008be2 <_svfiprintf_r+0xd6>
 8008b64:	ebb7 0a06 	subs.w	sl, r7, r6
 8008b68:	d00b      	beq.n	8008b82 <_svfiprintf_r+0x76>
 8008b6a:	4653      	mov	r3, sl
 8008b6c:	4632      	mov	r2, r6
 8008b6e:	4621      	mov	r1, r4
 8008b70:	4640      	mov	r0, r8
 8008b72:	f7ff ff71 	bl	8008a58 <__ssputs_r>
 8008b76:	3001      	adds	r0, #1
 8008b78:	f000 80a4 	beq.w	8008cc4 <_svfiprintf_r+0x1b8>
 8008b7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008b7e:	4453      	add	r3, sl
 8008b80:	9309      	str	r3, [sp, #36]	; 0x24
 8008b82:	783b      	ldrb	r3, [r7, #0]
 8008b84:	2b00      	cmp	r3, #0
 8008b86:	f000 809d 	beq.w	8008cc4 <_svfiprintf_r+0x1b8>
 8008b8a:	2300      	movs	r3, #0
 8008b8c:	f04f 32ff 	mov.w	r2, #4294967295
 8008b90:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8008b94:	9304      	str	r3, [sp, #16]
 8008b96:	9307      	str	r3, [sp, #28]
 8008b98:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8008b9c:	931a      	str	r3, [sp, #104]	; 0x68
 8008b9e:	462f      	mov	r7, r5
 8008ba0:	2205      	movs	r2, #5
 8008ba2:	f817 1b01 	ldrb.w	r1, [r7], #1
 8008ba6:	4850      	ldr	r0, [pc, #320]	; (8008ce8 <_svfiprintf_r+0x1dc>)
 8008ba8:	f7f7 fb22 	bl	80001f0 <memchr>
 8008bac:	9b04      	ldr	r3, [sp, #16]
 8008bae:	b9d0      	cbnz	r0, 8008be6 <_svfiprintf_r+0xda>
 8008bb0:	06d9      	lsls	r1, r3, #27
 8008bb2:	bf44      	itt	mi
 8008bb4:	2220      	movmi	r2, #32
 8008bb6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8008bba:	071a      	lsls	r2, r3, #28
 8008bbc:	bf44      	itt	mi
 8008bbe:	222b      	movmi	r2, #43	; 0x2b
 8008bc0:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8008bc4:	782a      	ldrb	r2, [r5, #0]
 8008bc6:	2a2a      	cmp	r2, #42	; 0x2a
 8008bc8:	d015      	beq.n	8008bf6 <_svfiprintf_r+0xea>
 8008bca:	9a07      	ldr	r2, [sp, #28]
 8008bcc:	462f      	mov	r7, r5
 8008bce:	2000      	movs	r0, #0
 8008bd0:	250a      	movs	r5, #10
 8008bd2:	4639      	mov	r1, r7
 8008bd4:	f811 3b01 	ldrb.w	r3, [r1], #1
 8008bd8:	3b30      	subs	r3, #48	; 0x30
 8008bda:	2b09      	cmp	r3, #9
 8008bdc:	d94d      	bls.n	8008c7a <_svfiprintf_r+0x16e>
 8008bde:	b1b8      	cbz	r0, 8008c10 <_svfiprintf_r+0x104>
 8008be0:	e00f      	b.n	8008c02 <_svfiprintf_r+0xf6>
 8008be2:	462f      	mov	r7, r5
 8008be4:	e7b8      	b.n	8008b58 <_svfiprintf_r+0x4c>
 8008be6:	4a40      	ldr	r2, [pc, #256]	; (8008ce8 <_svfiprintf_r+0x1dc>)
 8008be8:	1a80      	subs	r0, r0, r2
 8008bea:	fa0b f000 	lsl.w	r0, fp, r0
 8008bee:	4318      	orrs	r0, r3
 8008bf0:	9004      	str	r0, [sp, #16]
 8008bf2:	463d      	mov	r5, r7
 8008bf4:	e7d3      	b.n	8008b9e <_svfiprintf_r+0x92>
 8008bf6:	9a03      	ldr	r2, [sp, #12]
 8008bf8:	1d11      	adds	r1, r2, #4
 8008bfa:	6812      	ldr	r2, [r2, #0]
 8008bfc:	9103      	str	r1, [sp, #12]
 8008bfe:	2a00      	cmp	r2, #0
 8008c00:	db01      	blt.n	8008c06 <_svfiprintf_r+0xfa>
 8008c02:	9207      	str	r2, [sp, #28]
 8008c04:	e004      	b.n	8008c10 <_svfiprintf_r+0x104>
 8008c06:	4252      	negs	r2, r2
 8008c08:	f043 0302 	orr.w	r3, r3, #2
 8008c0c:	9207      	str	r2, [sp, #28]
 8008c0e:	9304      	str	r3, [sp, #16]
 8008c10:	783b      	ldrb	r3, [r7, #0]
 8008c12:	2b2e      	cmp	r3, #46	; 0x2e
 8008c14:	d10c      	bne.n	8008c30 <_svfiprintf_r+0x124>
 8008c16:	787b      	ldrb	r3, [r7, #1]
 8008c18:	2b2a      	cmp	r3, #42	; 0x2a
 8008c1a:	d133      	bne.n	8008c84 <_svfiprintf_r+0x178>
 8008c1c:	9b03      	ldr	r3, [sp, #12]
 8008c1e:	1d1a      	adds	r2, r3, #4
 8008c20:	681b      	ldr	r3, [r3, #0]
 8008c22:	9203      	str	r2, [sp, #12]
 8008c24:	2b00      	cmp	r3, #0
 8008c26:	bfb8      	it	lt
 8008c28:	f04f 33ff 	movlt.w	r3, #4294967295
 8008c2c:	3702      	adds	r7, #2
 8008c2e:	9305      	str	r3, [sp, #20]
 8008c30:	4d2e      	ldr	r5, [pc, #184]	; (8008cec <_svfiprintf_r+0x1e0>)
 8008c32:	7839      	ldrb	r1, [r7, #0]
 8008c34:	2203      	movs	r2, #3
 8008c36:	4628      	mov	r0, r5
 8008c38:	f7f7 fada 	bl	80001f0 <memchr>
 8008c3c:	b138      	cbz	r0, 8008c4e <_svfiprintf_r+0x142>
 8008c3e:	2340      	movs	r3, #64	; 0x40
 8008c40:	1b40      	subs	r0, r0, r5
 8008c42:	fa03 f000 	lsl.w	r0, r3, r0
 8008c46:	9b04      	ldr	r3, [sp, #16]
 8008c48:	4303      	orrs	r3, r0
 8008c4a:	3701      	adds	r7, #1
 8008c4c:	9304      	str	r3, [sp, #16]
 8008c4e:	7839      	ldrb	r1, [r7, #0]
 8008c50:	4827      	ldr	r0, [pc, #156]	; (8008cf0 <_svfiprintf_r+0x1e4>)
 8008c52:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8008c56:	2206      	movs	r2, #6
 8008c58:	1c7e      	adds	r6, r7, #1
 8008c5a:	f7f7 fac9 	bl	80001f0 <memchr>
 8008c5e:	2800      	cmp	r0, #0
 8008c60:	d038      	beq.n	8008cd4 <_svfiprintf_r+0x1c8>
 8008c62:	4b24      	ldr	r3, [pc, #144]	; (8008cf4 <_svfiprintf_r+0x1e8>)
 8008c64:	bb13      	cbnz	r3, 8008cac <_svfiprintf_r+0x1a0>
 8008c66:	9b03      	ldr	r3, [sp, #12]
 8008c68:	3307      	adds	r3, #7
 8008c6a:	f023 0307 	bic.w	r3, r3, #7
 8008c6e:	3308      	adds	r3, #8
 8008c70:	9303      	str	r3, [sp, #12]
 8008c72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008c74:	444b      	add	r3, r9
 8008c76:	9309      	str	r3, [sp, #36]	; 0x24
 8008c78:	e76d      	b.n	8008b56 <_svfiprintf_r+0x4a>
 8008c7a:	fb05 3202 	mla	r2, r5, r2, r3
 8008c7e:	2001      	movs	r0, #1
 8008c80:	460f      	mov	r7, r1
 8008c82:	e7a6      	b.n	8008bd2 <_svfiprintf_r+0xc6>
 8008c84:	2300      	movs	r3, #0
 8008c86:	3701      	adds	r7, #1
 8008c88:	9305      	str	r3, [sp, #20]
 8008c8a:	4619      	mov	r1, r3
 8008c8c:	250a      	movs	r5, #10
 8008c8e:	4638      	mov	r0, r7
 8008c90:	f810 2b01 	ldrb.w	r2, [r0], #1
 8008c94:	3a30      	subs	r2, #48	; 0x30
 8008c96:	2a09      	cmp	r2, #9
 8008c98:	d903      	bls.n	8008ca2 <_svfiprintf_r+0x196>
 8008c9a:	2b00      	cmp	r3, #0
 8008c9c:	d0c8      	beq.n	8008c30 <_svfiprintf_r+0x124>
 8008c9e:	9105      	str	r1, [sp, #20]
 8008ca0:	e7c6      	b.n	8008c30 <_svfiprintf_r+0x124>
 8008ca2:	fb05 2101 	mla	r1, r5, r1, r2
 8008ca6:	2301      	movs	r3, #1
 8008ca8:	4607      	mov	r7, r0
 8008caa:	e7f0      	b.n	8008c8e <_svfiprintf_r+0x182>
 8008cac:	ab03      	add	r3, sp, #12
 8008cae:	9300      	str	r3, [sp, #0]
 8008cb0:	4622      	mov	r2, r4
 8008cb2:	4b11      	ldr	r3, [pc, #68]	; (8008cf8 <_svfiprintf_r+0x1ec>)
 8008cb4:	a904      	add	r1, sp, #16
 8008cb6:	4640      	mov	r0, r8
 8008cb8:	f7fe f8fa 	bl	8006eb0 <_printf_float>
 8008cbc:	f1b0 3fff 	cmp.w	r0, #4294967295
 8008cc0:	4681      	mov	r9, r0
 8008cc2:	d1d6      	bne.n	8008c72 <_svfiprintf_r+0x166>
 8008cc4:	89a3      	ldrh	r3, [r4, #12]
 8008cc6:	065b      	lsls	r3, r3, #25
 8008cc8:	f53f af35 	bmi.w	8008b36 <_svfiprintf_r+0x2a>
 8008ccc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8008cce:	b01d      	add	sp, #116	; 0x74
 8008cd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008cd4:	ab03      	add	r3, sp, #12
 8008cd6:	9300      	str	r3, [sp, #0]
 8008cd8:	4622      	mov	r2, r4
 8008cda:	4b07      	ldr	r3, [pc, #28]	; (8008cf8 <_svfiprintf_r+0x1ec>)
 8008cdc:	a904      	add	r1, sp, #16
 8008cde:	4640      	mov	r0, r8
 8008ce0:	f7fe fb9c 	bl	800741c <_printf_i>
 8008ce4:	e7ea      	b.n	8008cbc <_svfiprintf_r+0x1b0>
 8008ce6:	bf00      	nop
 8008ce8:	080090bc 	.word	0x080090bc
 8008cec:	080090c2 	.word	0x080090c2
 8008cf0:	080090c6 	.word	0x080090c6
 8008cf4:	08006eb1 	.word	0x08006eb1
 8008cf8:	08008a59 	.word	0x08008a59

08008cfc <_sbrk_r>:
 8008cfc:	b538      	push	{r3, r4, r5, lr}
 8008cfe:	4c06      	ldr	r4, [pc, #24]	; (8008d18 <_sbrk_r+0x1c>)
 8008d00:	2300      	movs	r3, #0
 8008d02:	4605      	mov	r5, r0
 8008d04:	4608      	mov	r0, r1
 8008d06:	6023      	str	r3, [r4, #0]
 8008d08:	f7f8 fd20 	bl	800174c <_sbrk>
 8008d0c:	1c43      	adds	r3, r0, #1
 8008d0e:	d102      	bne.n	8008d16 <_sbrk_r+0x1a>
 8008d10:	6823      	ldr	r3, [r4, #0]
 8008d12:	b103      	cbz	r3, 8008d16 <_sbrk_r+0x1a>
 8008d14:	602b      	str	r3, [r5, #0]
 8008d16:	bd38      	pop	{r3, r4, r5, pc}
 8008d18:	20001db8 	.word	0x20001db8

08008d1c <__ascii_mbtowc>:
 8008d1c:	b082      	sub	sp, #8
 8008d1e:	b901      	cbnz	r1, 8008d22 <__ascii_mbtowc+0x6>
 8008d20:	a901      	add	r1, sp, #4
 8008d22:	b142      	cbz	r2, 8008d36 <__ascii_mbtowc+0x1a>
 8008d24:	b14b      	cbz	r3, 8008d3a <__ascii_mbtowc+0x1e>
 8008d26:	7813      	ldrb	r3, [r2, #0]
 8008d28:	600b      	str	r3, [r1, #0]
 8008d2a:	7812      	ldrb	r2, [r2, #0]
 8008d2c:	1c10      	adds	r0, r2, #0
 8008d2e:	bf18      	it	ne
 8008d30:	2001      	movne	r0, #1
 8008d32:	b002      	add	sp, #8
 8008d34:	4770      	bx	lr
 8008d36:	4610      	mov	r0, r2
 8008d38:	e7fb      	b.n	8008d32 <__ascii_mbtowc+0x16>
 8008d3a:	f06f 0001 	mvn.w	r0, #1
 8008d3e:	e7f8      	b.n	8008d32 <__ascii_mbtowc+0x16>

08008d40 <memmove>:
 8008d40:	4288      	cmp	r0, r1
 8008d42:	b510      	push	{r4, lr}
 8008d44:	eb01 0302 	add.w	r3, r1, r2
 8008d48:	d807      	bhi.n	8008d5a <memmove+0x1a>
 8008d4a:	1e42      	subs	r2, r0, #1
 8008d4c:	4299      	cmp	r1, r3
 8008d4e:	d00a      	beq.n	8008d66 <memmove+0x26>
 8008d50:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008d54:	f802 4f01 	strb.w	r4, [r2, #1]!
 8008d58:	e7f8      	b.n	8008d4c <memmove+0xc>
 8008d5a:	4283      	cmp	r3, r0
 8008d5c:	d9f5      	bls.n	8008d4a <memmove+0xa>
 8008d5e:	1881      	adds	r1, r0, r2
 8008d60:	1ad2      	subs	r2, r2, r3
 8008d62:	42d3      	cmn	r3, r2
 8008d64:	d100      	bne.n	8008d68 <memmove+0x28>
 8008d66:	bd10      	pop	{r4, pc}
 8008d68:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8008d6c:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8008d70:	e7f7      	b.n	8008d62 <memmove+0x22>

08008d72 <__malloc_lock>:
 8008d72:	4770      	bx	lr

08008d74 <__malloc_unlock>:
 8008d74:	4770      	bx	lr

08008d76 <_realloc_r>:
 8008d76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008d78:	4607      	mov	r7, r0
 8008d7a:	4614      	mov	r4, r2
 8008d7c:	460e      	mov	r6, r1
 8008d7e:	b921      	cbnz	r1, 8008d8a <_realloc_r+0x14>
 8008d80:	4611      	mov	r1, r2
 8008d82:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8008d86:	f7ff be0d 	b.w	80089a4 <_malloc_r>
 8008d8a:	b922      	cbnz	r2, 8008d96 <_realloc_r+0x20>
 8008d8c:	f7ff fdbc 	bl	8008908 <_free_r>
 8008d90:	4625      	mov	r5, r4
 8008d92:	4628      	mov	r0, r5
 8008d94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008d96:	f000 f821 	bl	8008ddc <_malloc_usable_size_r>
 8008d9a:	42a0      	cmp	r0, r4
 8008d9c:	d20f      	bcs.n	8008dbe <_realloc_r+0x48>
 8008d9e:	4621      	mov	r1, r4
 8008da0:	4638      	mov	r0, r7
 8008da2:	f7ff fdff 	bl	80089a4 <_malloc_r>
 8008da6:	4605      	mov	r5, r0
 8008da8:	2800      	cmp	r0, #0
 8008daa:	d0f2      	beq.n	8008d92 <_realloc_r+0x1c>
 8008dac:	4631      	mov	r1, r6
 8008dae:	4622      	mov	r2, r4
 8008db0:	f7fd ffd6 	bl	8006d60 <memcpy>
 8008db4:	4631      	mov	r1, r6
 8008db6:	4638      	mov	r0, r7
 8008db8:	f7ff fda6 	bl	8008908 <_free_r>
 8008dbc:	e7e9      	b.n	8008d92 <_realloc_r+0x1c>
 8008dbe:	4635      	mov	r5, r6
 8008dc0:	e7e7      	b.n	8008d92 <_realloc_r+0x1c>

08008dc2 <__ascii_wctomb>:
 8008dc2:	b149      	cbz	r1, 8008dd8 <__ascii_wctomb+0x16>
 8008dc4:	2aff      	cmp	r2, #255	; 0xff
 8008dc6:	bf85      	ittet	hi
 8008dc8:	238a      	movhi	r3, #138	; 0x8a
 8008dca:	6003      	strhi	r3, [r0, #0]
 8008dcc:	700a      	strbls	r2, [r1, #0]
 8008dce:	f04f 30ff 	movhi.w	r0, #4294967295
 8008dd2:	bf98      	it	ls
 8008dd4:	2001      	movls	r0, #1
 8008dd6:	4770      	bx	lr
 8008dd8:	4608      	mov	r0, r1
 8008dda:	4770      	bx	lr

08008ddc <_malloc_usable_size_r>:
 8008ddc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8008de0:	1f18      	subs	r0, r3, #4
 8008de2:	2b00      	cmp	r3, #0
 8008de4:	bfbc      	itt	lt
 8008de6:	580b      	ldrlt	r3, [r1, r0]
 8008de8:	18c0      	addlt	r0, r0, r3
 8008dea:	4770      	bx	lr

08008dec <_init>:
 8008dec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008dee:	bf00      	nop
 8008df0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008df2:	bc08      	pop	{r3}
 8008df4:	469e      	mov	lr, r3
 8008df6:	4770      	bx	lr

08008df8 <_fini>:
 8008df8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008dfa:	bf00      	nop
 8008dfc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008dfe:	bc08      	pop	{r3}
 8008e00:	469e      	mov	lr, r3
 8008e02:	4770      	bx	lr
